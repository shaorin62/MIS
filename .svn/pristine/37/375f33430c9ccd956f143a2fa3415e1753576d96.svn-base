<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="PAYB0060">

<!--
/*******************************************************************************
     작 성 자 : 고민주
     작 성 일 : 2016.07.19
     내    용 : 건강보험납부 테이블 조회
********************************************************************************/
-->
    <select id="PAYB0060.SEARCH00" parameterClass="hashmap" resultClass="hashmap">
    <![CDATA[
        SELECT  /* PAYB0060.SEARCH00.건강보험납부 테이블 조회 */
               '0' AS CHK
             , SF_DECRYPT(RERN_NUMB) AS RERN_NUMB
             , EMPL_NUMB
             , EMPL_NAME
             , SUM(PAYX_MOAT) AS PAYX_MOAT
             , MAX(HTIN_NUMB) AS HTIN_NUMB    /* 보험증번호 */
             , ISTY_CODE                     /* 보험구분코드 */
             , SUM(HIDI_AMOT) AS HIDI_AMOT   /* 건강보험 */
             , SUM(RICP_AMOT) AS RICP_AMOT   /* 요양보험료 */
             , DECODE(ISTY_CODE, '01', SUM(HINP_AMOT), '02', SUM(HINA_AMOT), '03', SUM(HINB_AMOT)) AS HINP_AMOT
             , SUM(REPP_AMOT) AS REPP_AMOT   /* 장기요양보험료납부금액 */
             , NVL(SUM(HIDI_AMOT), 0) - DECODE(ISTY_CODE, '01', SUM(HINP_AMOT), '02', SUM(HINA_AMOT), '03', SUM(HINB_AMOT)) AS AMT1  /* 건강보험_차액 */
             , NVL(SUM(RICP_AMOT), 0) - NVL(SUM(REPP_AMOT), 0) AS AMT2  /* 장기요양보험료_차액 */
             , STDS_YMTH
             , SF_GET_COMMNAME('CLSD_CODE',CLSD_CODE) AS CLSD_NAME
          FROM (SELECT A.STDS_YMTH      /* 기준년월 */
                     , B.RERN_NUMB      /* 주민등록번호 */
                     , A.PAYX_MOAT      /* 보수월액 */
                     , A.HTIN_NUMB      /* 보험증번호 */
                     , A.ISTY_CODE      /* 보험구분 */
                     , A.HIDI_AMOT      /* 건강보험 */
                     , A.RICP_AMOT      /* 요양보험료 */
                     , 0 AS HINP_AMOT   /* 건강보험액 */
                     , 0 AS REPP_AMOT   /* 장기요양보험액 */
                     , 0 AS HINA_AMOT   /* 건강보험환급액 */
                     , 0 AS HINB_AMOT   /* 건강보험미수금 */
                     , A.EMPL_NUMB
                     , B.EMPL_NAME
                     , B.CLSD_CODE
                  FROM PY_NHICDE A            /* [건강보험납부] */
                 INNER JOIN HR_MASTXM B
                         ON A.EMPL_NUMB = B.EMPL_NUMB
                 INNER JOIN PY_MASTPM C       /* [급여기본정보] */
                         ON B.EMPL_NUMB = C.EMPL_NUMB
                 WHERE A.STDS_YMTH = #STDS_YMTH#
    ]]>
                <isNotEmpty prepend="AND" property="EMPL_NUMB">
                       A.EMPL_NUMB = #EMPL_NUMB#
                </isNotEmpty>
                <isNotEmpty prepend="AND" property="ISTY_CODE">
                       A.ISTY_CODE = #ISTY_CODE#
                </isNotEmpty>
        <![CDATA[
                 UNION ALL
                SELECT A.WAGE_YMTH AS STDS_YMTH  /* 급여년월 */
                     , B.RERN_NUMB
                     , 0 AS PAYX_MOAT   /* 지급일 */
                     , NULL AS HTIN_NUMB /* 보험증번호 */
                     , CAST(CASE WHEN A.EXPD_CODE IN ('D0303', 'D0305') THEN '01'
                                 WHEN A.EXPD_CODE = 'D1054' THEN '02'
                                 WHEN A.EXPD_CODE = 'D1101' THEN '03' END AS NVARCHAR2(6))
                         AS ISTY_CODE
                     , 0 AS HIDI_AMOT
                     , 0 AS RICP_AMOT
                     , CASE WHEN A.EXPD_CODE = 'D0303' THEN NVL(A.EXPD_AMOT,0) ELSE 0 END AS HINP_AMOT /* 건강보험액 */
                     , CASE WHEN A.EXPD_CODE = 'D0305' THEN NVL(A.EXPD_AMOT,0) ELSE 0 END AS REPP_AMOT /* 장기요양보험액 */
                     , CASE WHEN A.EXPD_CODE = 'D1054' THEN NVL(A.EXPD_AMOT,0) ELSE 0 END AS HINA_AMOT /* 건강보험환급액 */
                     , CASE WHEN A.EXPD_CODE = 'D1101' THEN NVL(A.EXPD_AMOT,0) ELSE 0 END AS HINB_AMOT /* 건강보험미수금 */
                     , A.EMPL_NUMB
                     , B.EMPL_NAME
                     , B.CLSD_CODE
                 FROM PY_PMDETL A        /* [급여상세] */
                INNER JOIN HR_MASTXM B
                        ON A.EMPL_NUMB = B.EMPL_NUMB
                INNER JOIN PY_MASTPM C   /* [급여기본정보] */
                        ON B.EMPL_NUMB = C.EMPL_NUMB
                WHERE A.WAGE_YMTH = #STDS_YMTH#
                  AND A.EXPD_AMOT <> 0
        ]]>
                <isNotEmpty prepend="AND" property="EMPL_NUMB">
                      A.EMPL_NUMB = #EMPL_NUMB#
                </isNotEmpty>
                <isNotEmpty prepend="AND" property="ISTY_CODE">
                      CASE WHEN A.EXPD_CODE = 'D0303' THEN '01' WHEN A.EXPD_CODE = 'D1054' THEN '02' WHEN A.EXPD_CODE = 'D1101' THEN '03' END = #ISTY_CODE#
                </isNotEmpty>
                  AND A.EXPD_CODE IN ('D0303', 'D0305', 'D1054', 'D1101')
                      ) Z
    <dynamic prepend="WHERE">
        <isNotEmpty prepend="AND" property="CLSD_CODE">
            Z.CLSD_CODE IN (SELECT COLUMN_VALUE FROM TABLE(SPLIT(#CLSD_CODE#, ',')))
        </isNotEmpty>
    </dynamic>
         GROUP BY STDS_YMTH, RERN_NUMB, EMPL_NUMB, EMPL_NAME, ISTY_CODE, CLSD_CODE
         ORDER BY EMPL_NAME
    </select>
<!--
/*******************************************************************************
     작 성 자 : 황치웅
     작 성 일 : 2016.11.25
     내     용 : 건강보험공제적용 주민등록번호 조회
********************************************************************************/
-->
    <select id="PAYB0060.SEARCH99" parameterClass="hashmap" resultClass="hashmap">
    <![CDATA[
        SELECT /* PAYB0060.SEARCH99.건강보험공제적용 주민등록번호 조회  */
               A.RERN_NUMB                 /* 주민등록번호 */
             , A.EMPL_NUMB                 /* 사원번호 */
             , A.EMPL_NAME                 /* 사원명 */
          FROM HR_MASTXM A                 /* [인사기본정보] */
         WHERE A.RERN_NUMB = #RERN_NUMB#
           AND SUBSTR(A.ENCO_DATE, 1,6 ) <= #STDS_YMTH# 
           AND NVL(SUBSTR(A.RETR_DATE, 1,6 ), '999912') >= #STDS_YMTH#
    ]]>
    </select>

<!--
/*******************************************************************************
     작 성 자 : 고민주
     작 성 일 : 2016.07.19
     내    용 : 건강보험납부 테이블 저장
********************************************************************************/
-->
    <insert id="PAYB0060.SAVE00" parameterClass="hashmap" >
    <![CDATA[
        DECLARE /* PAYB0060.SAVE00.건강보험납부 테이블 저장 */
            v_ROWCNT INT;
            v_WADE_YSNO INTEGER;

        BEGIN
            /*급여마감여부체크*/
            SELECT COUNT(*)
              INTO v_WADE_YSNO
              FROM PY_PMDIRY A
              INNER JOIN PY_PAYCOD B
                ON A.WAGE_CODE = B.WAGE_CODE
             WHERE A.WADE_YSNO = '1'
               AND A.WAGE_YMTH = #STDS_YMTH#
               AND B.WAGP_CODE = '1000'
            ;

            /*마감되었다면 수정불가*/
            IF v_WADE_YSNO > 0 THEN
                RAISE_APPLICATION_ERROR(-20000, SF_GET_MESSAGE('PAY045','건강보험공제적용,저장'));
            END IF;

            SELECT COUNT(*) INTO v_ROWCNT
              FROM PY_NHICDE   /* [건강보험납부] */
             WHERE STDS_YMTH = #STDS_YMTH#       /* 기준년월 */
               AND EMPL_NUMB = #EMPL_NUMB#       /* 사원번호 */
               AND ISTY_CODE = #ISTY_CODE#;      /* 보험구분코드 */

            IF v_ROWCNT > 0 THEN
                UPDATE PY_NHICDE    /* [건강보험납부] */
                   SET PAYX_MOAT = #PAYX_MOAT#    /* 보수월액 */
                     , HTIN_NUMB = #HTIN_NUMB#    /* 보험증번호 */
                     , HIDI_AMOT = #HIDI_AMOT#    /* 건강보험고지금액 */
                     , RICP_AMOT = #RICP_AMOT#    /* 요양보험고지금액 */
                     , UPDT_USID = #UPDT_USID#    /* 수정작업자 */
                     , UPDT_DATE = SYSDATE        /* 수정일시 */
                 WHERE STDS_YMTH = #STDS_YMTH#    /* 기준년월 */
                   AND EMPL_NUMB = #EMPL_NUMB#    /* 사원번호 */
                   AND ISTY_CODE = #ISTY_CODE#    /* 보험구분코드 */
                   ;
            ELSE
             INSERT INTO PY_NHICDE ( /* [건강보험납부] */
                         STDS_YMTH     /* 기준년월 */
                       , EMPL_NUMB     /* 사원번호 */
                       , HTIN_NUMB     /* 보험증번호 */
                       , ISTY_CODE     /* 보험구분코드 */
                       , PAYX_MOAT     /* 보수월액 */
                       , HIDI_AMOT     /* 건강보험고지금액 */
                       , RICP_AMOT     /* 요양보험고지금액 */
                       , INST_USID     /* 입력작업자 */
                       , INST_DATE     /* 입력일시 */
                       , UPDT_USID     /* 수정작업자 */
                       , UPDT_DATE     /* 수정일시 */
                ) VALUES (
                         #STDS_YMTH# /* 기준년월 */
                       , #EMPL_NUMB# /* 사원번호 */
                       , #HTIN_NUMB# /* 보험증번호 */
                       , #ISTY_CODE# /* 보험구분코드 */
                       , #PAYX_MOAT# /* 보수월액 */
                       , #HIDI_AMOT# /* 건강보험고지금액 */
                       , #RICP_AMOT# /* 요양보험고지금액 */
                       , #UPDT_USID# /* 입력작업자 */
                       , SYSDATE     /* 입력일시 */
                       , #UPDT_USID# /* 수정작업자 */
                       , SYSDATE     /* 수정일시 */
                );
            END IF;
        END;
    ]]>
    </insert>

<!--
/*******************************************************************************
     작 성 자 : 고민주
     작 성 일 : 2016.07.19
     내    용 : 건강보험납부 테이블 삭제
********************************************************************************/
-->
    <delete id="PAYB0060.DELETE00" parameterClass="hashmap">
    <![CDATA[
        DECLARE /* PAYB0060.DELETE00.건강보험납부 테이블 삭제 *//* [건강보험납부] */
            v_WADE_YSNO INTEGER;

        BEGIN
            /*급여마감여부체크*/
            SELECT COUNT(*)
              INTO v_WADE_YSNO
              FROM PY_PMDIRY A
              INNER JOIN PY_PAYCOD B
                ON A.WAGE_CODE = B.WAGE_CODE
             WHERE A.WADE_YSNO = '1'
               AND A.WAGE_YMTH >= #STDS_YMTH#
               AND B.WAGP_CODE = '1000'
            ;

            /*마감되었다면 수정불가*/
            IF v_WADE_YSNO > 0 THEN
                RAISE_APPLICATION_ERROR(-20000, SF_GET_MESSAGE('PAY045','건강보험공제적용,삭제'));
            END IF;

           DELETE FROM PY_NHICDE
            WHERE STDS_YMTH = #STDS_YMTH#    /* 기준년월 */
              AND EMPL_NUMB = #EMPL_NUMB#    /* 사원번호 */
            ;
        END;
    ]]>
    </delete>
</sqlMap>