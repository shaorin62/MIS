<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap namespace="PAYJ0040">

<!--
 *   프로그램명 : 사원별인건비실적 데이터 처리 SQLMAP
 *   작 성 일 : 2016.08.02
 *   작 성 자 : 고민주
 *   비   고 :
 *   Copyright (c) 2016 Inbus Co.,Ltd All Rights reserved.
 -->
	<!--
	 작 성 자 : 고민주
	 작 성 일 : 2016.08.02
	 내    용 : 급여 항목 조회
	 파라미터 : 
	-->
	<select id="PAYJ0040.SEARCH00" parameterClass="hashmap" resultClass="hashmap">
	<![CDATA[
			SELECT DISTINCT C.EXPD_CODE
				  ,C.EXPD_NAME
			      ,C.SORT_ORDR    
			  FROM PY_EMPAVG A    
			 INNER JOIN PY_EMPDTL B  
			    ON A.STDS_YMTH = B.STDS_YMTH
			   AND A.EMPL_NUMB = B.EMPL_NUMB
			  LEFT OUTER JOIN PY_ALLDED C
			    ON B.EXPD_CODE = C.EXPD_CODE		  
			  LEFT OUTER JOIN VI_DEPTXM D  
			    ON A.DEPT_CODE = D.DEPT_CODE
			 WHERE A.CLSD_CODE <> '99'	/*용역제외*/
			   AND A.STDS_YMTH BETWEEN #PAYX_YMTH1# AND #PAYX_YMTH2#
	]]>
	<isNotEmpty prepend="AND" property="DEPT_CODE">			  
			     D.DEPT_FCOD LIKE (SELECT DEPT_FCOD FROM VI_DEPTXM WHERE DEPT_CODE = #DEPT_CODE#) || '%'
	</isNotEmpty>	
	<isNotEmpty prepend="AND" property="EMPL_NUMB">			  
			  	 A.EMPL_NUMB = #EMPL_NUMB#
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="CLSD_CODE">			  
			     A.CLSD_CODE = #CLSD_CODE#
	</isNotEmpty>
			ORDER BY C.SORT_ORDR
	</select>
	<!--
	 작 성 자 : 고민주
	 작 성 일 : 2016.08.02
	 내    용 : 급여명세서 조회
	 파라미터 : 
	-->
	<select id="PAYJ0040.SEARCH01" parameterClass="hashmap" resultClass="hashmap" remapResults="true">
	<![CDATA[
			
			SELECT E.EMPL_NUMB	/*사원번호*/  
				  ,E.EMPL_NAME	/*성명*/  
				  ,E.ENCO_DATE	/*입사일*/
				  ,E.CPOS_NAME
				  ,E.DUTY_NAME
				  ,E.DTGN_NAME
				  ,E.SECT_NAME
				  ,E.DEPT_NAME
				  ,SUM(B.EXPD_AMOT) AS PAYX_AMOT		/* 지급총액 */  
	]]>
	<iterate property="PY_ALLDED">
				  ,SUM(CASE WHEN B.EXPD_CODE = #PY_ALLDED[].EXPD_CODE# THEN B.EXPD_AMOT ELSE 0 END) AS "$PY_ALLDED[].EXPD_CODE$"
				
	</iterate>
	<![CDATA[
			  FROM PY_EMPAVG A    
			 INNER JOIN PY_EMPDTL B  
			    ON A.STDS_YMTH = B.STDS_YMTH
			   AND A.EMPL_NUMB = B.EMPL_NUMB
			 INNER JOIN PY_EMPAVG E
			    ON E.STDS_YMTH = (SELECT MAX(STDS_YMTH) FROM PY_EMPAVG WHERE EMPL_NUMB = A.EMPL_NUMB AND STDS_YMTH <= #PAYX_YMTH2#)
			   AND A.EMPL_NUMB = E.EMPL_NUMB
			  LEFT OUTER JOIN PY_ALLDED C
			    ON B.EXPD_CODE = C.EXPD_CODE		  
			  LEFT OUTER JOIN VI_DEPTXM D  
			    ON A.DEPT_CODE = D.DEPT_CODE		  
			 WHERE A.CLSD_CODE <> '99'	/*용역제외*/
			   AND A.STDS_YMTH BETWEEN #PAYX_YMTH1# AND #PAYX_YMTH2#
	]]>
	<isNotEmpty prepend="AND" property="DEPT_CODE">			  
			      D.DEPT_FCOD LIKE (SELECT DEPT_FCOD FROM VI_DEPTXM WHERE DEPT_CODE = #DEPT_CODE#) || '%'
	</isNotEmpty>	
	<isNotEmpty prepend="AND" property="EMPL_NUMB">			  
			  	  A.EMPL_NUMB = #EMPL_NUMB#
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="CLSD_CODE">			  
			      A.CLSD_CODE = #CLSD_CODE#
	</isNotEmpty>

			GROUP BY E.EMPL_NUMB, E.EMPL_NAME, E.ENCO_DATE, E.CPOS_NAME
		            ,E.DUTY_NAME, E.DTGN_NAME, E.SECT_NAME, E.DEPT_NAME, E.DUTY_NAME 
			ORDER BY E.EMPL_NUMB
	</select>


</sqlMap>
