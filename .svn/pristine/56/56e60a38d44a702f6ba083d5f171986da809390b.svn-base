<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.5">
  <TypeDefinition url="..\..\default_typedef.xml"/>
  <Form id="FAME0041" onkeydown="fn_HotKey" onload="fn_FormLoadSetting" titletext="전기재무제표복사" position="absolute" scrollbars="none" onbeforeclose="fn_FormUnloadProcess" left="0" width="500" top="0" height="190">
    <Layouts>
      <Layout>
        <Shape id="Shape1" radiusy="10" radiusx="10" type="roundrectangle" position="absolute" left="8" width="484" top="78" height="38" cssclass="RoundRect"/>
        <Shape id="Shape0" position="absolute" type="rectangle" left="8" width="484" top="37" height="6" cssclass="Rectangle"/>
        <ImageViewer id="imgFormTitle" image="URL('image::imgFormTitle.bmp')" taborder="2" position="absolute" imagealign="left middle" transparenthittest="false" left="8" width="22" top="8" height="22"/>
        <Static id="st_FormTitle" text="전기재무제표출력설정복사" position="absolute" style="align: middle left;" left="37" width="453" top="8" height="22" cssclass="styFormTitle"/>
        <Div id="Div0" taborder="4" position="absolute" scrollbars="none" left="8" width="484" top="48" height="25">
          <Layouts>
            <Layout>
              <Button id="btnSave" onclick="fn_Save" taborder="1" position="absolute" style="image:URL('image::btnSave.bmp');imagealign:left;" left="370" width="55" top="0" height="23"/>
              <Button id="btnEnd" onclick="fn_End" taborder="2" position="absolute" style="image:URL('image::btnEnd.bmp');imagealign:left;" left="427" width="55" top="0" height="23"/>
            </Layout>
          </Layouts>
        </Div>
        <Static id="Static1" text="년도 재무제표출력설정을" position="absolute" style="align: middle left;" left="109" width="157" top="86" height="22" cssclass="styFormSearchCap"/>
        <Static id="Static2" text="년도로 복사합니다." position="absolute" style="align: right middle;" left="329" width="128" top="86" height="22" cssclass="styFormSearchCap"/>
        <Calendar id="calFINA_YEAR1" taborder="8" autoselect="true" type="spin" dateformat="yyyy" editformat="yyyy" position="absolute" left="40" width="60" top="86" height="22" cssclass="styFormItemCalendar"/>
        <Calendar id="calFINA_YEAR2" taborder="9" autoselect="true" type="spin" dateformat="yyyy" editformat="yyyy" onspin="calFINA_YEAR2_OnSpin" position="absolute" onsetfocus="fn_EditFocus" left="272" width="60" top="86" height="22" cssclass="styFormItemCalendar"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.0"><![CDATA[/* MiPlatform API와 Component 속성, 메소드를 대체하는 공통함수 */
// include "import::lib_XConvert.xjs";
/***************************************************************************************************
 *   Form Common Script                                                                             *
 *      1) 공통 스크립트 위치 및 명칭은 수정 불가 입니다.                                           *
 *      2) 각 함수에서 필요한 부분의 소스를 수정 하세요.                                            *
 *      3) 해당 프로그램의 기능이 없는 경우 해당 함수의 이름만 놓고 공백 처리                       *
 *                                                                                                  *
 *  ★ 위 사항의 변경이 있거나 추가 사항이 있을 경우 반드시 개발 PL과 상의 후 수정 요망             *
 ***************************************************************************************************/

/************************
 *  공통 Script Include  *
 ************************/
include "lib::lib_common.xjs"

/*********************
 *  화면 변수 선언부  *
 *********************/
this.sPACKAGENAME = 'erp.u.fam.e.ab.FAME0041AB'; //해당 Form에서 사용 할 Package 명
this.sACCT_YEAR = '';
this.sACCT_GUBN = '';
this.sBASE_COUNT = ''; //편성단가 존재여부 체크

/**************************************************************************************************
 *                                         공통 Event 처리 부분                                    *
 ***************************************************************************************************/
/*----------------------------------+
 |  01.화면 종료(닫기) 버튼 클릭 時  |
 ------------------------------------*/
this.fn_End = function (obj:Button, e:nexacro.ClickEventInfo)
{
	this.close();
}

/*-----------------------+
 |  02.조회 버튼 클릭 時  |
 +------------------------*/
this.fn_Search = function (obj:Button, e:nexacro.ClickEventInfo)
{
	// 이월 년월 입력 여부 체크
	if (!this.fn_SearchItemCheck()) 
	{
		return;
	}

	// 이월년월 자료 존재여부 체크
	var sMethodName = "SEARCH00";
	var sInDataSet = "";
	var sOutDataSet = "";
	var sArgument = this.fn_CreateArgument(sMethodName);
	this.lookupFunc("fnc_TransactionCall").call(this, this.sPACKAGENAME, sMethodName, sInDataSet, sOutDataSet, sArgument, "fn_CallBack");
}

/*-----------------------------+
 |  03.입력(신규) 버튼 클릭 時  |
 +------------------------------*/
this.fn_Input = function (obj:Button, e:nexacro.ClickEventInfo)
{
}

/*-----------------------------+
 |  04.삭제(제거) 버튼 클릭 時  |
 +------------------------------*/
this.fn_Delete = function (obj:Button, e:nexacro.ClickEventInfo)
{
}

/*-----------------------+
 |  05.취소 버튼 클릭 時  |
 -------------------------*/
this.fn_Cancel = function (obj:Button, e:nexacro.ClickEventInfo)
{
}

/*-----------------------+
 |  06.저장 버튼 클릭 時  |
 -------------------------*/
this.fn_Save = function (obj:Button, e:nexacro.ClickEventInfo)
{
	// 이월 년월 입력 여부 체크
	if (!this.fn_SaveItemCheck()) 
	{
		return;
	}

	// 이월 처리
	var sMethodName = "SAVE00";
	var sInDataSet = "";
	var sOutDataSet = "";
	var sArgument = this.fn_CreateArgument(sMethodName);
	this.lookupFunc("fnc_TransactionCall").call(this, this.sPACKAGENAME, sMethodName, sInDataSet, sOutDataSet, sArgument, "fn_CallBack");
	this.lookup("medFINA_YEAR2").setFocus(); //재 클릭 방지를 위해 Focus 이동
}

/*-----------------------+
 |  07.엑셀 버튼 클릭 時  |
 -------------------------*/
this.fn_ToExcel = function (obj:Button, e:nexacro.ClickEventInfo)
{
}

/*-----------------------+
 |  08.인쇄 버튼 클릭 時  |
 +------------------------*/
this.fn_Print = function (obj:Button, e:nexacro.ClickEventInfo)
{
}

/*-----------------------------------+
 |  09.최초 화면 Load時 처리 할 사항  |
 +------------------------------------*/
this.fn_FormLoadSetting = function (obj:Form, e:LoadEventInfo)
{
	// 팝업호출에 대한 파라메터를 셋팅한다.
	// 메인버튼 제어를 위해 fnc_FormLoadSetting 이전에 실행되어야 한다.
	this.fn_SetPopupArgument();

	this.calFINA_YEAR1.set_value(this.lookupFunc("gfn_AddMonth").call(this.lookupFunc("gfn_ToString").call(this.sACCT_YEAR), -12)); //Form Year
	this.calFINA_YEAR2.set_value(this.sACCT_YEAR); //To Year
}

/*-----------------------------------+
 |  10. 화면 종료時 처리 할 사항  |
 +------------------------------------*/
this.fn_FormUnloadProcess = function (obj:Form, e:CloseEventInfo)
{
}

/*-----------------------------------+
 |  11.단축키 처리(Form KeyDown)      |
 +------------------------------------*/
this.fn_HotKey = function (obj:Form, e:KeyEventInfo)
{
	// Return Key Press時 Next Component focus
	if (e.keycode == 13) 
	{
		var oFocusComponent = this.getNextComponent(e.fromobject, true);
		oFocusComponent.setFocus();
		return;
	}

	// 단축키 처리
	this.lookupFunc("fnc_HotKey").call(this, e.keycode);
}

/*-----------------------------------+
 |  12.Text Box가 Focus를 받을 때     |
 +------------------------------------*/
this.fn_EditFocus = function (obj)
{
	this.lookupFunc("fnc_EditFocus").call(obj);
}


/**************************************************************************************************
 *                                      공통 Function 처리 부분                                    *
 ***************************************************************************************************/

/*-----------------------+
 |  조회 필수 조건 체크!  |
 +------------------------*/
this.fn_SearchItemCheck = function ()
{
	// 필수 입력 항목 체크
	if (this.lookupFunc("gfn_Length").call(this.lookupFunc("gfn_Trim").call(this.calFINA_YEAR1.value)) != 8) 
	{
		this.lookupFunc("fnc_Message").call("TMM072", "복사년도"); //Message 처리 후
		this.calFINA_YEAR1.setFocus(); //예산년월
		return false;
		// False 반환
	}

	if (this.lookupFunc("gfn_Length").call(this.lookupFunc("gfn_Trim").call(this.calFINA_YEAR2.value)) != 8) 
	{
		this.lookupFunc("fnc_Message").call("TMM072", "복사년도"); //Message 처리 후
		this.calFINA_YEAR2.setFocus(); //예산년월
		return false;
		// False 반환
	}

	if (this.lookupFunc("gfn_Left").call(this.lookupFunc("gfn_Trim").call(this.calFINA_YEAR1.value), 4) <= '2014') 
	{
		this.lookupFunc("fnc_Message").call("TMM125", "2014년 이후연도를 선택해야 합니다."); //Message 처리 후
		this.calFINA_YEAR1.setFocus(); //예산년월
		return false;
		// False 반환
	}

	if (this.lookupFunc("gfn_Left").call(this.lookupFunc("gfn_Trim").call(this.calFINA_YEAR2.value), 4) <= '2015') 
	{
		this.lookupFunc("fnc_Message").call("TMM125", "2015년 이후연도를 선택해야 합니다."); //Message 처리 후
		this.calFINA_YEAR2.setFocus(); //예산년월
		return false;
		// False 반환
	}

	trace('GBL_SYSTDT -- ' + application.GBL_SYSTDT);

	if (this.lookupFunc("gfn_Left").call(this.lookupFunc("gfn_Trim").call(this.calFINA_YEAR2.value), 4) <= this.lookupFunc("gfn_SubStr").call(application.GBL_SYSTDT, 0, 4)) 
	{
		this.lookupFunc("fnc_Message").call("M0001", application.GBL_SYSTDT); //Message 처리 후
		this.calFINA_YEAR2.setFocus(); //예산년월
		return false;
		// False 반환
	}

	return true;
}

/*------------------+
 |  삭제 여부 체크!  |
 +-------------------*/
this.fn_DeleteCheck = function ()
{
}

/*------------------+
 |  저장 여부 체크!  |
 +-------------------*/
this.fn_SaveItemCheck = function ()
{
	if (this.lookupFunc("gfn_Length").call(this.lookupFunc("gfn_Trim").call(this.calFINA_YEAR2.value)) != 8) 
	{
		this.lookupFunc("fnc_Message").call("TMM072", "복사년도"); //Message 처리 후
		this.calFINA_YEAR2.setFocus(); //예산년월
		return false;
		// False 반환
	}


	if (this.lookupFunc("gfn_Left").call(this.lookupFunc("gfn_Trim").call(this.calFINA_YEAR2.value), 4) <= this.lookupFunc("gfn_SubStr").call(application.GBL_SYSTDT, 0, 4)) 
	{
		this.lookupFunc("fnc_Message").call("M0001", application.GBL_SYSTDT); //Message 처리 후
		this.calFINA_YEAR2.setFocus(); //예산년월
		return false;
		// False 반환
	}

	return true;
}

/*-----------------------------------------+
 |  Service 호출 시 넘어 갈 Argument 생성!  |
 +------------------------------------------*/
this.fn_CreateArgument = function (sKind)
{
	var sReturnString;

	// 조회 Argument 생성
	if (sKind == 'SEARCH00') 
	{
		sReturnString = " pgm=" + this.lookupFunc("gfn_Quote").call(this.sPACKAGENAME); //Pacaage(Action Bean명)
		sReturnString += " action=" + this.lookupFunc("gfn_Quote").call(sKind); //호출할 Package의 Method명
		sReturnString += " FINA_YEAR=" + this.lookupFunc("gfn_Quote").call(this.lookupFunc("gfn_Left").call(this.lookupFunc("gfn_Trim").call(this.calFINA_YEAR2.value), 4)); //기준년월

		// 저장 Argument 생성
	}
	else if (sKind == 'SAVE00') 
	{
		sReturnString = " pgm=" + this.lookupFunc("gfn_Quote").call(this.sPACKAGENAME); //Pacaage(Action Bean명)
		sReturnString += " action=" + this.lookupFunc("gfn_Quote").call(sKind); //호출할 Package의 Method명
		sReturnString += " FINA_YEAR1=" + this.lookupFunc("gfn_Quote").call(this.lookupFunc("gfn_Left").call(this.lookupFunc("gfn_Trim").call(this.calFINA_YEAR1.value), 4)); //복사 할 년월
		sReturnString += " FINA_YEAR2=" + this.lookupFunc("gfn_Quote").call(this.lookupFunc("gfn_Left").call(this.lookupFunc("gfn_Trim").call(this.calFINA_YEAR2.value), 4)); //복사 될 년월
	}

	return sReturnString;
}

/*------------------------------------+
 |  Transaction 후 처리 해야 할 내용!  |
 +-------------------------------------*/
this.fn_CallBack = function (sMethodName, ErrorCode, ErrorMSG)
{
	// Service 후 Progress Bar Close
	this.lookupFunc("fnc_CloseProgress").call();

	// Service에서 오류 발생 시 처리
	if (ErrorCode < 0) 
	{
		if (application.GBL_SESSONCHK == "E0001") 
		{
			// 비인가 접속이나 Session 단절시 처리
			this.lookupFunc("fnc_ErrorProcess").call(ErrorCode, ErrorMSG);
		}
		else 
		{
			// Server에서 받은 Message 처리
			this.lookupFunc("fnc_Message").call("SERVERMSG", ErrorMSG);
		}
	}
	else 
	{
		// 오류가 없이 정상 처리되었다면...
		this.fn_PostProcess(sMethodName);
	}
}

/*------------------------------------+
 |  Transaction 후 Post Process!       |
 +-------------------------------------*/
this.fn_PostProcess = function (sMethodName)
{
	if (sMethodName == 'SEARCH00') 
	{
		// 이미 건강보험 자료가 있다면 재 복사 여부 체크
		if (this.sBASE_COUNT == "TRUE") 
		{
			if (this.lookupFunc("fnc_Message").call("HR1032", this.lookupFunc("gfn_Trim").call(this.lookup("medFINA_YEAR2").value),
				this.lookupFunc("gfn_Left").call(this.lookupFunc("gfn_Trim").call(this.calFINA_YEAR1.value), 4),
				this.lookupFunc("gfn_Left").call(this.lookupFunc("gfn_Trim").call(this.lookup("medFINA_YEAR2").value), 4))) 
			{
				this.fn_Save();
			}
		}
		else 
		{
			this.fn_Save();
		}
	}
	else if (sMethodName == 'SAVE00') 
	{
		this.lookupFunc("fnc_Message").call("TMM103"); //정상 종료 Message
		this.close(); //Close
	}
}

/**************************************************************************************************
 *                                사용자 정의  Function 처리 부분                                  *
 ***************************************************************************************************/
/**************************************************************************************************
 *                                  사용자 정의  Event 처리 부분                                   *
 ***************************************************************************************************/
/*-------------------------------+
 | To Year 변경 시 복사 년월 조회 |
 +--------------------------------*/

this.calFINA_YEAR2_OnSpin = function (obj:Calendar, e:nexacro.CalendarSpinEventInfo)
{
	obj.set_value(e.postvalue);

	this.calFINA_YEAR1.set_value(this.lookupFunc("gfn_AddMonth").call(this.lookupFunc("gfn_ToString").call(obj.value), -12));
}


/*-----------------------------------------+
 |  팦업으로 호출될때 변수를 셋팅한다.  |
 +-----------------------------------------*/
this.fn_SetPopupArgument = function ()
{
	// 메인메뉴 트리에서 클릭시 하단 파라메터들이 설정 되어 있지 않아
	// 오류가 발생한다.
	// try 구문으로 오류 발생시 무시하도록 한다.
	try 
	{
		if (this.lookup("pACCT_YEAR") != null) 
		{
			this.sACCT_YEAR = this.lookup("pACCT_YEAR");
		}
		// if (pACCT_GUBN != null) { sACCT_GUBN = pACCT_GUBN; }
	}
	catch (e) 
	{
		trace(e.message);
	}
}

]]></Script>
  </Form>
</FDL>
