<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"                  
        "http://ibatis.apache.org/dtd/sql-map-2.dtd">   

<sqlMap namespace="TRMA0050">
<!--
/* ******************************************************************************
     작  성  자 : 김준수
     작  성  일 : 2016.07.13
     내      용 : 조회[지급(출납)관리]
******************************************************************************* */
 -->
    <select id="TRMA0050.SEARCH00" parameterClass="hashmap" resultClass="hashmap">
        <![CDATA[
            SELECT    /* TRMA0050.SEARCH00 지급(출납)관리 조회 */
                '0' AS CHK
                ,A.SLIP_NUMB || B.SLIP_LINE AS OSLI_NUMB        /* 현재번호를 결재전표번호로 한다. */
                ,B.PAYX_DATE                              /* 자금예정일(출납예정일) */
                ,B.BANK_INOU                              /* 입/출금(FC04) */
                ,B.LEDG_GUBN                              /* 출납구분(FC03) */
                ,E.BIZR_NUMB                              /* 사업자번호 */
                ,C.COND_VACD                     AS CUST_CODE    /* 거래처 */
                ,E.CUST_NAME                     AS CUST_NAME     /* 거래처 명 */
                ,C1.COND_VACD                    AS EMPL_NUMB    /* 사원 */
                ,C2.EMPL_NAME                    AS EMPL_NAME    /* 사원 명 */
                ,CASE WHEN C.COND_CODE IS NOT NULL THEN C.COND_VACD ELSE C1.COND_VACD END AS VIEW_CUST
                ,CASE WHEN C.COND_CODE IS NOT NULL THEN E.CUST_NAME ELSE C2.EMPL_NAME END AS VIEW_CUST_NM
                ,C5.COND_VACD                    AS RPAY_ACNT_NUMB /* 지급출납계정 */
                ,C5.COND_VANM                    AS RPAY_ACNT_NAME /* 지급출납계정명 */
                ,B.SLIP_AMNT                                      /* 원화금액 */
                ,0 AS KBAL_AMNT                                  /* 원화잔액금액 */
                ,B.USEX_DEPT                                      /* 사용(귀속)부서 */
                ,SF_GET_DEPTNAME(B.USEX_DEPT)    AS DEPT_NAME      /* 사용(귀속)부서 */
                ,B.ACCT_INTL                                      /* 계정명 */
                ,D.ACCT_NAME                     AS ACCT_NAME    /* 계정명 */
                ,B.PAYX_YSNO                                      /* 출납완료여부 */
                ,A.ACCT_DATE                                    /* 회계일자 */
                ,A.APPS_CODE
                /* ,B.ACCT_DATE                                        *//* 승인일자 */
                ,B.SLIP_LINE                                      /* 발행전표순번 */
                ,B.FORI_AMNT                                      /* 외화금액 */
                ,0                               AS FBAL_AMNT      /* 외화잔액 */
                ,B.CURR_GUBN                                      /* 통화구분 */
                /* ,B.BANK_GUBN                                   */    /* 금융기관(FC02) */
                ,B.OSLI_NUMB || B.OSLI_LINE      AS SLIP_NUMB      /* 이전번호를 발생전표번호로 한다 */
                ,D.CHUL_YSNO
                ,'D'                             AS DRCR_GUBN      /* 차대구분 */
                ,B.ACCT_GUBN                                       /* 회계단위 */
                ,B.EXCH_RATE                                      /* 환율 */
                ,B.REMK_NAME                                      /* 적요 */

                /* 거래처를 먼저 확인하고 없으면 사번으로 한다.. */
                ,NVL(G.BANK_CODE,CASE WHEN C.COND_CODE IS NOT NULL THEN C3.BANK_CODE ELSE C4.BANK_CODE END)    AS BANK_CODE
                ,SF_GET_COMMNAME('BANK_CODE',NVL(G.BANK_CODE,CASE WHEN C.COND_CODE IS NOT NULL THEN C3.BANK_CODE ELSE C4.BANK_CODE END))    AS BANK_NAME
                ,NVL(G.ACNT_NUMB,CASE WHEN C.COND_CODE IS NOT NULL THEN C3.ACNT_NUMB ELSE C4.ACNT_NUMB END)    AS ACNT_NUMB
                ,NVL(G.ACNT_MANM,CASE WHEN C.COND_CODE IS NOT NULL THEN C3.ACNT_MANM ELSE C4.ACNT_MANM END)    AS RECI_MAN

                ,'A' || B.SLIP_NUMB || B.SLIP_LINE        AS SEND_KEY            /* 이체KEY */
                ,B.SLIP_NUMB                    AS SEND_SLIP_NUMB    /* 전표번호 */
                ,B.SLIP_LINE                    AS SEND_SLIP_LINE    /* 전표행번호 */
        FROM    TA_SLIPXM A
                LEFT JOIN TA_SLIPNT B
                ON        B.SLIP_NUMB = A.SLIP_NUMB          /* 전표번호 */
                
                LEFT JOIN TA_SLIPRF C
                ON        B.SLIP_NUMB = C.SLIP_NUMB
                AND       B.SLIP_LINE    = C.SLIP_LINE
                AND       C.COND_CODE = '0002' /* 관리항목값이 '거래처'인것만 */
                
                LEFT JOIN (
                        SELECT
                                 M.CUST_CODE        /* 거래처코드 */
                                ,M.BANK_CODE        /* 은행코드 */
                                ,M.ACNT_NUMB        /* 계좌번호 */
                                ,M.ACNT_MANM        /* 예금주 */
                        FROM    TA_CUSTAC M
                        WHERE   (M.CUST_CODE, M.CUST_ANID) IN (
                                    SELECT    CUST_CODE,MAX(CUST_ANID) AS CUST_ANID FROM TA_CUSTAC WHERE NVL(MJAN_YSNO,'0') = '1' GROUP BY CUST_CODE
                                    UNION     ALL
                                    SELECT     CUST_CODE,MAX(CUST_ANID) AS CUST_ANID FROM TA_CUSTAC WHERE NVL(MJAN_YSNO,'0') <> '1'
                                    AND     NOT EXISTS (SELECT CUST_CODE,MAX(CUST_ANID) AS CUST_ANID FROM TA_CUSTAC WHERE NVL(MJAN_YSNO,'0') = '1' GROUP BY CUST_CODE)
                                    GROUP BY CUST_CODE
                                )
                        ) C3
                ON        C3.CUST_CODE    = C.COND_VACD
                
                LEFT JOIN TA_SLIPRF C1
                ON        B.SLIP_NUMB = C1.SLIP_NUMB
                AND       B.SLIP_LINE    = C1.SLIP_LINE
                AND       C1.COND_CODE = '0003' /* 관리항목값이 '사원'인것만 */
                
                LEFT JOIN HR_MASTXM C2
                ON        C2.EMPL_NUMB = C1.COND_VACD

                LEFT JOIN (
                        /* 사원 지급 계좌의 적용 우선 순위는 보조계좌가 있는 경우 보조계좌 사용 없는 경우 급여 계좌 사용 */
                        SELECT     EMPL_NUMB /* 사원번호 */
                              , CASE WHEN IRSA_ACNO IS NOT NULL THEN IRSB_CODE ELSE WABK_CODE END AS BANK_CODE  /* 은행코드 */
                              , SF_GET_COMMNAME('BANK_CODE',CASE WHEN IRSA_ACNO IS NOT NULL THEN IRSB_CODE ELSE WABK_CODE END)  AS BANK_NAME /* 은행명 */
                              , CASE WHEN IRSA_ACNO IS NOT NULL THEN IRSA_ACNO ELSE WAGE_ACNO END AS ACNT_NUMB  /* 계좌번호 */
                              , CASE WHEN IRSA_ACNO IS NOT NULL THEN IRSA_DPST ELSE WAGE_DPST END AS ACNT_MANM  /* 예금주 */
                        FROM    PY_MASTPM
                        ) C4
                ON        C4.EMPL_NUMB    = C1.COND_VACD
                
                LEFT JOIN TA_SLIPRF C5
                ON        B.SLIP_NUMB = C5.SLIP_NUMB
                AND       B.SLIP_LINE    = C5.SLIP_LINE
                AND       C5.COND_CODE = '0064' /* 관리항목값이 '계좌번호'인것만 */
                
                LEFT JOIN TA_ACCTXM D
                ON        D.ACCT_INTL    = B.ACCT_INTL
                AND       EXISTS (
                            SELECT    *
                            FROM    TA_ACCTXD K
                            WHERE    K.ACCT_INTL    = D.ACCT_INTL
                            AND        K.COND_CODE IN ('0002','0003')  /* 관리항목값이 '거래처' '사원'인것만 */
                        )

                LEFT JOIN TA_CUSTXM E
                ON        E.CUST_CODE    = C.COND_VACD
                
                LEFT JOIN TA_SLIPNT F
                ON        F.SLIP_NUMB    = B.OSLI_NUMB
                AND        F.SLIP_LINE = B.OSLI_LINE
                
                LEFT JOIN TA_SLIPXM F1
                ON        F1.SLIP_NUMB    = F.SLIP_NUMB
                
                LEFT JOIN (
                     SELECT G12.BKLK_BSK1
                           , G12.BKLK_BSK2
                           , G12.CUST_CODE
                           , G12.ACNT_MANM
                          , G12.BANK_CODE
                          , SF_GET_COMMNAME('BANK_CODE',G12.BANK_CODE)    AS BANK_NAME
                          , G12.ACNT_NUMB
                     FROM (
                       SELECT G1.BKLK_BSK1, G1.BKLK_BSK2, G1.CUST_CODE, G1.TNTS_DATE, MAX(G1.TNTS_SEQN) AS TNTS_SEQN
                       FROM   TA_BATMAP G1
                       WHERE  TNTS_DATE = (SELECT MAX(TNTS_DATE) FROM TA_BATMAP WHERE BKLK_BSK1 = G1.BKLK_BSK1 AND BKLK_BSK2 = G1.BKLK_BSK2 AND CUST_CODE = G1.CUST_CODE)
                       GROUP
                       BY     BKLK_BSK1, BKLK_BSK2, CUST_CODE, TNTS_DATE
                     ) G11 INNER JOIN TA_BATMAP G12 ON G11.TNTS_DATE = G12.TNTS_DATE AND G11.TNTS_SEQN = G12.TNTS_SEQN
                ) G
                ON        B.SLIP_NUMB = G.BKLK_BSK1
                AND       B.SLIP_LINE = G.BKLK_BSK2
                AND       C.COND_VACD = G.CUST_CODE
                
        WHERE   A.ACCT_DATE BETWEEN #ACCT_DATE1# AND #ACCT_DATE2#    /* 회계일자 */  
        AND     D.CHUL_YSNO        = '1'          /* 출납전표사용여부 */
        AND     D.ACCT_INTL IS NOT NULL
        AND     B.DRCR_GUBN     = 'D'         /* 출납계정 차변금액 > 0 */
        AND     EXISTS (    SELECT    * 
                            FROM     TM_CODEXD 
                            WHERE     COMM_CODE = 'LEDG_GUBN' 
                            AND     REF2_FILD = '1' /* 뱅킹이체대상여부 */
                            AND     COMD_CODE = B.LEDG_GUBN )
        AND        B.ACCT_INTL NOT IN (        /* 구매론계정은 제외한다 */
                    SELECT    L.COMD_CODE
                    FROM    TM_CODEXD L
                    WHERE    L.COMM_CODE     = 'PUCD_ACCT'
                )
        AND     A.ACCT_UNIT                  = #ACCT_UNIT#                                    /* 회계단위 */
        AND     NVL(B.ACCT_GUBN, ' ')        = NVL(#ACCT_GUBN#, NVL(B.ACCT_GUBN, ' '))        /* 사업장 */
        AND     NVL(B.ACCT_INTL, ' ')       >= NVL(#ACCT_INTL#, NVL(B.ACCT_INTL, ' '))        /* 계정코드 */
        AND     NVL(B.ACCT_INTL, ' ')       <= NVL(#ACCT_INTL_TO#, NVL(#ACCT_INTL#, NVL(B.ACCT_INTL, ' ')))    /* 계정코드 */
        AND     NVL(B.PAYX_DATE, ' ')       >= NVL(#PAYX_DATE1#, NVL(B.PAYX_DATE, ' '))        /* 출납예정일 */
        AND     NVL(B.PAYX_DATE, ' ')       <= NVL(#PAYX_DATE2#, NVL(B.PAYX_DATE, ' '))        /* 출납예정일 */
        AND     NVL(C.COND_VACD, ' ')        = NVL(#CUST_CODE#, NVL(C.COND_VACD, ' '))       /* 거래처 */
        AND     NVL(C1.COND_VACD, ' ')       = NVL(#EMPL_NUMB#, NVL(C1.COND_VACD, ' '))       /* 사원 */
        
        ORDER   BY A.SLIP_NUMB
                , B.SORT_ORDR
                , B.SLIP_LINE
        ]]>
    </select>

<!-- 
/* ******************************************************************************
   작 성 자 : 김기환
   작 성 일 : 2016.11.24
   내    용 : 지급(출납)관리  저장
******************************************************************************* */
-->
    <insert id="TRMA0050.INSERT00" parameterClass="hashmap">
    
    <selectKey keyProperty="GEN_SEQN" resultClass="String">
            <![CDATA[
               SELECT  NVL(MAX(TNTS_SEQN),0) + 1 AS GEN_SEQN
            FROM    TA_BATMAP
            WHERE    TNTS_DATE = #TNTS_DATE#
           ]]>
       </selectKey>
    
    <![CDATA[
        INSERT INTO TA_BATMAP (  /* TRMA0050.INSERT00 지급(출납)관리  저장  */
                  TNTS_DATE /* 이체전송일자    */
                , TNTS_SEQN /* 이체전송순번    */
                , PROG_IDXX /* 프로그램ID      */
                , BKLK_BSK1 /* 뱅킹연결업무키1 */
                , BKLK_BSK2 /* 뱅킹연결업무키2 */
                , BKLK_BSK3 /* 뱅킹연결업무키3 */
                , BKLK_BSK4 /* 뱅킹연결업무키4 */
                , BKLK_BSK5 /* 뱅킹연결업무키5 */
                , BKLK_TNK1 /* 뱅킹연결이체키1 */
                , BKLK_TNK2 /* 뱅킹연결이체키2 */
                , BKLK_TNK3 /* 뱅킹연결이체키3 */
                , BKLK_TNK4 /* 뱅킹연결이체키4 */
                , BKLK_TNK5 /* 뱅킹연결이체키5 */
                , OUTX_ACNO /* 출금계좌번호    */
                , CUST_CODE /* 거래처코드      */
                , BANK_CODE /* 은행코드        */
                , ACNT_NUMB /* 계좌번호        */
                , ACNT_MANM /* 예금주          */
                , REMI_AMNT /* 이체금액        */
                , REMK_100X /* 비고100         */
                , INST_USID /* 입력작업자      */
                , INST_DATE /* 입력일시        */
           ) 
        VALUES 
            ( 
                  #TNTS_DATE# /* 이체전송일자(현재일자) */
                , #GEN_SEQN#  /* 이체전송순번(순번)     */
                , #PROG_IDXX# /* 프로그램ID               */
                , #SEND_SLIP_NUMB# /* 뱅킹연결업무키1(전표번호)          */
                , #SEND_SLIP_LINE# /* 뱅킹연결업무키2(전표라인번호)  */
                , '' /* 뱅킹연결업무키3 */
                , '' /* 뱅킹연결업무키4 */
                , '' /* 뱅킹연결업무키5 */
                , '' /* 뱅킹연결이체키1 */
                , '' /* 뱅킹연결이체키2 */
                , '' /* 뱅킹연결이체키3 */
                , '' /* 뱅킹연결이체키4 */
                , '' /* 뱅킹연결이체키5 */
                , '' /* 출금계좌번호    */
                , #CUST_CODE#  /* 거래처코드     */
                , #BANK_CODE#  /* 은행코드       */
                , #ACNT_NUMB#  /* 계좌번호       */
                , #RECI_MAN#   /* 예금주         */
                , ''           /* 이체금액       */
                , ''             /* 비고100        */
                , #INST_USID#  /* 입력작업자     */
                , SYSDATE        /* 입력일시       */
            ) 
    ]]>
    </insert>    
    
<!-- 
/* ******************************************************************************
   작 성 자 : 김기환
   작 성 일 : 2016.11.24
   내    용 : 지급(출납)관리  계좌 초기화(삭제)
******************************************************************************* */
 -->
    <delete id="TRMA0050.DELETE00" parameterClass="hashmap">
    <![CDATA[
       DELETE /* TRMA0050.DELETE00 지급(출납)관리  계좌 초기화(삭제)  */
        FROM    TA_BATMAP
        WHERE    BKLK_BSK1         = #SEND_SLIP_NUMB#    /* 전표번호 */
        AND        BKLK_BSK2        = #SEND_SLIP_LINE#    /* 전표라인번호 */
        AND        CUST_CODE        = #VIEW_CUST#        /* 거래처/사원번호 */
       ]]>
    </delete>
</sqlMap>