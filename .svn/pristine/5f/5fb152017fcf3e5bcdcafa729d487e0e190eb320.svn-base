<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
        "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="PAYF0110">
<!--
/*******************************************************************************
     작 성 자 : 김준수
     작 성 일 : 2016. 9. 9
     내    용 : 퇴직연금납입금 테이블 조회
********************************************************************************/
-->
    <select id="PAYF0110.SEARCH00" parameterClass="hashmap" resultClass="hashmap">
    <![CDATA[
         SELECT /* PAYF0110.SEARCH00 퇴직연금납입금 테이블 조회 */
                A.ENFC_CODE   /* 사업장코드 */
              , A.STDS_YMTH   /* 기준년월 */
              , D.SECT_NAME   /* 소속 */
              , D.DEPT_NAME   /* 부서 */
              , SF_GET_COMMNAME('OPOS_CODE', C.OPOS_CODE) AS OPOS_NAME  /* 직위 */
              , SF_GET_COMMNAME('DUTY_CODE', C.DUTY_CODE) AS DUTY_NAME  /* 직무 */
              , SF_GET_COMMNAME('CPOS_CODE', C.CPOS_CODE) AS CPOS_NAME  /* 직급 */
              , A.EMPL_NUMB   /* 사원번호 */
              , C.EMPL_NAME   /* 성명 */
              , A.RECW_YCNT   /* 정산근속년수 */
              , A.RECW_MCNT   /* 정산근속월수 */
              , A.RECW_DCNT   /* 정산근속일수 */
              , A.REAY_DATE   /* 퇴직연금시작일 */
              , A.STDS_WAGE   /* 기준임금 */
              , A.CMPA_AMOT   /* 회사부담금액 */
              , A.RTBN_AMOT   /* 퇴직위로금금액 */
              , A.WAGE_TAMT   /* 급여합계 */
              , A.BONU_TAMT   /* 상여합계 */
              , A.ANVA_TAMT   /* 연차수당합계 */
              , A.AVEW_AMOT   /* 평균급여액 */
              , A.AVBN_AMOT   /* 평균상여액 */
              , A.AVAV_AMOT   /* 평균연차수당액 */
              , A.APPR_SEQN   /* 전자결재일련번호 */
              , A.APPR_STAT   /* 전자결재상태코드 */
              , 'KHR132'    AS DOCU_IDXX                                    /* 결재문서양식 */
              , SF_GET_COMMNAMEREF('APPR_STAT', A.APPR_STAT, '1') APPR_PROC /* 결재상태 */
           FROM PY_RTPSDC A
             LEFT OUTER JOIN HR_MASTXM C
               ON A.EMPL_NUMB = C.EMPL_NUMB
             LEFT OUTER JOIN VI_DEPTXM D
               ON C.DEPT_CODE = D.DEPT_CODE
             LEFT OUTER JOIN TM_CODEXD E
               ON C.CPOS_CODE = E.COMD_CODE
              AND E.COMM_CODE = 'CPOS_CODE'
          WHERE A.STDS_YMTH = #STDS_YMTH#
            AND A.ENFC_CODE = #ENFC_CODE#
    ]]>
    <isNotEmpty prepend="AND" property="DEPT_CODE">
                  D.DEPT_FCOD LIKE SF_GET_DEPTFCOD(#DEPT_CODE#) || '%'
    </isNotEmpty>
    <isNotEmpty prepend="AND" property="EMPL_NUMB">
                  A.EMPL_NUMB = #EMPL_NUMB#
    </isNotEmpty>
    <isNotEmpty prepend="AND" property="REAY_JOCD">
                  A.REAY_JOCD = #REAY_JOCD#
    </isNotEmpty>
            ORDER BY D.DEPT_FCOD, E.SORT_ORDR, C.PRON_DATE, C.ENCO_DATE
    </select>

<!--
/*******************************************************************************
     작 성 자 : 김준수
     작 성 일 : 2016. 9. 8
     내    용 : 퇴직연금납입금 테이블 조회
********************************************************************************/
-->
    <select id="PAYF0110.SEARCH01" parameterClass="hashmap" resultClass="hashmap">
    <![CDATA[
            SELECT /* PAYF0110.SEARCH01 퇴직연금납입금 테이블 조회 */
                   A.STDS_YMTH   /*지급년월*/
                 , A.ENFC_CODE   /*사업장코드*/
                 , A.EMPL_NUMB   /*사원번호*/
                 , B.REUD_CODE   /*급상여구분*/
                 , B.RVSN_YMTH   /*귀속년월*/
                 , B.EXPD_CODE   /*수당코드*/
                 , C.EXPD_NAME
                 , B.PAYX_AMOT   /*수당액*/
              FROM PY_RTPSDC A
                INNER JOIN PY_RTDCPY B
                  ON A.STDS_YMTH = B.STDS_YMTH
                 AND A.ENFC_CODE = B.ENFC_CODE
                 AND A.EMPL_NUMB = B.EMPL_NUMB
                LEFT OUTER JOIN PY_ALLDED C
                  ON B.EXPD_CODE = C.EXPD_CODE
                LEFT OUTER JOIN HR_MASTXM D
                  ON A.EMPL_NUMB = D.EMPL_NUMB
                LEFT OUTER JOIN VI_DEPTXM E
                  ON D.DEPT_CODE = E.DEPT_CODE
             WHERE A.STDS_YMTH = #STDS_YMTH#
               AND A.ENFC_CODE = #ENFC_CODE#
               AND C.REUD_CODE IN ('2','3')
               AND A.EMPL_NUMB = #EMPL_NUMB#
             ORDER BY B.RVSN_YMTH, C.SORT_ORDR
    ]]>
    </select>

<!--
/*******************************************************************************
     작 성 자 : 황치웅
     작 성 일 : 2016. 11. 23
     내     용 : 퇴직연금납입금 리포트 출력 헤더
********************************************************************************/
-->
    <select id="PAYF0110.PRINT00" parameterClass="hashmap" resultClass="hashmap">
    <![CDATA[
        SELECT /* PAYF0110.PRINT00.퇴직연금납입금 리포트 출력 헤더 */
               A.ENFC_CODE                                                                     /* 사업장코드 */
             , CASE WHEN SUBSTR(C.RETR_DATE,0,6)  = A.STDS_YMTH THEN C.RETR_DATE
	   	 	        ELSE TO_NCHAR(LAST_DAY(TO_DATE(A.STDS_YMTH, 'YYYYMM')), 'YYYYMMDD') 
		 	         END AS STDS_YMTH                                                          /* 퇴직기준근무기간 */
             , D.DEPT_CODE                                                                     /* 부서코드 */
             , D.DEPT_NAME                                                                     /* 부서 */
             , SF_GET_COMMNAME('OPOS_CODE', C.OPOS_CODE) AS OPOS_NAME                          /* 직위 */
             , E.POST_NUMB                                                                     /* 우편번호 */
             , E.DTL1_ADDR || ' ' ||  E.DTL2_ADDR AS DTL1_ADDR                                 /* 주소 */
             , A.EMPL_NUMB                                                                     /* 사원번호 */
             , C.EMPL_NAME                                                                     /* 성명 */
             , C.RERN_NUMB                                                                     /* 주민등록번호 */
             , A.RECW_YCNT                                                                     /* 정산근속년수 */
             , A.RECW_MCNT                                                                     /* 정산근속월수 */
             , A.RECW_DCNT                                                                     /* 정산근속일수 */
             , A.REAY_DATE                                                                     /* 퇴직연금시작일 */
             , NVL(A.AVEW_AMOT, 0) + NVL(A.AVBN_AMOT, 0) + NVL(A.AVAV_AMOT, 0 ) AS TOTL_AMOT   /* 평균임금 */
             , A.STDS_WAGE                                                                     /* 기준임금 */
             , A.CMPA_AMOT                                                                     /* 회사부담금액 */
             , NVL(A.CMPA_AMOT, 0) + NVL(A.RTBN_AMOT, 0) AS CMPA_RTBN                          /* 차인지급액 */
             , A.RTBN_AMOT                                                                     /* 퇴직위로금금액 */
             , A.ANVA_TAMT                                                                     /* 연차수당합계 */
             , ROUND((NVL (A.ANVA_TAMT,0) ) /12) AS AVER_PAYX                                  /* 평균연차수당 */
         FROM PY_RTPSDC A
         LEFT OUTER JOIN HR_MASTXM C
                      ON A.EMPL_NUMB = C.EMPL_NUMB
         LEFT OUTER JOIN VI_DEPTXM D
                      ON C.DEPT_CODE = D.DEPT_CODE
         LEFT OUTER JOIN HR_MASTXD E
                      ON C.EMPL_NUMB = E.EMPL_NUMB
        WHERE A.STDS_YMTH = #STDS_YMTH#
          AND A.ENFC_CODE = #ENFC_CODE#
          AND A.EMPL_NUMB = #EMPL_NUMB#
        ORDER BY
              D.DEPT_FCOD,
              C.PRON_DATE,
              C.ENCO_DATE
    ]]>
    </select>

<!--
/*******************************************************************************
     작 성 자 : 황치웅
     작 성 일 : 2016. 11. 23
     내     용 : 퇴직연금납입금 리포트 출력 급여내역
********************************************************************************/
-->
    <select id="PAYF0110.PRINT01" parameterClass="hashmap" resultClass="hashmap">
    <![CDATA[
        SELECT /* PAYF0110.PRINT01.퇴직연금납입금 리포트 출력 급여내역 */
               A.RVSN_YMTH||TO_NCHAR('01')  AS REAY_DATE                                                  /* 시작일자 */
             , CASE WHEN A.RVSN_YMTH = SUBSTR(B.RETR_DATE,1,6) THEN  B.RETR_DATE
                    ELSE TO_NCHAR(LAST_DAY(TO_DATE(A.RVSN_YMTH,'YYYYMM')), 'YYYYMMDD')
                    END AS STDS_YMTH                                                                      /* 종료일자 */
             , TO_DATE( CASE WHEN A.RVSN_YMTH = SUBSTR(B.RETR_DATE,1,6) THEN  B.RETR_DATE
                             ELSE TO_NCHAR(LAST_DAY(TO_DATE(A.RVSN_YMTH,'YYYYMM')), 'YYYYMMDD')
                             END, 'YYYYMMDD')
               - TO_DATE(A.RVSN_YMTH||TO_NCHAR('01'), 'YYYYMMDD')
               + 1 AS TOTL_DATE                                                                           /* 일수 */
             , SUM(CASE WHEN A.EXPD_CODE = 'A0051' THEN A.PAYX_AMOT ELSE 0 END) AS PAYX_AMOT              /* 기본급 */
             , SUM(CASE WHEN A.EXPD_CODE = 'A0066' THEN A.PAYX_AMOT ELSE 0 END) AS OVER_AMOT              /* 연장수당 */
             , SUM(CASE WHEN A.EXPD_CODE IN ( 'A0051', 'A0066') THEN A.PAYX_AMOT ELSE 0 END) AS TOTL_PAYX /* 금액 */
          FROM PY_RTPSDC C INNER JOIN HR_MASTXM B ON C.EMPL_NUMB = B.EMPL_NUMB
          LEFT OUTER JOIN PY_RTDCPY A ON A.STDS_YMTH = C.STDS_YMTH
                                     AND A.ENFC_CODE = C.ENFC_CODE
                                     AND A.EMPL_NUMB = C.EMPL_NUMB
         WHERE A.EMPL_NUMB = #EMPL_NUMB#
           AND C.STDS_YMTH = #STDS_YMTH#
           AND A.EXPD_CODE <> 'A0070'
         GROUP BY A.RVSN_YMTH, B.RETR_DATE
         ORDER BY A.RVSN_YMTH DESC
    ]]>
    </select>

<!--
/*******************************************************************************
     작 성 자 : 김준수
     작 성 일 : 2016. 9. 8
     내    용 : 퇴직연금납입금 테이블 수정
********************************************************************************/
-->
    <update id="PAYF0110.UPDATE00" parameterClass="hashmap">
    <![CDATA[
        UPDATE PY_RTPSDC /* PAYF0110.UPDATE00 퇴직연금납입금 테이블 수정  */
           SET RTBN_AMOT = #RTBN_AMOT#   /* 퇴직위로금금액 */
             , UPDT_USID = #UPDT_USID#   /* 수정작업자 */
             , UPDT_DATE = SYSDATE       /* 수정일시 */
         WHERE STDS_YMTH = #STDS_YMTH#   /* 기준년월 */
           AND ENFC_CODE = #ENFC_CODE#   /* 사업장코드 */
           AND EMPL_NUMB = #EMPL_NUMB#   /* 사원번호 */
    ]]>
    </update>

<!--
/*******************************************************************************
     작 성 자 : 김준수
     작 성 일 : 2016. 9. 8
     내    용 : 퇴직연금예치금 테이블 수정
********************************************************************************/
-->
    <update id="PAYF0110.UPDATE01" parameterClass="hashmap">
    <![CDATA[
        UPDATE PY_RTDCPY  /* PAYF0110.UPDATE01 퇴직연금납입금 테이블 수정  */
           SET PAYX_AMOT = #PAYX_AMOT#   /*지급금액*/
             , UPDT_USID = #UPDT_USID#   /*수정작업자*/
             , UPDT_DATE = SYSDATE       /*수정일시*/
         WHERE STDS_YMTH = #STDS_YMTH#   /*기준년월*/
           AND ENFC_CODE = #ENFC_CODE#   /*사업장코드*/
           AND EMPL_NUMB = #EMPL_NUMB#   /*사원번호*/
           AND REUD_CODE = #REUD_CODE#   /*퇴직사용구분코드*/
           AND RVSN_YMTH = #RVSN_YMTH#   /*귀속년월*/
           AND EXPD_CODE = #EXPD_CODE#   /*수당공제코드*/
    ]]>
    </update>
<!--
/*******************************************************************************
     작 성 자 : 김준수
     작 성 일 : 2016. 9. 8
     내    용 : 퇴직연금납입금 테이블처리
********************************************************************************/
-->
    <insert id="PAYF0110.PROC00" parameterClass="hashmap">
    <![CDATA[
        DECLARE /* PAYF0110.PROC00.퇴직연금납입금 테이블처리 */
            vLAST_DAY   NVARCHAR2(2);
            
        BEGIN 
            DELETE FROM PY_RTDCPY
             WHERE STDS_YMTH = #STDS_YMTH#
               AND ENFC_CODE = #ENFC_CODE#;

            DELETE FROM PY_RTPSDC
             WHERE STDS_YMTH = #STDS_YMTH#
               AND ENFC_CODE = #ENFC_CODE#;


            SELECT TO_CHAR(LAST_DAY(TO_DATE(#STDS_YMTH#, 'YYYYMM')),'DD')
              INTO vLAST_DAY
              FROM DUAL
            ;
            IF #SAVE_TYPE# = 'I' THEN

                FOR RS IN (
                    SELECT #STDS_YMTH# AS STDS_YMTH
                         , #ENFC_CODE# AS ENFC_CODE   /*사업장코드*/
                         , A.EMPL_NUMB      /*사원번호*/
                         , A.REAY_JOCD      /*퇴직연금가입기관코드*/
                         , SF_GET_RCKNDATE(A.EMPL_NUMB, #STDS_YMTH#||vLAST_DAY) AS REAY_DATE /*퇴직연금시작일*/
                         , 0 AS STDS_WAGE   /*기준임금*/
                         , 0 AS CMPA_AMOT   /*회사부담금액*/
                         , 0 AS RTBN_AMOT   /*퇴직위로금*/
                         , 0 AS WAGE_TAMT   /*급여합계*/
                         , 0 AS BONU_TAMT   /*상여합계*/
                         , 0 AS ANVA_TAMT   /*연차수당합계*/
                         , 0 AS AVEW_AMOT   /*평균급여액*/
                         , 0 AS AVBN_AMOT   /*평균상여액*/
                         , 0 AS AVAV_AMOT   /*평균연차수당액*/
                         /* 2016.12.29 AYJ 기준년월에 퇴직한 사람은 퇴직일로 근속기간계산 */
                         ,CASE WHEN SUBSTR(B.RETR_DATE, 0,6) = #STDS_YMTH# THEN TRUNC(FLOOR(MONTHS_BETWEEN(TO_DATE(B.RETR_DATE, 'YYYYMMDD') + 1, TO_DATE( SF_GET_RCKNDATE(A.EMPL_NUMB, B.RETR_DATE) ,'YYYYMMDD')))/12, 0)
                               ELSE TRUNC(FLOOR(MONTHS_BETWEEN(TO_DATE(#STDS_YMTH#||vLAST_DAY, 'YYYYMMDD') + 1, TO_DATE( SF_GET_RCKNDATE(A.EMPL_NUMB, #STDS_YMTH#||vLAST_DAY) ,'YYYYMMDD')))/12, 0)  END AS RECW_YCNT
                         ,CASE WHEN SUBSTR(B.RETR_DATE, 0,6) = #STDS_YMTH# THEN MOD(FLOOR(MONTHS_BETWEEN(TO_DATE(B.RETR_DATE, 'YYYYMMDD') + 1, TO_DATE(SF_GET_RCKNDATE(A.EMPL_NUMB, B.RETR_DATE) ,'YYYYMMDD'))), 12)
                               ELSE MOD(FLOOR(MONTHS_BETWEEN(TO_DATE(#STDS_YMTH#||vLAST_DAY, 'YYYYMMDD') + 1, TO_DATE(SF_GET_RCKNDATE(A.EMPL_NUMB, #STDS_YMTH#||vLAST_DAY) ,'YYYYMMDD'))), 12)   END AS RECW_MCNT
                         ,CASE WHEN SUBSTR(B.RETR_DATE, 0,6) = #STDS_YMTH# THEN (TO_DATE(B.RETR_DATE, 'YYYYMMDD') - (ADD_MONTHS( TO_DATE(SF_GET_RCKNDATE(A.EMPL_NUMB, B.RETR_DATE) ,'YYYYMMDD'), (TRUNC(MONTHS_BETWEEN(TO_DATE(B.RETR_DATE,'YYYYMMDD') + 1, TO_DATE(SF_GET_RCKNDATE(A.EMPL_NUMB, B.RETR_DATE), 'YYYYMMDD')))))-1))
                               ELSE (TO_DATE(#STDS_YMTH#||vLAST_DAY, 'YYYYMMDD') - (ADD_MONTHS( TO_DATE(SF_GET_RCKNDATE(A.EMPL_NUMB, #STDS_YMTH#||vLAST_DAY) ,'YYYYMMDD'), (TRUNC(MONTHS_BETWEEN(TO_DATE(#STDS_YMTH#||vLAST_DAY,'YYYYMMDD') + 1, TO_DATE(SF_GET_RCKNDATE(A.EMPL_NUMB, #STDS_YMTH#||vLAST_DAY), 'YYYYMMDD')))))-1)) END AS RECW_DCNT
                      FROM PY_MASTPM A
                     INNER JOIN HR_MASTXM B
                             ON A.EMPL_NUMB = B.EMPL_NUMB
                     WHERE A.REEP_DIVC = '3' /*DC형 퇴직연금*/
                       AND A.REAY_DATE < #STDS_YMTH#||vLAST_DAY /*퇴직연금전환일이 기준년월 이전 자료만 해당*/
                       AND (SUBSTR(B.RETR_DATE,0,6) >= #STDS_YMTH# OR B.RETR_DATE IS NULL)
                ) LOOP
                    /*퇴직연금기준임금 입력*/
                    INSERT INTO PY_RTPSDC (
                           STDS_YMTH   /*기준년월*/
                         , ENFC_CODE   /*사업장코드*/
                         , EMPL_NUMB   /*사원번호*/
                         , REAY_JOCD   /*퇴직연금가입기관코드*/
                         , REAY_DATE   /*퇴직연금시작일*/
                         , STDS_WAGE   /*기준임금*/
                         , CMPA_AMOT   /*회사부담금액*/
                         , RTBN_AMOT   /*퇴직위로금*/
                         , WAGE_TAMT   /*급여합계*/
                         , BONU_TAMT   /*상여합계*/
                         , ANVA_TAMT   /*연차수당합계*/
                         , AVEW_AMOT   /*평균급여액*/
                         , AVBN_AMOT   /*평균상여액*/
                         , AVAV_AMOT   /*평균연차수당액*/
                         , RECW_YCNT   /*정산근속년수*/
                         , RECW_MCNT   /*정산근속월수*/
                         , RECW_DCNT   /*정산근속일수*/
                         , INST_USID   /*입력작업자*/
                         , INST_DATE   /*입력일시*/
                         , UPDT_USID   /*수정작업자*/
                         , UPDT_DATE   /*수정일시*/
                         ) VALUES (
                           RS.STDS_YMTH   /*기준년월*/
                         , RS.ENFC_CODE   /*사업장코드*/
                         , RS.EMPL_NUMB   /*사원번호*/
                         , RS.REAY_JOCD   /*퇴직연금가입기관코드*/
                         , RS.REAY_DATE   /*퇴직연금시작일*/
                         , RS.STDS_WAGE   /*기준임금*/
                         , RS.CMPA_AMOT   /*회사부담금액*/
                         , RS.RTBN_AMOT   /*퇴직위로금*/
                         , RS.WAGE_TAMT   /*급여합계*/
                         , RS.BONU_TAMT   /*상여합계*/
                         , RS.ANVA_TAMT   /*연차수당합계*/
                         , RS.AVEW_AMOT   /*평균급여액*/
                         , RS.AVBN_AMOT   /*평균상여액*/
                         , RS.AVAV_AMOT   /*평균연차수당액*/
                         , RS.RECW_YCNT   /*정산근속년수*/
                         , RS.RECW_MCNT   /*정산근속월수*/
                         , RS.RECW_DCNT   /*정산근속일수*/
                         , #UPDT_USID#
                         , SYSDATE
                         , #UPDT_USID#
                         , SYSDATE
                         );
               END LOOP;


               /*급여합계*/
               INSERT INTO PY_RTDCPY
               SELECT
                      #STDS_YMTH# AS STDS_YMTH
                    , #ENFC_CODE# AS ENFC_CODE   /*사업장코드*/
                    , A.EMPL_NUMB
                    , A.REUD_CODE
                    , C.PAYX_YMTH AS RVSN_YMTH
                    , A.EXPD_CODE
                    , SUM(CASE WHEN C.PAYX_YMTH IS NOT NULL THEN A.EXPD_AMOT ELSE 0 END) AS PAYX_AMOT
                    , #UPDT_USID#
                    , SYSDATE
                    , #UPDT_USID#
                    , SYSDATE
                 FROM PY_MASTPM M
                      INNER JOIN (
                                   SELECT
                                          A.EMPL_NUMB
                                         ,B.EXPD_CODE
                                         ,E.WAGE_YMTH  AS   PAYX_YMTH
                                         ,SUM(NVL(B.EXPD_AMOT,0) + NVL(B.RTRC_AMOT,0)) AS EXPD_AMOT
                                         ,C.REUD_CODE
                                         ,A.ENFC_CODE
                                   FROM PY_PMMAST A
                                         INNER JOIN PY_PMDETL B
                                           ON A.PAYX_DATE = B.PAYX_DATE
                                          AND A.WAGE_CODE = B.WAGE_CODE
                                          AND A.EMPL_NUMB = B.EMPL_NUMB
                                         INNER JOIN PY_ALLDED C
                                           ON B.EXPD_CODE = C.EXPD_CODE
                                          AND C.REUD_CODE IN ('1','2') /*기본급,월간급*/
                                         INNER JOIN PY_PAYCOD D
                                           ON A.WAGE_CODE = D.WAGE_CODE
                                         INNER JOIN PY_PMDIRY E
                                           ON E.PAYX_DATE = A.PAYX_DATE
                                          AND E.WAGE_CODE = A.WAGE_CODE
                                   WHERE D.WAGP_CODE NOT IN ('9000','4000') /*소급, 인상분제외*/
                                     AND B.EXPD_CODE != 'A9005'             /*2016-11-08  LYG 소급분 수당 제외*/
                                   GROUP BY A.EMPL_NUMB, B.EXPD_CODE, E.WAGE_YMTH, C.REUD_CODE, A.ENFC_CODE
                               ) A
                         ON M.EMPL_NUMB = A.EMPL_NUMB
                      LEFT OUTER JOIN (
                                         SELECT
                                                EMPL_NUMB
                                               ,PAYX_YMTH
                                         FROM (
                                               SELECT
                                                      A.EMPL_NUMB
                                                    , E.WAGE_YMTH AS PAYX_YMTH
                                                    , ROW_NUMBER() OVER (PARTITION BY A.EMPL_NUMB ORDER BY E.WAGE_YMTH DESC) AS ROWNUMBER
                                                 FROM PY_PMMAST A
                                                         INNER JOIN PY_PMDIRY E         /* 2016-11-22 LYG 급여일지 */
                                                           ON E.PAYX_DATE = A.PAYX_DATE
                                                          AND E.WAGE_CODE = A.WAGE_CODE
                                                WHERE E.WAGE_YMTH <= #STDS_YMTH#
                                                  AND E.WAGE_YMTH >= SUBSTR(SF_GET_RCKNDATE(A.EMPL_NUMB, #STDS_YMTH#||vLAST_DAY),1,6)
                                                  AND A.WAGP_CODE = '1000'
                                             ) K
                                         /*WHERE ROWNUMBER<=12*/
                                       ) C
                         ON A.EMPL_NUMB = C.EMPL_NUMB
                        AND A.PAYX_YMTH = C.PAYX_YMTH
               WHERE M.EMPL_NUMB IN (SELECT EMPL_NUMB FROM PY_RTPSDC WHERE STDS_YMTH = #STDS_YMTH# AND ENFC_CODE = #ENFC_CODE#)
                 AND C.PAYX_YMTH IS NOT NULL
               GROUP BY A.EMPL_NUMB, A.ENFC_CODE, A.REUD_CODE, C.PAYX_YMTH, A.EXPD_CODE
               ;

               /*상여데이터 입력*/
               INSERT INTO PY_RTDCPY
               SELECT #STDS_YMTH# AS STDS_YMTH
                    , #ENFC_CODE# AS ENFC_CODE   /*사업장코드*/
                    , A.EMPL_NUMB
                    , C.REUD_CODE
                    , E.WAGE_YMTH AS RVSN_YMTH   /*귀속년월*/
                    , B.EXPD_CODE

                    , SUM(NVL(B.EXPD_AMOT,0) + NVL(B.RTRC_AMOT,0)) AS PAYX_AMOT /*상여수당*/
                    , #UPDT_USID#
                    , SYSDATE
                    , #UPDT_USID#
                    , SYSDATE
               FROM PY_MASTPM M
                     INNER JOIN PY_PMMAST A
                       ON M.EMPL_NUMB = A.EMPL_NUMB
                     INNER JOIN PY_PMDETL B
                       ON A.PAYX_DATE = B.PAYX_DATE
                         AND A.WAGE_CODE = B.WAGE_CODE
                         AND A.EMPL_NUMB = B.EMPL_NUMB
                     INNER JOIN PY_ALLDED C
                       ON B.EXPD_CODE = C.EXPD_CODE
                         AND C.REUD_CODE = '3'
                     INNER JOIN PY_PAYCOD D
                       ON A.WAGE_CODE = D.WAGE_CODE
                     INNER JOIN PY_PMDIRY E         /* 2016-11-22 LYG 급여일지 */
                       ON E.PAYX_DATE = A.PAYX_DATE
                      AND E.WAGE_CODE = A.WAGE_CODE
               WHERE
                     /*2016-11-22 LYG 지급일이 아닌 급여일지의 급여년월 기준으로 적용*/
                     E.WAGE_YMTH <= #STDS_YMTH#

                 AND SUBSTR(SF_GET_RCKNDATE(M.EMPL_NUMB, #STDS_YMTH#||vLAST_DAY),1,6) <= E.WAGE_YMTH

                 AND D.WAGP_CODE NOT IN ('9000','4000') /*소급, 인상분제외*/

                 AND B.EXPD_CODE != 'A9005'   /*2016-11-08 LYG 소급분 제외*/

                 AND M.EMPL_NUMB IN (SELECT EMPL_NUMB FROM PY_RTPSDC WHERE STDS_YMTH = #STDS_YMTH# AND ENFC_CODE = #ENFC_CODE#)

               GROUP BY A.EMPL_NUMB, A.ENFC_CODE, C.REUD_CODE, E.WAGE_YMTH, B.EXPD_CODE
               ;

                /*총액 업데이트*/
                UPDATE PY_RTPSDC a
                   SET STDS_WAGE = ( SELECT NVL(SUM(B.PAYX_AMOT),0) AS STDS_WAGE
                                       FROM PY_RTDCPY B
                                      WHERE B.STDS_YMTH = A.STDS_YMTH
                                        AND B.ENFC_CODE = A.ENFC_CODE
                                        AND B.EMPL_NUMB = A.EMPL_NUMB )
                     , CMPA_AMOT = ( SELECT NVL(ROUND(SUM(B.PAYX_AMOT)/12),0) AS CMPA_AMOT
                                       FROM PY_RTDCPY B
                                      WHERE B.STDS_YMTH = A.STDS_YMTH
                                        AND B.ENFC_CODE = A.ENFC_CODE
                                        AND B.EMPL_NUMB = A.EMPL_NUMB )
                     , WAGE_TAMT = ( SELECT NVL(SUM(B.PAYX_AMOT),0) AS WAGE_TAMT
                                       FROM PY_RTDCPY B
                                      WHERE B.STDS_YMTH = A.STDS_YMTH
                                        AND B.ENFC_CODE = A.ENFC_CODE
                                        AND B.EMPL_NUMB = A.EMPL_NUMB
                                        AND B.REUD_CODE = '2' )
                     , BONU_TAMT = ( SELECT NVL(SUM(B.PAYX_AMOT),0) AS WAGE_TAMT
                                       FROM PY_RTDCPY B
                                      WHERE B.STDS_YMTH = A.STDS_YMTH
                                        AND B.ENFC_CODE = A.ENFC_CODE
                                        AND B.EMPL_NUMB = A.EMPL_NUMB
                                        AND B.REUD_CODE = '3'
                                        AND B.EXPD_CODE != 'A0070'  /*연차수당제외*/
                                   )
                     , ANVA_TAMT = ( SELECT NVL(SUM(B.PAYX_AMOT),0) AS WAGE_TAMT
                                       FROM PY_RTDCPY B
                                      WHERE B.STDS_YMTH = A.STDS_YMTH
                                        AND B.ENFC_CODE = A.ENFC_CODE
                                        AND B.EMPL_NUMB = A.EMPL_NUMB
                                        AND B.REUD_CODE = '3'
                                        AND B.EXPD_CODE = 'A0070'  /*연차수당*/
                                   )
                     , AVEW_AMOT = ( SELECT TRUNC(NVL(SUM(B.PAYX_AMOT), 0) / ((A.RECW_YCNT * 12) + A.RECW_MCNT + (CASE WHEN A.RECW_DCNT = 0 THEN 0 ELSE 1 END ) )) AS AVEW_AMOT
                                       FROM PY_RTDCPY B
                                      WHERE B.STDS_YMTH = A.STDS_YMTH
                                        AND B.ENFC_CODE = A.ENFC_CODE
                                        AND B.EMPL_NUMB = A.EMPL_NUMB
                                        AND B.REUD_CODE = '2'
                                   )
                     , AVBN_AMOT = ( SELECT TRUNC(NVL(SUM(B.PAYX_AMOT),0) / ( (A.RECW_YCNT * 12) + A.RECW_MCNT + (CASE WHEN A.RECW_DCNT = 0 THEN 0 ELSE 1 END ) )) AS AVBN_AMOT
                                       FROM PY_RTDCPY B
                                      WHERE B.STDS_YMTH = A.STDS_YMTH
                                        AND B.ENFC_CODE = A.ENFC_CODE
                                        AND B.EMPL_NUMB = A.EMPL_NUMB
                                        AND B.REUD_CODE = '3'
                                        AND B.EXPD_CODE != 'A0070'  /*연차수당제외*/
                                   )
                      , AVAV_AMOT = ( SELECT TRUNC(NVL(SUM(B.PAYX_AMOT),0) / ( (A.RECW_YCNT * 12) + A.RECW_MCNT + (CASE WHEN A.RECW_DCNT = 0 THEN 0 ELSE 1 END ))) AS AVAV_AMOT
                                       FROM PY_RTDCPY B
                                      WHERE B.STDS_YMTH = A.STDS_YMTH
                                        AND B.ENFC_CODE = A.ENFC_CODE
                                        AND B.EMPL_NUMB = A.EMPL_NUMB
                                        AND B.REUD_CODE = '3'
                                        AND B.EXPD_CODE = 'A0070'  /*연차수당*/
                                   )


                 WHERE A.STDS_YMTH =  #STDS_YMTH#
                   AND EXISTS (SELECT 1 FROM PY_RTDCPY B  WHERE A.EMPL_NUMB = B.EMPL_NUMB )
                ;
             END IF;
        END;
    ]]>
    </insert>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016.11.23
     내    용 : 전자결재일련번호 채번 반환
********************************************************************************/
-->
    <select id="PAYF0110.SEARCH99" parameterClass="hashmap" resultClass="hashmap">
        <![CDATA[
            SELECT  /* PAYF0110.SEARCH99 전자결재일련번호 채번 반환 */
                    PKG_IFGWAPPROVAL.SP_GET_APPRSEQN_NEW (#DOCU_IDXX#) AS APPR_SEQN
              FROM  DUAL
        ]]>
    </select>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016.11.23
     내    용 : 전자결재 연동자료 저장
********************************************************************************/
-->
    <insert id="PAYF0110.SAVE99" parameterClass="hashmap">
    <![CDATA[
        BEGIN

            /* PAYF0110.SAVE99 전자결재 연동자료 저장 */
            /*==================================================================
                1. 퇴직금지급결의서 결재문서번호 UPDATE
            ==================================================================*/
            PKG_PAYF0110.SP_GWAP_APPRSEQN_UPDATE (
                  #UPDT_USID#    /* 수정작업자*/
                , #STDS_YMTH#    /* 기준년월 */
                , #ENFC_CODE#    /* 사업장코드 */
                , #EMPL_NUMB#    /* 사원번호 */
                , #APPR_SEQN#    /* 전자결재일련번호 */
                , #APPR_STAT#    /* 전자결재상태코드 */
            );

            /*==================================================================
                2. 전자결재 헤더 저장
            ==================================================================*/
            PKG_IFGWAPPROVAL.SP_GWAP_SAVE (
                  #UPDT_USID#    /* 작업자ID */
                , #DOCU_IDXX#    /* 결재문서양식ID */
                , #APPR_SEQN#    /* 전자결재일련번호 */
                , #GWAP_EMPL#    /* 사원번호(결재요청자) */
                , #GWAP_SUBJ#    /* 전자결재제목 */
                , #GWAP_DEPT#    /* 부서코드(신청자) */
                );

        END;
       ]]>
    </insert>
</sqlMap>
