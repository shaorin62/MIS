<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"                  
		"http://ibatis.apache.org/dtd/sql-map-2.dtd">                             
                                                                                                                      
<sqlMap namespace="FAMC0060">
<!-- 
/*******************************************************************************
   작 성 자  오혜성
   작 성 일  2016.07.13
   내    용  관리항목/계정별잔액현황 조회
********************************************************************************/
 -->
	<select id="FAMC0060.SEARCH00" parameterClass="hashmap" resultClass="hashmap">
	<![CDATA[

		
	   	/******************************************
	  	관리항목조회 경우
	  	******************************************/
	    SELECT   /* FAMC0060.SEARCH00 관리항목계정별잔액현황 조회*/ 
	   			 ACCT_INTL	/* 계정코드*/
				,ACCT_NAME	/* 계정명*/
	            ,SUM(OVER_AMNT) AS OVER_AMNT	/* 이월금액*/
	            ,SUM(SLIP_CHAX) AS SLIP_CHAX	/* 차변금액*/
	            ,SUM(SLIP_DAEX) AS SLIP_DAEX	/* 대변금액*/
	            ,SUM(BALA_AMNT) AS BALA_AMNT	/* 잔액*/
		FROM    (
				SELECT   B.ACCT_INTL
						,C.ACCT_NAME  /* 계정명 */
						,SUM(CASE WHEN B.DRCR_GUBN = C.DRCR_GUBN AND B.ACCT_DATE < #ACCT_DATE1# THEN B.SLIP_AMNT
								  WHEN B.DRCR_GUBN <> C.DRCR_GUBN AND B.ACCT_DATE < #ACCT_DATE1# THEN B.SLIP_AMNT * -1
								  ELSE 0  END)  AS OVER_AMNT
						,SUM(CASE WHEN B.DRCR_GUBN = 'D' AND B.ACCT_DATE >= #ACCT_DATE1# THEN B.SLIP_AMNT ELSE 0 END) AS SLIP_CHAX  /* 차변 */
						,SUM(CASE WHEN B.DRCR_GUBN = 'C' AND B.ACCT_DATE >= #ACCT_DATE1# THEN B.SLIP_AMNT ELSE 0 END) AS SLIP_DAEX  /* 대변 */
						,SUM(CASE WHEN B.DRCR_GUBN =  C.DRCR_GUBN AND B.ACCT_DATE >= #ACCT_DATE1# THEN B.SLIP_AMNT
								  WHEN B.DRCR_GUBN <> C.DRCR_GUBN AND B.ACCT_DATE >= #ACCT_DATE1# THEN B.SLIP_AMNT * -1
								  ELSE 0 END) AS BALA_AMNT
				FROM    TA_SLIPXM A
						JOIN TA_SLIPNT B ON A.SLIP_NUMB = B.SLIP_NUMB
						JOIN TA_SLIPRF D ON B.SLIP_NUMB = D.SLIP_NUMB AND B.SLIP_LINE = D.SLIP_LINE
										AND D.COND_CODE = NVL(#COND_CODE#,D.COND_CODE)
						JOIN TA_ACCTXM C ON B.ACCT_INTL = C.ACCT_INTL 
				WHERE   A.ACCT_UNIT = #ACCT_UNIT# /* 회계단위 */
				AND     B.ACCT_DATE  BETWEEN #ACCT_DATE1# AND #ACCT_DATE2#
				AND		A.APPS_CODE = 'FA1'	/* 승인여부*/
		]]>
      		<isNotEmpty property = "ACCT_GUBN" prepend = "AND">
      			<![CDATA[
                    B.ACCT_GUBN = #ACCT_GUBN# /*사업장*/
            	]]>       
        	</isNotEmpty>
        	<isNotEmpty property = "ACCT_INTL1" prepend = "AND">
        		<![CDATA[
      				 B.ACCT_INTL >= #ACCT_INTL1# /*계정과목1*/
      			]]>
        	</isNotEmpty>  
        	<isNotEmpty property = "ACCT_INTL2" prepend = "AND">
        		<![CDATA[
      				 B.ACCT_INTL <= #ACCT_INTL2# /*계정과목2*/
      			]]>
        	</isNotEmpty>
        	<isNotEmpty property = "COND_VACD" prepend = "AND">
        		<![CDATA[
      				 D.COND_VACD = #COND_VACD# /*관리항목*/
      			]]>
        	</isNotEmpty>    
           
      <![CDATA[				
			
				GROUP 	BY B.ACCT_INTL, C.ACCT_NAME
	
				/*  이월잔액집계 */
				UNION   ALL
				SELECT  M.ACCT_INTL,C.ACCT_NAME/*  계정명 */
						,CASE WHEN DRCR_GUBN = 'D' THEN NVL(SLIP_CHAX,0) - NVL(SLIP_DAEX,0) ELSE NVL(SLIP_DAEX,0) - NVL(SLIP_CHAX,0) END AS OVER_AMNT	/* 이월금액 */
						,0 AS SLIP_CHAX	/* 차변 */
						,0 AS SLIP_DAEX	/* 대변 */
						,CASE WHEN DRCR_GUBN = 'D' THEN NVL(SLIP_CHAX,0) - NVL(SLIP_DAEX,0) ELSE NVL(SLIP_DAEX,0) - NVL(SLIP_CHAX,0) END AS BALA_AMNT	/* 잔액 */
				FROM    TA_MAMNTD M
						LEFT JOIN TA_ACCTXM C ON C.ACCT_INTL = M.ACCT_INTL 
				WHERE   M.ACCT_UNIT = #ACCT_UNIT#
				AND     M.ACCT_DATE >= SUBSTR(#ACCT_DATE1#,1,4) || '0000'
				AND     M.ACCT_DATE <  #ACCT_DATE1#
		]]>
      		<isNotEmpty property = "ACCT_GUBN" prepend = "AND">
      			<![CDATA[
                    M.ACCT_GUBN = #ACCT_GUBN# /*사업장*/
            	]]>       
        	</isNotEmpty>
        	<isNotEmpty property = "ACCT_INTL1" prepend = "AND">
        		<![CDATA[
      				 M.ACCT_INTL >= #ACCT_INTL1# /*계정과목1*/
      			]]>
        	</isNotEmpty>  
        	<isNotEmpty property = "ACCT_INTL2" prepend = "AND">
        		<![CDATA[
      				 M.ACCT_INTL <= #ACCT_INTL2# /*계정과목2*/
      			]]>
        	</isNotEmpty>
        	<isNotEmpty property = "COND_VACD" prepend = "AND">
        		<![CDATA[
      				 COND_VACD = #COND_VACD# /*관리항목*/
      			]]>
        	</isNotEmpty> 
        	<isNotEmpty property = "COND_CODE" prepend = "AND">
        		<![CDATA[
      				 M.COND_CODE = #COND_CODE# /*관리구분*/
      			]]>
        	</isNotEmpty>    
           
      <![CDATA[				
			
				)
	    GROUP 	BY ACCT_INTL, ACCT_NAME
	    ORDER   BY ACCT_INTL, ACCT_NAME

	]]>
	</select>

<!-- 
/*******************************************************************************
   작 성 자  오혜성
   작 성 일  2016.07.13
   내    용  관리항목계정별잔액현황 조회
********************************************************************************/
 -->
	<select id="FAMC0060.SEARCH01" parameterClass="hashmap" resultClass="hashmap">
	<![CDATA[

		
      	/******************************************
      	관리항목으로 조회하지 않을경우 - 계정별 잔액 현황과 동일
      	******************************************/
		SELECT   /* FAMC0060.SEARCH01 관리항목계정별잔액현황 조회*/
				 ACCT_INTL	/* 계정코드*/
				,ACCT_NAME	/* 계정명*/
				,SUM(OVER_AMNT) AS OVER_AMNT	/* 이월금액*/
				,SUM(SLIP_CHAX) AS SLIP_CHAX	/* 차변금액*/
				,SUM(SLIP_DAEX) AS SLIP_DAEX	/* 대변금액*/
				,SUM(BALA_AMNT) AS BALA_AMNT	/* 잔액*/
        FROM    (
				SELECT   B.ACCT_INTL
						,C.ACCT_NAME /*  계정명*/
						,SUM(CASE WHEN B.DRCR_GUBN = C.DRCR_GUBN AND B.ACCT_DATE < #ACCT_DATE1# THEN B.SLIP_AMNT
								  WHEN B.DRCR_GUBN <> C.DRCR_GUBN AND B.ACCT_DATE < #ACCT_DATE1# THEN B.SLIP_AMNT * -1
								  ELSE 0  END)  AS OVER_AMNT
						,SUM(CASE WHEN B.DRCR_GUBN = 'D' AND B.ACCT_DATE >= #ACCT_DATE1# THEN B.SLIP_AMNT ELSE 0 END) AS SLIP_CHAX  /* 차변*/
						,SUM(CASE WHEN B.DRCR_GUBN = 'C' AND B.ACCT_DATE >= #ACCT_DATE1# THEN B.SLIP_AMNT ELSE 0 END) AS SLIP_DAEX  /* 대변*/
						,SUM(CASE WHEN B.DRCR_GUBN =  C.DRCR_GUBN AND B.ACCT_DATE >= #ACCT_DATE1# THEN B.SLIP_AMNT
								  WHEN B.DRCR_GUBN <> C.DRCR_GUBN AND B.ACCT_DATE >= #ACCT_DATE1# THEN B.SLIP_AMNT * -1
								  ELSE 0 END) AS BALA_AMNT
				FROM    TA_SLIPXM A
						JOIN TA_SLIPNT B ON A.SLIP_NUMB = B.SLIP_NUMB
						JOIN TA_ACCTXM C ON B.ACCT_INTL = C.ACCT_INTL  
				WHERE   A.ACCT_UNIT = #ACCT_UNIT# /*회계단위*/
				AND     B.ACCT_DATE BETWEEN #ACCT_DATE1# AND #ACCT_DATE2# /*회계기간*/
				AND		A.APPS_CODE = 'FA1'	/* 승인여부*/
		]]>
      		<isNotEmpty property = "ACCT_GUBN" prepend = "AND">
      			<![CDATA[
                     B.ACCT_GUBN = #ACCT_GUBN# /*사업장*/
            	]]>       
        	</isNotEmpty>
        	<isNotEmpty property = "ACCT_INTL1" prepend = "AND">
        		<![CDATA[
      				 B.ACCT_INTL >= #ACCT_INTL1# /*계정과목1*/
      			]]>
        	</isNotEmpty>  
        	<isNotEmpty property = "ACCT_INTL2" prepend = "AND">
        		<![CDATA[
      				 B.ACCT_INTL <= #ACCT_INTL2# /*계정과목2*/
      			]]>
        	</isNotEmpty>
        	
           
      <![CDATA[			
				GROUP 	BY B.ACCT_INTL, C.ACCT_NAME

				/* 마감테이블 조회*/
				UNION   ALL
				SELECT  M.ACCT_INTL,C.ACCT_NAME	/*  계정명*/
						,CASE WHEN DRCR_GUBN = 'D' THEN NVL(SLIP_CHAX,0) - NVL(SLIP_DAEX,0) ELSE NVL(SLIP_DAEX,0) - NVL(SLIP_CHAX,0) END AS OVER_AMNT	/* 이월금액*/
						,0 AS SLIP_CHAX	/* 차변*/
						,0 AS SLIP_DAEX	/* 대변*/
						,CASE WHEN C.DRCR_GUBN = 'D' THEN NVL(SLIP_CHAX,0) - NVL(SLIP_DAEX,0) ELSE NVL(SLIP_DAEX,0) - NVL(SLIP_CHAX,0) END AS BALA_AMNT	/* 잔액*/
				FROM    TA_MAMNTM M
						LEFT JOIN TA_ACCTXM C ON C.ACCT_INTL = M.ACCT_INTL 
				WHERE   M.ACCT_UNIT = #ACCT_UNIT#
				AND     M.ACCT_DATE >= SUBSTR(#ACCT_DATE1#,1,4) || '0000'
				AND     M.ACCT_DATE <  #ACCT_DATE1#
		]]>
      		<isNotEmpty property = "ACCT_GUBN" prepend = "AND">
      			<![CDATA[
                     M.ACCT_GUBN = #ACCT_GUBN#  /*사업장*/
            	]]>       
        	</isNotEmpty>
        	<isNotEmpty property = "ACCT_INTL1" prepend = "AND">
        		<![CDATA[
      				 M.ACCT_INTL >= #ACCT_INTL1# /*계정과목1*/
      			]]>
        	</isNotEmpty>  
        	<isNotEmpty property = "ACCT_INTL2" prepend = "AND">
        		<![CDATA[
      				 M.ACCT_INTL <= #ACCT_INTL2# /*계정과목2*/
      			]]>
        	</isNotEmpty>
        	
           
      <![CDATA[			
			
                )
        GROUP   BY ACCT_INTL, ACCT_NAME
        ORDER   BY ACCT_INTL, ACCT_NAME

	]]>
	</select>

</sqlMap>
