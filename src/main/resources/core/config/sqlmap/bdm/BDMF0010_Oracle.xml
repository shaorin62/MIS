<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
		"http://ibatis.apache.org/dtd/sql-map-2.dtd">                              
                                                                                                            
<sqlMap namespace="BDMF0010">
<!-- 
/*******************************************************************************
	 작  성  자 : 인버스
	 작  성  일 : 2014.09.22
	 내      용 : 조회[부서별예산현황]
********************************************************************************/
-->
	<select id="BDMF0010.SEARCH00" parameterClass="hashmap" resultClass="hashmap">
		<![CDATA[
			 WITH W_TB_BUDG AS
	        (
	        SELECT	 A.ACCT_GUB1	/* 회계단위 */
	                ,A.BUDG_YEAR	/* 예산년도 */
	                ,A.DEPT_CODE	/* 부서코드 */
	                ,SF_GET_DEPTNAME(A.DEPT_CODE)	AS DEPT_NAME /*부서명*/
	                ,A.ACCT_INTL	/* 계정코드 */
	                ,SF_GET_ACCTNAME(A.BUDG_YEAR, A.ACCT_INTL)  AS ACCT_BFNM	/* 계정코드명 */
	                ,MAX(A.REMK_NOTE)	AS REMK_NOTE	/* 비고 */
	                ,SUM(A.BUDG_ATAL)	AS BUDG_ATAL	/* 예산금액_총계 */
	                ,SUM(A.BUDG_AT01)	AS BUDG_AT01	/* 예산금액_1월 */
	                ,SUM(A.BUDG_AT02)	AS BUDG_AT02	/* 예산금액_2월 */
	                ,SUM(A.BUDG_AT03)	AS BUDG_AT03	/* 예산금액_3월 */
	                ,SUM(A.BUDG_AT04)	AS BUDG_AT04	/* 예산금액_4월 */
	                ,SUM(A.BUDG_AT05)	AS BUDG_AT05	/* 예산금액_5월 */
	                ,SUM(A.BUDG_AT06)	AS BUDG_AT06	/* 예산금액_6월 */
	                ,SUM(A.BUDG_AT07)	AS BUDG_AT07	/* 예산금액_7월 */
	                ,SUM(A.BUDG_AT08)	AS BUDG_AT08	/* 예산금액_8월 */
	                ,SUM(A.BUDG_AT09)	AS BUDG_AT09	/* 예산금액_9월 */
	                ,SUM(A.BUDG_AT10)	AS BUDG_AT10	/* 예산금액_10월 */
	                ,SUM(A.BUDG_AT11)	AS BUDG_AT11	/* 예산금액_11월 */
	                ,SUM(A.BUDG_AT12)	AS BUDG_AT12	/* 예산금액_12월 */
	                ,SUM(A.BADD_ATAL)	AS BADD_ATAL	/* 추가예산금액_총계 */
	                ,SUM(A.BADD_AT01)	AS BADD_AT01	/* 추가예산금액_1월 */
	                ,SUM(A.BADD_AT02)	AS BADD_AT02	/* 추가예산금액_2월 */
	                ,SUM(A.BADD_AT03)	AS BADD_AT03	/* 추가예산금액_3월 */
	                ,SUM(A.BADD_AT04)	AS BADD_AT04	/* 추가예산금액_4월 */
	                ,SUM(A.BADD_AT05)	AS BADD_AT05	/* 추가예산금액_5월 */
	                ,SUM(A.BADD_AT06)	AS BADD_AT06	/* 추가예산금액_6월 */
	                ,SUM(A.BADD_AT07)	AS BADD_AT07	/* 추가예산금액_7월 */
	                ,SUM(A.BADD_AT08)	AS BADD_AT08	/* 추가예산금액_8월 */
	                ,SUM(A.BADD_AT09)	AS BADD_AT09	/* 추가예산금액_9월 */
	                ,SUM(A.BADD_AT10)	AS BADD_AT10	/* 추가예산금액_10월 */
	                ,SUM(A.BADD_AT11)	AS BADD_AT11	/* 추가예산금액_11월 */
	                ,SUM(A.BADD_AT12)	AS BADD_AT12	/* 추가예산금액_12월 */
	                ,NVL(SUM(A.BUDG_ATAL),0) + NVL(SUM(A.BADD_ATAL),0)  AS BTOT_ATAL	/* 예산합계_총계 */
	                ,NVL(SUM(A.BUDG_AT01),0) + NVL(SUM(A.BADD_AT01),0)  AS BTOT_AT01	/* 예산합계_1월 */
	                ,NVL(SUM(A.BUDG_AT02),0) + NVL(SUM(A.BADD_AT02),0)  AS BTOT_AT02	/* 예산합계_2월 */
	                ,NVL(SUM(A.BUDG_AT03),0) + NVL(SUM(A.BADD_AT03),0)  AS BTOT_AT03	/* 예산합계_3월 */
	                ,NVL(SUM(A.BUDG_AT04),0) + NVL(SUM(A.BADD_AT04),0)  AS BTOT_AT04	/* 예산합계_4월 */
	                ,NVL(SUM(A.BUDG_AT05),0) + NVL(SUM(A.BADD_AT05),0)  AS BTOT_AT05	/* 예산합계_5월 */
	                ,NVL(SUM(A.BUDG_AT06),0) + NVL(SUM(A.BADD_AT06),0)  AS BTOT_AT06	/* 예산합계_6월 */
	                ,NVL(SUM(A.BUDG_AT07),0) + NVL(SUM(A.BADD_AT07),0)  AS BTOT_AT07	/* 예산합계_7월 */
	                ,NVL(SUM(A.BUDG_AT08),0) + NVL(SUM(A.BADD_AT08),0)  AS BTOT_AT08	/* 예산합계_8월 */
	                ,NVL(SUM(A.BUDG_AT09),0) + NVL(SUM(A.BADD_AT09),0)  AS BTOT_AT09	/* 예산합계_9월 */
	                ,NVL(SUM(A.BUDG_AT10),0) + NVL(SUM(A.BADD_AT10),0)  AS BTOT_AT10	/* 예산합계_10월 */
	                ,NVL(SUM(A.BUDG_AT11),0) + NVL(SUM(A.BADD_AT11),0)  AS BTOT_AT11	/* 예산합계_11월 */
	                ,NVL(SUM(A.BUDG_AT12),0) + NVL(SUM(A.BADD_AT12),0)  AS BTOT_AT12	/* 예산합계_12월 */
	        FROM	(
	                SELECT	 A.ACCT_GUB1	/* 회계단위 */
	                        ,A.BUDG_YEAR	/* 예산년도 */
	                        ,A.DEPT_CODE	/* 부서코드 */
	                        ,A.ACCT_INTL	/* 계정코드 */
	                        ,A.REMK_NOTE	/* 비고 */
	                        ,A.BUDG_ATAL	/* 예산금액_총계 */
	                        ,A.BUDG_AT01	/* 예산금액_1월 */
	                        ,A.BUDG_AT02	/* 예산금액_2월 */
	                        ,A.BUDG_AT03	/* 예산금액_3월 */
	                        ,A.BUDG_AT04	/* 예산금액_4월 */
	                        ,A.BUDG_AT05	/* 예산금액_5월 */
	                        ,A.BUDG_AT06	/* 예산금액_6월 */
	                        ,A.BUDG_AT07	/* 예산금액_7월 */
	                        ,A.BUDG_AT08	/* 예산금액_8월 */
	                        ,A.BUDG_AT09	/* 예산금액_9월 */
	                        ,A.BUDG_AT10	/* 예산금액_10월 */
	                        ,A.BUDG_AT11	/* 예산금액_11월 */
	                        ,A.BUDG_AT12	/* 예산금액_12월 */
	                        ,0	AS BADD_ATAL	/* 예산금액_총계 */
	                        ,0	AS BADD_AT01	/* 예산금액_1월 */
	                        ,0	AS BADD_AT02	/* 예산금액_2월 */
	                        ,0	AS BADD_AT03	/* 예산금액_3월 */
	                        ,0	AS BADD_AT04	/* 예산금액_4월 */
	                        ,0	AS BADD_AT05	/* 예산금액_5월 */
	                        ,0	AS BADD_AT06	/* 예산금액_6월 */
	                        ,0	AS BADD_AT07	/* 예산금액_7월 */
	                        ,0	AS BADD_AT08	/* 예산금액_8월 */
	                        ,0	AS BADD_AT09	/* 예산금액_9월 */
	                        ,0	AS BADD_AT10	/* 예산금액_10월 */
	                        ,0	AS BADD_AT11	/* 예산금액_11월 */
	                        ,0	AS BADD_AT12	/* 예산금액_12월 */
	                FROM	TB_CPLDPT A 	/* 부서별예산현황 */
	                WHERE	1 = 1
	                AND		A.ACCT_GUB1	= #ACCT_GUB1#	/* 회계단위 */
	                AND		A.BUDG_YEAR	= #BUDG_YEAR#	/* 예산년도 */
	                AND		A.ACCT_INTL	= NVL(#ACCT_INTL#, A.ACCT_INTL)	/* 계정코드 */
	                AND		A.DEPT_CODE	= NVL(#DEPT_CODE#, A.DEPT_CODE)	/* 부서코드 */
	                UNION	ALL
	                SELECT	 A.ACCT_GUB1	/* 회계단위 */
	                        ,A.BUDG_YEAR	/* 예산년도 */
	                        ,A.DEPT_CODE	/* 부서코드*/
	                        ,A.ACCT_INTL	/* 계정코드 */
	                        ,''					AS BADD_NOTE
	                        ,0	AS BUDG_ATAL	/* 예산금액_총계 */
	                        ,0	AS BUDG_AT01	/* 예산금액_1월 */
	                        ,0	AS BUDG_AT02	/* 예산금액_2월 */
	                        ,0	AS BUDG_AT03	/* 예산금액_3월 */
	                        ,0	AS BUDG_AT04	/* 예산금액_4월 */
	                        ,0	AS BUDG_AT05	/* 예산금액_5월 */
	                        ,0	AS BUDG_AT06	/* 예산금액_6월 */
	                        ,0	AS BUDG_AT07	/* 예산금액_7월 */
	                        ,0	AS BUDG_AT08	/* 예산금액_8월 */
	                        ,0	AS BUDG_AT09	/* 예산금액_9월 */
	                        ,0	AS BUDG_AT10	/* 예산금액_10월 */
	                        ,0	AS BUDG_AT11	/* 예산금액_11월 */
	                        ,0	AS BUDG_AT12	/* 예산금액_12월 */
	                        ,SUM(A.BUDG_ATAL)	AS BADD_ATAL	/* 추가예산금액_총계 */
	                        ,SUM(A.BUDG_AT01)	AS BADD_AT01	/* 추가예산금액_1월 */
	                        ,SUM(A.BUDG_AT02)	AS BADD_AT02	/* 추가예산금액_2월 */
	                        ,SUM(A.BUDG_AT03)	AS BADD_AT03	/* 추가예산금액_3월 */
	                        ,SUM(A.BUDG_AT04)	AS BADD_AT04	/* 추가예산금액_4월 */
	                        ,SUM(A.BUDG_AT05)	AS BADD_AT05	/* 추가예산금액_5월 */
	                        ,SUM(A.BUDG_AT06)	AS BADD_AT06	/* 추가예산금액_6월 */
	                        ,SUM(A.BUDG_AT07)	AS BADD_AT07	/* 추가예산금액_7월 */
	                        ,SUM(A.BUDG_AT08)	AS BADD_AT08	/* 추가예산금액_8월 */
	                        ,SUM(A.BUDG_AT09)	AS BADD_AT09	/* 추가예산금액_9월 */
	                        ,SUM(A.BUDG_AT10)	AS BADD_AT10	/* 추가예산금액_10월 */
	                        ,SUM(A.BUDG_AT11)	AS BADD_AT11	/* 추가예산금액_11월 */
	                        ,SUM(A.BUDG_AT12)	AS BADD_AT12	/* 추가예산금액_12월 */
	                FROM	VI_CPLADD A 	/* 추가예산편성 */
	                WHERE	1 = 1
	                AND		A.ACCT_GUB1	= #ACCT_GUB1#	/* 회계단위 */
	                AND		A.BUDG_YYMM	LIKE #BUDG_YEAR# || '%'	/* 예산년도 */
	                AND		A.DEPT_CODE	= NVL(#DEPT_CODE#, A.DEPT_CODE)	/* 부서코드 */
	                AND		A.ACCT_INTL	= NVL(#ACCT_INTL#, A.ACCT_INTL)	/* 계정코드 */
	                GROUP	BY
	                        A.ACCT_GUB1
	                        ,A.BUDG_YEAR
	                        ,A.DEPT_CODE
	                        ,A.ACCT_INTL
	                ) A
	        WHERE	1 = 1
	        GROUP	BY
	                A.ACCT_GUB1
	                ,A.BUDG_YEAR
	                ,A.DEPT_CODE
	                ,A.ACCT_INTL
	        )
	        , W_TB_SLIP AS
	        (
	        SELECT	A.DEPT_CODE
	                ,A.ACCT_INTL
	                ,SUM(A.SLIP_AMNT)				AS SLIP_ATAL
	                ,SUM(CASE WHEN APPR_YYMM = '01' THEN A.SLIP_AMNT END) AS SLIP_AT01
	                ,SUM(CASE WHEN APPR_YYMM = '02' THEN A.SLIP_AMNT END) AS SLIP_AT02
	                ,SUM(CASE WHEN APPR_YYMM = '03' THEN A.SLIP_AMNT END) AS SLIP_AT03
	                ,SUM(CASE WHEN APPR_YYMM = '04' THEN A.SLIP_AMNT END) AS SLIP_AT04
	                ,SUM(CASE WHEN APPR_YYMM = '05' THEN A.SLIP_AMNT END) AS SLIP_AT05
	                ,SUM(CASE WHEN APPR_YYMM = '06' THEN A.SLIP_AMNT END) AS SLIP_AT06
	                ,SUM(CASE WHEN APPR_YYMM = '07' THEN A.SLIP_AMNT END) AS SLIP_AT07
	                ,SUM(CASE WHEN APPR_YYMM = '08' THEN A.SLIP_AMNT END) AS SLIP_AT08
	                ,SUM(CASE WHEN APPR_YYMM = '09' THEN A.SLIP_AMNT END) AS SLIP_AT09
	                ,SUM(CASE WHEN APPR_YYMM = '10' THEN A.SLIP_AMNT END) AS SLIP_AT10
	                ,SUM(CASE WHEN APPR_YYMM = '11' THEN A.SLIP_AMNT END) AS SLIP_AT11
	                ,SUM(CASE WHEN APPR_YYMM = '12' THEN A.SLIP_AMNT END) AS SLIP_AT12
	        FROM	(
	                SELECT	/*+ INDEX(B TA_SLIPNT_IN1) */
	                        A.DEPT_CODE
	                        ,A.ACCT_INTL
	                        ,B.DRCR_GUBN
	                        ,SUBSTR(C.SLIP_DATE, 5, 2)	AS APPR_YYMM
	                        ,SF_GET_SLIP_AMNT(#BUDG_YEAR#, A.ACCT_INTL, B.DRCR_GUBN, SUM(B.SLIP_AMNT)) AS SLIP_AMNT
	                FROM	W_TB_BUDG A 	/* 부서별예산현황 */
	                        INNER JOIN TA_SLIPNT B
	                        ON		1 = 1
	                        AND		B.BUDG_GUBN = '10'
	                        AND		B.USEX_DEPT = A.DEPT_CODE
	                        AND		B.ACCT_INTL = A.ACCT_INTL
	                        INNER JOIN TA_SLIPXM C
	                        ON		1 = 1
	                        AND		C.SLIP_NUMB = B.SLIP_NUMB
	                        AND		C.ACCT_GUB1 = #ACCT_GUB1#	/* 회계단위 */
	                        AND		'Y' = SF_GET_APPR_YSNO (#APPR_YSNO#, #BUDG_YEAR# || '0101', #BUDG_YEAR# || '1231', C.SLIP_DATE, B.ACCT_DATE)
	                WHERE	1 = 1
	                GROUP BY A.DEPT_CODE, A.ACCT_INTL, B.DRCR_GUBN, SUBSTR(C.SLIP_DATE, 5, 2)
	                ) A
	        WHERE	1 = 1
	        GROUP	BY
	                A.DEPT_CODE
	                ,A.ACCT_INTL
	        )
	        SELECT	A.ACCT_GUB1	/* 회계단위 */
	                ,A.BUDG_YEAR	/* 예산년도 */
	                ,A.DEPT_CODE	/* 부서코드 */
	                ,A.DEPT_NAME /*부서명*/
	                ,A.ACCT_INTL	/* 계정코드 */
	                ,A.ACCT_BFNM	/* 계정코드명 */
	                ,A.REMK_NOTE	/* 비고 */
	
	        		,A.BUDG_ATAL	/* 예산금액_총계 */
	                ,NVL(A.BUDG_AT01,0) + NVL(A.BUDG_AT02,0) + NVL(A.BUDG_AT03,0) 	AS BUDG_AT01
	                ,NVL(A.BUDG_AT04,0) + NVL(A.BUDG_AT05,0) + NVL(A.BUDG_AT06,0) 	AS BUDG_AT02
	                ,NVL(A.BUDG_AT07,0) + NVL(A.BUDG_AT08,0) + NVL(A.BUDG_AT09,0) 	AS BUDG_AT03
	                ,NVL(A.BUDG_AT10,0) + NVL(A.BUDG_AT11,0) + NVL(A.BUDG_AT12,0) 	AS BUDG_AT04
	
	                ,A.BADD_ATAL	/* 추가예산금액_총계 */
	                ,NVL(A.BADD_AT01,0) + NVL(A.BADD_AT02,0) + NVL(A.BADD_AT03,0) 	AS BADD_AT01
	                ,NVL(A.BADD_AT04,0) + NVL(A.BADD_AT05,0) + NVL(A.BADD_AT06,0) 	AS BADD_AT02
	                ,NVL(A.BADD_AT07,0) + NVL(A.BADD_AT08,0) + NVL(A.BADD_AT09,0) 	AS BADD_AT03
	                ,NVL(A.BADD_AT10,0) + NVL(A.BADD_AT11,0) + NVL(A.BADD_AT12,0) 	AS BADD_AT04
	
	                ,A.BTOT_ATAL	/* 예산합계_총계 */
	                ,NVL(A.BTOT_AT01,0) + NVL(A.BTOT_AT02,0) + NVL(A.BTOT_AT03,0) 	AS BTOT_AT01
	                ,NVL(A.BTOT_AT04,0) + NVL(A.BTOT_AT05,0) + NVL(A.BTOT_AT06,0) 	AS BTOT_AT02
	                ,NVL(A.BTOT_AT07,0) + NVL(A.BTOT_AT08,0) + NVL(A.BTOT_AT09,0) 	AS BTOT_AT03
	                ,NVL(A.BTOT_AT10,0) + NVL(A.BTOT_AT11,0) + NVL(A.BTOT_AT12,0) 	AS BTOT_AT04
	
	                ,B.SLIP_ATAL
	                ,NVL(B.SLIP_AT01,0) + NVL(B.SLIP_AT02,0) + NVL(B.SLIP_AT03,0) 	AS SLIP_AT01
	                ,NVL(B.SLIP_AT04,0) + NVL(B.SLIP_AT05,0) + NVL(B.SLIP_AT06,0) 	AS SLIP_AT02
	                ,NVL(B.SLIP_AT07,0) + NVL(B.SLIP_AT08,0) + NVL(B.SLIP_AT09,0) 	AS SLIP_AT03
	                ,NVL(B.SLIP_AT10,0) + NVL(B.SLIP_AT11,0) + NVL(B.SLIP_AT12,0) 	AS SLIP_AT04
	
	                ,NVL(A.BTOT_ATAL,0) - NVL(B.SLIP_ATAL,0) AS REMA_ATAL	/* 잔액_총계 */
	                ,NVL(A.BTOT_AT01,0) + NVL(A.BTOT_AT02,0) + NVL(A.BTOT_AT03,0)
	                 - NVL(B.SLIP_AT01,0) - NVL(B.SLIP_AT02,0) - NVL(B.SLIP_AT03,0) 	AS REMA_AT01
	                ,NVL(A.BTOT_AT04,0) + NVL(A.BTOT_AT05,0) + NVL(A.BTOT_AT06,0)
					 - NVL(B.SLIP_AT04,0) - NVL(B.SLIP_AT05,0) - NVL(B.SLIP_AT06,0) 	AS REMA_AT02
	                ,NVL(A.BTOT_AT07,0) + NVL(A.BTOT_AT08,0) + NVL(A.BTOT_AT09,0)
					 - NVL(B.SLIP_AT07,0) - NVL(B.SLIP_AT08,0) - NVL(B.SLIP_AT09,0) 	AS REMA_AT03
	                ,NVL(A.BTOT_AT10,0) + NVL(A.BTOT_AT11,0) + NVL(A.BTOT_AT12,0)
					 - NVL(B.SLIP_AT10,0) - NVL(B.SLIP_AT11,0) - NVL(B.SLIP_AT12,0) 	AS REMA_AT04
			FROM	W_TB_BUDG A 	/* 추가예산편성 */
	        		LEFT OUTER JOIN W_TB_SLIP B
	                ON		1 = 1
	                AND		B.DEPT_CODE = A.DEPT_CODE
	                AND		B.ACCT_INTL	= A.ACCT_INTL
			WHERE	1 = 1
			ORDER	BY
					A.ACCT_GUB1
					,A.BUDG_YEAR
					,A.DEPT_CODE
					,A.ACCT_INTL
		]]>
	</select>

<!-- 
/*******************************************************************************
	 작  성  자 : 인버스
	 작  성  일 : 2014.09.25
	 내      용 : 조회[프로젝트예산현황]
********************************************************************************/
-->
	<select id="BDMF0010.SEARCH01" parameterClass="hashmap" resultClass="hashmap">
		<![CDATA[
			WITH W_TB_BUDG AS
	        (
	        SELECT	 A.PROJ_CODE	/* 프로젝트코드 */
	        		,B.PROJ_NAME	/* 프로젝트명 */
					,A.DEPT_CODE	/* 부서코드 */
	                ,SF_GET_DEPTNAME(A.DEPT_CODE)	AS DEPT_NAME /*부서명*/
	                ,A.ACCT_INTL	/* 계정코드 */
	                ,SF_GET_BUDG_ACCTNAME(SUBSTR(B.BUDG_EDDT,1,4), A.ACCT_INTL)  AS ACCT_BFNM	/* 계정코드명 */
					,A.BUDG_AMNT	/* 예산금액 */
					,A.REMK_NOTE	/* 비고 */
	                ,B.BUDG_STDT		AS CONT_STDT	/* 계약시작일 */
	                ,B.BUDG_EDDT		AS CONT_EDDT	/* 계약종료일 */
	    			,A.ADDX_AMNT	/* 추가예산금액 */
					,NVL(A.BUDG_AMNT,0) + NVL(A.ADDX_AMNT,0) 	AS TOTA_AMNT	/*예산합계 */
	                ,A.BASL_AMNT		AS BASL_AMNT	/* 기초실적 */
	
			FROM	TB_PJBGXM A 	/* 프로젝트예산현황 */
	        		LEFT OUTER JOIN TM_PROJXM B
	                ON		1 = 1
	                AND		B.PROJ_CODE = A.PROJ_CODE
			WHERE	1 = 1
	        AND		B.ACCT_GUB1	= #ACCT_GUB1#	/* 회계단위 */
	        AND		A.PROJ_CODE	= NVL(#PROJ_CODE#, A.PROJ_CODE)	/* 프로젝트코드 */
	        AND		A.DEPT_CODE	= NVL(#DEPT_CODE#, A.DEPT_CODE)	/* 부서코드 */
	        AND		A.ACCT_INTL	= NVL(#ACCT_INTL#, A.ACCT_INTL)	/* 계정코드 */
	
			AND 	'Y' = CASE WHEN NVL(B.BUDG_EDDT, TO_CHAR(SYSDATE, 'YYYYMMDD')) < NVL(#COND_FROM#, TO_CHAR(SYSDATE, 'YYYYMMDD')) THEN 'N'
	        				   WHEN NVL(B.BUDG_STDT, TO_CHAR(SYSDATE, 'YYYYMMDD')) > NVL(#COND_TOXX#, TO_CHAR(SYSDATE, 'YYYYMMDD')) THEN 'N'
	                           ELSE 'Y'
	                           END
	/* PARAM */
	 /*        AND		(
	 *        		NVL(B.BUDG_STDT,' ') BETWEEN NVL(iCOND_FROM, NVL(B.BUDG_STDT,' ')) AND NVL(iCOND_TOXX, NVL(B.BUDG_STDT,' '))
	 *                OR
	 *                NVL(B.BUDG_EDDT,' ') BETWEEN NVL(iCOND_FROM, NVL(B.BUDG_EDDT,' ')) AND NVL(iCOND_TOXX, NVL(B.BUDG_EDDT,' '))
	 *                )
	 *
	 *        AND		(
	 *                (B.CONT_STDT >= NVL(iCOND_FROM, B.CONT_STDT) AND B.CONT_STDT <= NVL(iCOND_TOXX, B.CONT_STDT))
	 *                OR
	 *                (B.CONT_EDDT >= NVL(iCOND_FROM, B.CONT_EDDT) AND B.CONT_EDDT <= NVL(iCOND_TOXX, B.CONT_EDDT))
	 *                )
	 */
			ORDER	BY
					A.PROJ_CODE
					,A.DEPT_CODE
					,A.ACCT_INTL
	        )
	        , W_TB_SLIP AS
	        (
	        SELECT	A.PROJ_CODE
			 		,A.DEPT_CODE
	                ,A.ACCT_INTL
	                ,SUM(A.SLIP_AMNT)				AS SLIP_AMNT
	        FROM	(
	                SELECT	/*+ INDEX(B TA_SLIPNT_IN2) */
	                		 F.COND_VACD	AS PROJ_CODE
							,A.DEPT_CODE
	                        ,A.ACCT_INTL
	                        ,SF_GET_SLIP_AMNT(SUBSTR(C.SLIP_DATE,1,4), A.ACCT_INTL, B.DRCR_GUBN, SUM(B.SLIP_AMNT)) AS SLIP_AMNT
	                FROM	W_TB_BUDG A 	/* 부서별예산현황 */
	                        INNER JOIN TA_SLIPNT B
	                        ON		1 = 1
	                        AND		B.BUDG_GUBN = '20'
	                        AND		B.PROJ_CODE = A.PROJ_CODE
	                        AND		B.USEX_DEPT = A.DEPT_CODE
	                        AND		B.ACCT_INTL = A.ACCT_INTL
	
	                        INNER JOIN TA_SLIPRF F
	                        ON		1 = 1
	                        AND 	F.SLIP_NUMB	= B.SLIP_NUMB
	                        AND		F.SLIP_LINE	= B.SLIP_LINE
	                        AND		F.COND_CODE = '0019'
	                        INNER JOIN TA_SLIPXM C
	                        ON		1 = 1
	                        AND		C.SLIP_NUMB = B.SLIP_NUMB
	                        AND		C.ACCT_GUB1 = #ACCT_GUB1#	/* 회계단위 */
	                        AND		'Y' = SF_GET_APPR_YSNO (#APPR_YSNO#, '1900' || '0101', #SLIP_DATE#, C.SLIP_DATE, B.ACCT_DATE)
	                WHERE	1 = 1
	                GROUP	BY
	                        F.COND_VACD
	                        ,A.DEPT_CODE
	                        ,A.ACCT_INTL
	                        ,B.DRCR_GUBN
	                        ,SUBSTR(C.SLIP_DATE,1,4)
	                ) A
	        WHERE	1 = 1
	        GROUP	BY
	                A.PROJ_CODE
					,A.DEPT_CODE
	                ,A.ACCT_INTL
	        )
	        SELECT	A.*
	        		,NVL(B.SLIP_AMNT,0) + NVL(A.BASL_AMNT,0)						AS SLIP_AMNT
	                ,NVL(A.TOTA_AMNT,0) - NVL(B.SLIP_AMNT,0)  - NVL(A.BASL_AMNT,0)	AS REMA_AMNT /* 잔액 */
	        FROM	W_TB_BUDG A
	        		LEFT OUTER JOIN W_TB_SLIP B
	                ON		1 = 1
	                AND		A.PROJ_CODE	= B.PROJ_CODE
	                AND		A.DEPT_CODE	= B.DEPT_CODE
	                AND		A.ACCT_INTL	= B.ACCT_INTL
			WHERE	1 = 1
		]]>
	</select>
		
<!-- 
/*******************************************************************************
	 작  성  자 : 인버스
	 작  성  일 : 2014.09.23
	 내      용 : 조회[품의예산편성현]
********************************************************************************/
-->
	<select id="BDMF0010.SEARCH02" parameterClass="hashmap" resultClass="hashmap">
		<![CDATA[
			WITH W_TB_BUDG AS
	        (
	        SELECT	A.ACCT_GUB1		/* 회계단위 */
	                ,A.DEPT_CODE	/* 부서코드 */
	                ,A.ACCT_INTL	/* 계정코드 */
	                ,A.BUDG_ENYM
	                ,A.BUDG_AMNT	AS BUDG_AMNT	/* 예산금액 */
	                ,A.REQU_NUMB	AS REQU_NUMB	/* 품의번호 */
	        FROM	TB_CPLREQ A 	/* 품의예산편성현 */
	        WHERE	1 = 1
	        AND		A.ACCT_GUB1	= #ACCT_GUB1#	/* 회계단위 */
	        AND		A.DEPT_CODE	= NVL(#DEPT_CODE#, A.DEPT_CODE)	/* 부서코드 */
	        AND		A.ACCT_INTL	= NVL(#ACCT_INTL#, A.ACCT_INTL)	/* 계정코드 */
	        AND		A.BUDG_TYPE	= NVL(#BUDG_TYPE#, A.BUDG_TYPE)	/* 예산유형 */
			)
	        , W_TB_SLIP AS
	        (
	        SELECT	/*+ INDEX(B TA_SLIPNT_IN3) */
	                B.USEX_DEPT			AS DEPT_CODE
	                ,B.ACCT_INTL		AS ACCT_INTL
	                ,B.BGRQ_NUMB		AS REQU_NUMB
	                ,SUM(SF_GET_SLIP_AMNT(SUBSTR(C.SLIP_DATE,1,4), B.ACCT_INTL, B.DRCR_GUBN, B.SLIP_AMNT)) AS SLIP_AMNT
	        FROM	W_TB_BUDG A 	/* 부서별예산현황 */
	                INNER JOIN TA_SLIPNT B
	                ON		1 = 1
	                AND		B.BUDG_GUBN = '30'
	                AND		B.ACCT_INTL = A.ACCT_INTL
	                AND		B.USEX_DEPT = A.DEPT_CODE
	                AND		B.BGRQ_NUMB = A.REQU_NUMB
	                INNER JOIN TA_SLIPXM C
	                ON		1 = 1
	                AND		C.SLIP_NUMB = B.SLIP_NUMB
	                AND		C.ACCT_GUB1 = #ACCT_GUB1#	/* 회계단위 */
	                AND		'Y' = SF_GET_APPR_YSNO (#APPR_YSNO#, '1900' || '0101', #SLIP_DATE#, C.SLIP_DATE, B.ACCT_DATE)
	        WHERE	1 = 1
	        GROUP	BY
	                B.USEX_DEPT
	                ,B.ACCT_INTL
	                ,B.BGRQ_NUMB
	        )
	        SELECT	A.ACCT_GUB1		/* 회계단위 */
	                ,A.DEPT_CODE	/* 부서코드 */
	                ,SF_GET_DEPTNAME(A.DEPT_CODE)	AS DEPT_NAME /*부서명*/
	                ,A.ACCT_INTL	/* 계정코드 */
	                ,MAX(SF_GET_BUDG_ACCTNAME(SUBSTR(A.BUDG_ENYM,1,4), A.ACCT_INTL))  	AS ACCT_BFNM	/* 계정코드명 */
	                ,SUM(A.BUDG_AMNT)													AS BUDG_AMNT	/* 예산금액 */
	        		,SUM(B.SLIP_AMNT)													AS SLIP_AMNT	/* 전표금액 */
	                ,NVL(SUM(A.BUDG_AMNT),0) - NVL(SUM(B.SLIP_AMNT),0)					AS REMA_AMNT /* 잔액 */
	        FROM	W_TB_BUDG A 	/* 품의예산편성현 */
	        		LEFT OUTER JOIN W_TB_SLIP B
	                ON		1 = 1
	                AND		A.DEPT_CODE	= B.DEPT_CODE
	                AND		A.ACCT_INTL	= B.ACCT_INTL
					AND	    A.REQU_NUMB = B.REQU_NUMB
			WHERE	1 = 1
			GROUP	BY
					A.ACCT_GUB1
					,A.DEPT_CODE
					,A.ACCT_INTL
			ORDER	BY
	        		ACCT_GUB1
					,DEPT_CODE
					,ACCT_INTL
		]]>
	</select>
<!-- 
/*******************************************************************************
	 작  성  자 : 인버스
	 작  성  일 : 2014.09.23
	 내      용 : 조회[계정기준]
********************************************************************************/
-->
	<select id="BDMF0010.SEARCH03" parameterClass="hashmap" resultClass="hashmap">
	<![CDATA[
			SELECT	*
	        FROM	TT_BDMD0010 T
	        WHERE	1 = 1
	        ORDER	BY
	        		T.ACCT_INTL
	                ,T.BUDG_GUBN
	]]>
	</select>

<!-- 
/*******************************************************************************
	 작  성  자 : 인버스
	 작  성  일 : 2014.09.23
	 내      용 : 입력[계정기준]
********************************************************************************/
-->
	<insert id="BDMF0010.SEARCH03_SAVE" parameterClass="hashmap">
		<![CDATA[
			BEGIN
			INSERT INTO TT_BDMD0010 (
	                 ACCT_INTL                    /* 계정코드 */
	                ,ACCT_BFNM                    /* 계정코드명 */
	                ,BUDG_GUBN                    /* 예산구분 */
	                ,BUDG_AMNT                    /* 예산금액 */
	                ,SLIP_AMNT                    /* 실적금액 */
	                ,REMA_AMNT                    /* 잔액 */
	                )
	        WITH W_TB_BUDG AS
	        (
	        SELECT	A.DEPT_CODE	/* 부서코드 */
	                ,A.ACCT_INTL	/* 계정코드 */
					,SF_GET_BUDG_ACCTNAME(#BUDG_YEAR#, A.ACCT_INTL)  AS ACCT_BFNM	/* 계정코드명 */
	                ,SUM(A.BUDG_ATAL)	AS BUDG_AMNT	/* 예산금액_총계 */
	 		FROM	(
	                SELECT	A.ACCT_GUB1	/* 회계단위 */
	                        ,A.BUDG_YEAR	/* 예산년도 */
	                        ,A.DEPT_CODE	/* 부서코드 */
	                        ,A.ACCT_INTL	/* 계정코드 */
	                        ,A.BUDG_ATAL	/* 예산금액_총계 */
	                FROM	TB_CPLDPT A 	/* 부서별예산현황 */
	                WHERE	1 = 1
	                AND		A.ACCT_GUB1	= #ACCT_GUB1#	/* 회계단위 */
	                AND		A.BUDG_YEAR	= #BUDG_YEAR#	/* 예산년도 */
	                AND		A.ACCT_INTL	= NVL(#ACCT_INTL#, A.ACCT_INTL)	/* 계정코드 */
	                AND		A.DEPT_CODE	= NVL(#DEPT_CODE#, A.DEPT_CODE)	/* 부서코드 */
	                UNION	ALL
	                SELECT	 A.ACCT_GUB1	/* 회계단위 */
	                        ,#BUDG_YEAR#		AS BUDG_YEAR	/* 예산년도 */
	                        ,A.DEPT_CODE	/* 부서코드*/
	                        ,A.ACCT_INTL	/* 계정코드 */
	                        ,SUM(A.BUDG_AMNT)	AS BADD_ATAL	/* 추가예산금액_총계 */
	                FROM	TB_CPLADD A 	/* 추가예산편성 */
	                WHERE	1 = 1
	                AND		A.ACCT_GUB1	= #ACCT_GUB1#	/* 회계단위 */
	                AND		A.BUDG_YYMM	LIKE #BUDG_YEAR# || '%'	/* 예산년도 */
	                AND		A.DEPT_CODE	= NVL(#DEPT_CODE#, A.DEPT_CODE)	/* 부서코드 */
	                AND		A.ACCT_INTL	= NVL(#ACCT_INTL#, A.ACCT_INTL)	/* 계정코드 */
	                GROUP	BY
	                        A.ACCT_GUB1
	                        ,A.DEPT_CODE
	                        ,A.ACCT_INTL
	                ) A
			WHERE	1 = 1
	        GROUP	BY
	                A.DEPT_CODE
	                ,A.ACCT_INTL
	        )
	        , W_TB_SLIP AS
	        (
	        SELECT	/*+ INDEX(B TA_SLIPNT_IN1) */
	                A.DEPT_CODE
	                ,A.ACCT_INTL
	                ,SUM(SF_GET_SLIP_AMNT(SUBSTR(C.SLIP_DATE,1,4), A.ACCT_INTL, B.DRCR_GUBN, B.SLIP_AMNT)) AS SLIP_AMNT
	        FROM	W_TB_BUDG A 	/* 부서별예산현황 */
	                INNER JOIN TA_SLIPNT B
	                ON		1 = 1
	                AND		B.BUDG_GUBN = '10'
	                AND		B.USEX_DEPT = A.DEPT_CODE
	                AND		B.ACCT_INTL = A.ACCT_INTL
	                INNER JOIN TA_SLIPXM C
	                ON		1 = 1
	                AND		C.SLIP_NUMB = B.SLIP_NUMB
	                AND		C.ACCT_GUB1 = #ACCT_GUB1#	/* 회계단위 */
	        WHERE	1 = 1
	        GROUP	BY
	                A.DEPT_CODE
	                ,A.ACCT_INTL
	        )
	        SELECT	A.ACCT_INTL	/* 계정코드 */
	                ,MAX(A.ACCT_BFNM)  													AS ACCT_BFNM	/* 계정코드명 */
	                ,'10'																AS BUDG_GUBN    /* 예산구분*/
	                ,SUM(A.BUDG_AMNT)													AS BUDG_AMNT	/* 예산금액 */
	        		,NVL(SUM(B.SLIP_AMNT),0)											AS SLIP_AMNT
	                ,NVL(SUM(A.BUDG_AMNT),0) - NVL(SUM(B.SLIP_AMNT),0) 					AS REMA_AMNT /* 잔액 */
	        FROM	W_TB_BUDG A
	        		LEFT OUTER JOIN W_TB_SLIP B
	                ON		1 = 1
	                AND		A.DEPT_CODE	= B.DEPT_CODE
	                AND		A.ACCT_INTL	= B.ACCT_INTL
			WHERE	1 = 1
			GROUP	BY
					A.ACCT_INTL
	
			;
	
	        /* 예산현황계정기준 */
	        INSERT INTO TT_BDMD0010 (
	                 ACCT_INTL                    /* 계정코드 */
	                ,ACCT_BFNM                    /* 계정코드명 */
	                ,BUDG_GUBN                    /* 예산구분 */
	                ,BUDG_AMNT                    /* 예산금액 */
	                ,SLIP_AMNT                    /* 실적금액 */
	                ,REMA_AMNT                    /* 잔액 */
	                )
	        WITH W_TB_BUDG AS
	        (
	        SELECT	 A.PROJ_CODE	/* 프로젝트코드 */
	        		,B.PROJ_NAME	/* 프로젝트명 */
					,A.DEPT_CODE	/* 부서코드 */
	                ,SF_GET_DEPTNAME(A.DEPT_CODE)	AS DEPT_NAME /*부서명*/
	                ,A.ACCT_INTL	/* 계정코드 */
	                ,SF_GET_BUDG_ACCTNAME(SUBSTR(B.BUDG_EDDT,1,4), A.ACCT_INTL)  AS ACCT_BFNM	/* 계정코드명 */
					,NVL(A.BUDG_AMNT,0) + NVL(A.ADDX_AMNT,0) 	AS BUDG_AMNT	/*예산합계 */
	                ,A.BASL_AMNT		AS BASL_AMNT	/* 기초실적 */
			FROM	TB_PJBGXM A 	/* 프로젝트예산현황 */
	        		LEFT OUTER JOIN TM_PROJXM B
	                ON		1 = 1
	                AND		B.PROJ_CODE = A.PROJ_CODE
			WHERE	1 = 1
	        AND		B.ACCT_GUB1	= #ACCT_GUB1#	/* 회계단위 */
	        AND		A.DEPT_CODE	= NVL(#DEPT_CODE#, A.DEPT_CODE)	/* 부서코드 */
	        AND		A.ACCT_INTL	= NVL(#ACCT_INTL#, A.ACCT_INTL)	/* 계정코드 */
	
			AND 	'Y' = CASE WHEN NVL(B.BUDG_EDDT, TO_CHAR(SYSDATE, 'YYYYMMDD')) < #BUDG_YEAR# || '0101' THEN 'N'
	        				   WHEN NVL(B.BUDG_STDT, TO_CHAR(SYSDATE, 'YYYYMMDD')) > #BUDG_YEAR# || '1231' THEN 'N'
	                           ELSE 'Y'
	                           END
	
	
	/*		AND		(SUBSTR(B.BUDG_STDT,1,4) = #BUDG_YEAR# OR SUBSTR(B.BUDG_EDDT,1,4) = #BUDG_YEAR#) */
	
	        )
	        , W_TB_SLIP AS
	        (
	        SELECT	/*+ INDEX(B TA_SLIPNT_IN2) */
	                F.COND_VACD	AS PROJ_CODE
	                ,A.DEPT_CODE
	                ,A.ACCT_INTL
	                ,SUM(SF_GET_SLIP_AMNT(SUBSTR(C.SLIP_DATE,1,4), A.ACCT_INTL, B.DRCR_GUBN, B.SLIP_AMNT)) AS SLIP_AMNT
	        FROM	W_TB_BUDG A 	/* 부서별예산현황 */
	                INNER JOIN TA_SLIPNT B
	                ON		1 = 1
	                AND		B.BUDG_GUBN = '20'
	/*              AND		B.PROJ_CODE = A.PROJ_CODE */
	                AND		B.USEX_DEPT = A.DEPT_CODE
	                AND		B.ACCT_INTL = A.ACCT_INTL
	
	                INNER JOIN TA_SLIPRF F
	                ON		1 = 1
	                AND 	F.SLIP_NUMB	= B.SLIP_NUMB
	                AND		F.SLIP_LINE	= B.SLIP_LINE
	                AND		F.COND_CODE = '0019'
	
	                INNER JOIN TA_SLIPXM C
	                ON		1 = 1
	                AND		C.SLIP_NUMB = B.SLIP_NUMB
	                AND		C.ACCT_GUB1 = #ACCT_GUB1#	/* 회계단위 */
	        WHERE	1 = 1
	        GROUP	BY
	                F.COND_VACD
	                ,A.DEPT_CODE
	                ,A.ACCT_INTL
	        )
	        SELECT	A.ACCT_INTL	/* 계정코드 */
	                ,MAX(A.ACCT_BFNM)  													AS ACCT_BFNM	/* 계정코드명 */
	                ,'20'																AS BUDG_GUBN    /* 예산구분*/
	                ,SUM(A.BUDG_AMNT)													AS BUDG_AMNT	/* 예산금액 */
	        		,NVL(SUM(B.SLIP_AMNT),0) + NVL(SUM(A.BASL_AMNT),0)					AS SLIP_AMNT
	                ,NVL(SUM(A.BUDG_AMNT),0) - NVL(SUM(B.SLIP_AMNT),0)  - NVL(SUM(A.BASL_AMNT),0)	AS REMA_AMNT /* 잔액 */
	        FROM	W_TB_BUDG A
	        		LEFT OUTER JOIN W_TB_SLIP B
	                ON		1 = 1
	                AND		A.PROJ_CODE	= B.PROJ_CODE
	                AND		A.DEPT_CODE	= B.DEPT_CODE
	                AND		A.ACCT_INTL	= B.ACCT_INTL
			WHERE	1 = 1
			GROUP	BY
					A.ACCT_INTL
	
			;
	
	
	        /* 예산현황계정기준 */
	        INSERT INTO TT_BDMD0010 (
	                 ACCT_INTL                    /* 계정코드 */
	                ,ACCT_BFNM                    /* 계정코드명 */
	                ,BUDG_GUBN                    /* 예산구분 */
	                ,BUDG_AMNT                    /* 예산금액 */
	                ,SLIP_AMNT                    /* 실적금액 */
	                ,REMA_AMNT                    /* 잔액 */
	                )
	        WITH W_TB_BUDG AS
	        (
	        SELECT	A.ACCT_GUB1		/* 회계단위 */
	                ,A.DEPT_CODE	/* 부서코드 */
	                ,A.ACCT_INTL	/* 계정코드 */
	                ,A.BUDG_ENYM
	                ,A.BUDG_AMNT	AS BUDG_AMNT	/* 예산금액 */
	                ,A.REQU_NUMB	AS REQU_NUMB	/* 품의번호 */
	        FROM	TB_CPLREQ A 	/* 품의예산편성현 */
	        WHERE	1 = 1
	        AND		A.ACCT_GUB1	= #ACCT_GUB1#	/* 회계단위 */
	        AND		A.DEPT_CODE	= NVL(#DEPT_CODE#, A.DEPT_CODE)	/* 부서코드 */
	        AND		A.ACCT_INTL	= NVL(#ACCT_INTL#, A.ACCT_INTL)	/* 계정코드 */
	
			AND 	'Y' = CASE WHEN NVL(A.BUDG_ENYM, TO_CHAR(SYSDATE, 'YYYYMM')) < #BUDG_YEAR# || '01' THEN 'N'
	        				   WHEN NVL(A.BUDG_STYM, TO_CHAR(SYSDATE, 'YYYYMM')) > #BUDG_YEAR# || '12' THEN 'N'
	                           ELSE 'Y'
	                           END
	
	/*		AND		(SUBSTR(A.BUDG_STYM,1,4) = #BUDG_YEAR# OR SUBSTR(A.BUDG_ENYM,1,4) = #BUDG_YEAR#) */
	
	        )
	        , W_TB_SLIP AS
	        (
	        SELECT	/*+ INDEX(B TA_SLIPNT_IN3) */
	                B.USEX_DEPT			AS DEPT_CODE
	                ,B.ACCT_INTL		AS ACCT_INTL
	                ,B.BGRQ_NUMB		AS REQU_NUMB
	                ,SUM(SF_GET_SLIP_AMNT(SUBSTR(C.SLIP_DATE,1,4), B.ACCT_INTL, B.DRCR_GUBN, B.SLIP_AMNT)) AS SLIP_AMNT
	        FROM	W_TB_BUDG A 	/* 부서별예산현황 */
	                INNER JOIN TA_SLIPNT B
	                ON		1 = 1
	                AND		B.BUDG_GUBN = '30'
	                AND		B.ACCT_INTL = A.ACCT_INTL
	                AND		B.USEX_DEPT = A.DEPT_CODE
	                AND		B.BGRQ_NUMB = A.REQU_NUMB
	                INNER JOIN TA_SLIPXM C
	                ON		1 = 1
	                AND		C.SLIP_NUMB = B.SLIP_NUMB
	                AND		C.ACCT_GUB1 = #ACCT_GUB1#	/* 회계단위 */
	        WHERE	1 = 1
	        GROUP	BY
	                B.USEX_DEPT
	                ,B.ACCT_INTL
	                ,B.BGRQ_NUMB
	        )
	        SELECT	A.ACCT_INTL	/* 계정코드 */
	                ,MAX(SF_GET_BUDG_ACCTNAME(SUBSTR(A.BUDG_ENYM,1,4), A.ACCT_INTL))  	AS ACCT_BFNM	/* 계정코드명 */
	                ,'30'																AS BUDG_GUBN    /* 예산구분*/
	                ,SUM(A.BUDG_AMNT)													AS BUDG_AMNT	/* 예산금액 */
	        		,SUM(B.SLIP_AMNT)													AS SLIP_AMNT	/* 전표금액 */
	                ,NVL(SUM(A.BUDG_AMNT),0) - NVL(SUM(B.SLIP_AMNT),0)					AS REMA_AMNT /* 잔액 */
	        FROM	W_TB_BUDG A 	/* 품의예산편성현 */
	        		LEFT OUTER JOIN W_TB_SLIP B
	                ON		1 = 1
	                AND		A.DEPT_CODE	= B.DEPT_CODE
	                AND		A.ACCT_INTL	= B.ACCT_INTL
					AND	    A.REQU_NUMB = B.REQU_NUMB
			WHERE	1 = 1
			GROUP	BY
					A.ACCT_INTL

		END;
		]]>
	</insert>
</sqlMap>
