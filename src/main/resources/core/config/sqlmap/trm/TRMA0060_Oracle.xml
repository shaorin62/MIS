<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"                  
		"http://ibatis.apache.org/dtd/sql-map-2.dtd">
		
<sqlMap namespace="TRMA0060">
<!--
/* ******************************************************************************
     작  성  자 : 권미영
     작  성  일 : 2016.11.11
     내      용 : 조회[채권채무내역 조회]
******************************************************************************* */
 -->
    <select id="TRMA0060.SEARCH00" parameterClass="hashmap" resultClass="hashmap">
        <![CDATA[
        SELECT /* TRMA0060.SEARCH00 채권채무내역 조회 */
               A.ACCT_DATE	/* 회계일자 */
             , A.DISP_NUMB	/* 전표번호 */
             , A.OSLI_NUMB	/* 전표번호 */
             , A.OSLI_LINE	/* 전표라인 */
             , A.DRCR_GUBN	/* 차대구분 */
             , A.ACCT_UNIT	/* 회계단위 */
             , A.ACCT_GUBN	/* 회계구분_사업장 */
             , A.ACCT_INTL	/* 계정과목코드 */
             , A.ACCT_NAME	/* 계정명 */
             , A.REMK_NAME	/* 적요 */
             , A.CUST_CODE	/* 거래처코드 */
             , A.CUST_NAME	/* 거래처명 */
             , A.SLIP_AMNT	/* 전표금액 */
             , A.RPAY_AMNT	/* 기정리금액 */
             , A.REMA_AMNT	/* 잔액 */
             , A.MINS_FLAG	/* 잔액 마이너스 */
             , SUM(A.REMA_AMNT) OVER (PARTITION BY A.CUST_CODE, A.MINS_FLAG ORDER BY A.CUST_CODE, A.MINS_FLAG) AS SUMX_AMNT /* 거래처별 잔액합계 */
          FROM (
			SELECT B.ACCT_DATE								/* 회계일자 */
                 , B.SLIP_NUMB || B.SLIP_LINE AS DISP_NUMB	/* 전표번호 */
                 , B.SLIP_NUMB AS OSLI_NUMB				/* 전표번호 */
                 , B.SLIP_LINE	AS OSLI_LINE				/* 전표라인 */
                 , B.DRCR_GUBN								/* 차대구분 */
                 , B.ACCT_UNIT								/* 회계단위 */
                 , B.ACCT_GUBN								/* 회계구분_사업장 */
                 , B.ACCT_INTL								/* 계정과목코드 */
                 , D.ACCT_NAME								/* 계정명 */
                 , B.REMK_NAME								/* 적요 */
                 , C.COND_VACD AS CUST_CODE					/* 거래처코드 */
                 , SF_GET_CONDVANM(SF_GET_CONDCOLM(C.COND_CODE), C.COND_VACD) AS CUST_NAME /* 거래처명 */
                 , B.SLIP_AMNT								/* 전표금액 */
                 , SUM(NVL(E.SLIP_AMNT, 0)) AS RPAY_AMNT	/* 기정리금액 */
                 , B.SLIP_AMNT - SUM(NVL(E.SLIP_AMNT, 0)) AS REMA_AMNT	/* 잔액 */
                 , CASE WHEN B.SLIP_AMNT - SUM(NVL(E.SLIP_AMNT, 0)) < 0 THEN -1 ELSE 1 END AS MINS_FLAG /* 잔액 마이너스 */
			  FROM TA_SLIPXM A								/* [전표마스터] */
                   INNER JOIN TA_SLIPNT B					/* [전표라인] */
                           ON A.SLIP_NUMB = B.SLIP_NUMB		/* 전표번호 */
                   INNER JOIN TA_SLIPRF C					/* [전표관리항목] */
                           ON B.SLIP_NUMB = C.SLIP_NUMB
                          AND B.SLIP_LINE = C.SLIP_LINE
                          AND C.COND_CODE = '0002' 			/* 거래처 관리항목 */
                   INNER JOIN TA_ACCTXM D					/* [계정코드관리] */
                           ON B.ACCT_INTL = D.ACCT_INTL
                          AND B.DRCR_GUBN = D.DRCR_GUBN		/* 계정잔액변과 동일한 발생변만 */
                          AND D.GUNB_YSNO = '1'           	/* 건별반제여부 */
                          AND D.ACCT_TYPE = #ACCT_TYPE#		/* 계정종류(채권 : FA280150 / 채무 : FA280160) */
                   LEFT  JOIN TA_SLIPNT E					/* [기정산된 전표] */
                           ON B.SLIP_NUMB = E.OSLI_NUMB   	/* 상대전표번호 */
                          AND B.SLIP_LINE = E.OSLI_LINE   	/* 상대전표라인 */
			 WHERE A.ACCT_UNIT = #ACCT_UNIT#				/* 회계단위 */
               AND A.APPS_CODE = 'FA1'               		/* 승인완료 */
               AND B.CURR_GUBN = 'KRW'                		/* 원화만 */
               AND TRIM(B.OSLI_NUMB) IS NULL            	/* 상대전표 없는것 */
		]]>
		
		<isNotEmpty prepend="AND" property="ACCT_GUBN">
				A.ACCT_GUBN  = #ACCT_GUBN#					/* 사업장 */
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="ACCT_INT1">
		<![CDATA[
				B.ACCT_INTL >= #ACCT_INT1# 					/* 계정코드(F) */
		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="ACCT_INT2">
		<![CDATA[
				B.ACCT_INTL <= #ACCT_INT2# 					/* 계정코드(T) */
		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="ACCT_DAT1">
		<![CDATA[
				B.ACCT_DATE >= #ACCT_DAT1# 					/* 기간(F) */
		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="ACCT_DAT2">
		<![CDATA[
				B.ACCT_DATE <= #ACCT_DAT2# 					/* 기간(T) */
		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="CUST_CODE">
		<![CDATA[
				NVL(C.COND_VACD, ' ') = #CUST_CODE# 		/* 거래처 */
		]]>
		</isNotEmpty>
		
        <![CDATA[
             GROUP BY B.ACCT_DATE
                 , B.SLIP_NUMB
                 , B.SLIP_LINE
                 , B.DRCR_GUBN
                 , B.ACCT_UNIT
                 , B.ACCT_GUBN
                 , B.ACCT_INTL
                 , D.ACCT_NAME
                 , B.REMK_NAME
                 , C.COND_VACD
                 , C.COND_CODE    
                 , B.SLIP_AMNT
            HAVING NVL(B.SLIP_AMNT,0) - NVL(SUM(E.SLIP_AMNT),0) <> 0	/* 잔액 존재 */
        ) A
         ORDER BY A.CUST_CODE
             /*, A.MINS_FLAG*/
             , A.ACCT_DATE	 
             , A.DISP_NUMB
        ]]>
    </select>
    
<!--
/*******************************************************************************
      작  성  자 : 권미영
 	  작  성  일 : 2016.11.14
	  내      용 : 채권채무 상계전표생성(마스터)
********************************************************************************/
 -->
 	<parameterMap id="PROC00.PARAMAP" class="java.util.HashMap">
		<parameter property="SYST_LNCD" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/> 	<!-- 시스템언어코드 -->
		<parameter property="UPDT_USID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>	<!-- 수정작업자 -->
		<parameter property="ACCT_UNIT" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>	<!-- 회계단위 -->
		<parameter property="ACCT_GUBN" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>	<!-- 회계구분_사업장 -->
		<parameter property="SLIP_DATE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>	<!-- 전표일자(회계일자) -->
		<parameter property="SLIP_GUBN" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>	<!-- 전표유형구분 -->
		<parameter property="TITL_NAME" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>	<!-- 제목 -->
		<parameter property="EMPL_NUMB" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>	<!-- 사원번호 -->
		<parameter property="DEPT_CODE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>	<!-- 부서코드 -->
		<parameter property="SOUS_LNKY" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>	<!-- 출처연결키 -->
		<parameter property="EXTRA_01"  jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>	<!-- 미사용여분인수1 -->
		<parameter property="EXTRA_02"  jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>	<!-- 미사용여분인수2 -->
		<parameter property="EXTRA_03"  jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>	<!-- 미사용여분인수3 -->
		<parameter property="EXTRA_04"  jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>	<!-- 미사용여분인수4 -->
		<parameter property="EXTRA_05"  jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>	<!-- 미사용여분인수5 -->
		<parameter property="oSLIP_NUMB" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>	<!-- 전표번호(생성된 전표번호 반환) -->
	</parameterMap>

	<procedure id="TRMA0060.PROC00" parameterMap="PROC00.PARAMAP">
		<![CDATA[
		{ call PKG_FAMIFSLIP.SP_MASTER_SAVE ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) }
		]]>
	</procedure>
	
<!-- 
/* ******************************************************************************
	    작  성  자 : 권미영
	    작  성  일 : 2016.11.14
	    내      용 : 채권채무 상계전표생성 - 전표라인, 관리항목
 ******************************************************************************* */
-->
	<insert id="TRMA0060.PROC01" parameterClass="hashmap" >
	<![CDATA[
		DECLARE
    		/* TRMA0060.PROC001 채권채무 상계전표생성 - 전표라인, 관리항목 */
    	
			sSLIP_NUMB      TA_SLIPXM.SLIP_NUMB%TYPE;   /* 전표번호 */
			sSLIP_LINE      TA_SLIPNT.SLIP_LINE%TYPE;   /* 전표행번호 */
			sSORT_ORDR      TA_SLIPNT.SORT_ORDR%TYPE;   /* 정렬순서 */
			
	    BEGIN
	    	
	    	sSLIP_NUMB := #SLIP_NUMB#;
	    	
			/* ==================================================================
				1-1. 전표라인데이터 
			================================================================== */
			FOR RS IN (
				SELECT  A.ACCT_UNIT			/* 회계단위 */
					   ,A.ACCT_GUBN			/* 회계구분_사업장 */
					   ,A.ACCT_INTL			/* 회계단위 */
					   ,A.USEX_DEPT			/* 사용부서 */
					   ,A.DRCR_GUBN			/* 차대구분 */
					   ,A.CURR_GUBN			/* 통화구분 */
					   ,A.EXCH_RATE  		/* 환율 */
					   ,#LAST_AMNT# AS FORI_AMNT			/* 외화금액 */
					   ,#LAST_AMNT# AS SLIP_AMNT			/* 전표금액 */
					   ,A.REMK_NAME			/* 적요 */
				  FROM TA_SLIPNT A
					   INNER JOIN TA_SLIPXM B
					   	       ON A.SLIP_NUMB = B.SLIP_NUMB
				 WHERE A.SLIP_NUMB = #OSLI_NUMB#
				   AND A.SLIP_LINE = #OSLI_LINE#
			)
			LOOP
				
				BEGIN
					/* 라인번호 채번 */
					SELECT LPAD(NVL(MAX(SLIP_LINE), 0) + 1, 4, '0'), NVL(MAX(SLIP_LINE), 0) + 1
					  INTO sSLIP_LINE, sSORT_ORDR
				      FROM TA_SLIPNT
				  	 WHERE SLIP_NUMB = sSLIP_NUMB
				  	 ;
				  	   
				  	/* SELECT NVL(MAX(SORT_ORDR), 0) + 1
					  INTO sSORT_ORDR
				      FROM TA_SLIPNT
				  	 WHERE SLIP_NUMB = sSLIP_NUMB
				  	   AND DRCR_GUBN = CASE WHEN RS.DRCR_GUBN = 'D' THEN 'C' ELSE 'D' END
				  	   ; */
				  	     
		        EXCEPTION
		            WHEN NO_DATA_FOUND THEN
		                RETURN;
		                RAISE_APPLICATION_ERROR(-20000, '라인번호 채번오류');
		        END;
				
				/* ==================================================================
					1-2. 전표라인 저장 
				================================================================== */
				PKG_FAMIFSLIP.SP_LINE_SAVE(
					 #SYST_LNCD#  	 /* ●시스템언어코드 */
					,#UPDT_USID#     /* ●수정작업자 */
					,sSLIP_NUMB    	 /* ●전표번호 */
					,sSLIP_LINE    	 /* ●전표라인번호 */
					,#ACCT_UNIT#     /* ●회계단위 */
					,#ACCT_GUBN#     /* ●회계구분_사업장 */
					,RS.ACCT_INTL    /* ●계정과목코드 OR 분개코드 */
					,RS.USEX_DEPT    /* ●사용부서 */
					,NULL    /* ◎코스트센터코드 */
					,CASE WHEN RS.DRCR_GUBN = 'D' THEN 'C' ELSE 'D' END    /* ●차대구분 */
					,RS.CURR_GUBN    /* ●통화구분 */
					,RS.EXCH_RATE    /* ●환율 */
					,RS.FORI_AMNT    /* ●외화금액 */
					,RS.SLIP_AMNT    /* ●전표금액 */
					,#OSLI_NUMB#     /* ◎상대전표번호 */
					,#OSLI_LINE#     /* ◎상대전표순번 */
					,NULL    /* ◎예산구분 */
					,NULL    /* ◎프로젝트코드 */
					,NULL    /* ◎예산품의번호 */
					,NULL    /* ◎예산부서코드 */
					,NULL    /* ◎예산년월 */
					,NULL    /* ◎예산과목코드 */
					,NULL    /* ◎예산세목코드 */
					,RS.REMK_NAME    /* ●적요 */
					,NULL    /* ◎증빙종류 */
					,NULL    /* ◎출납처리여부 */
					,NULL    /* ◎지급일 */
					,NULL    /* ◎출납방법 */
					,NULL    /* ◎입출구분 */
					,NULL    /* ◎출력순서 */
					,sSORT_ORDR    	 /* ◎정렬순서 */
					,NULL     /* ◎미사용여분인수1 */
					,NULL     /* ◎미사용여분인수2 */
					,NULL     /* ◎미사용여분인수3 */
					,NULL     /* ◎미사용여분인수4 */
					,NULL     /* ◎미사용여분인수5 */
				);
				
				
           	END LOOP;	/* END RS 전표라인 */
          	
			/* ==================================================================
				2-1. 상계처리 : 상대전표번호로 발생된 전표관리항목 COPY
			================================================================== */
        	FOR RS_RF_COPY IN (					
				SELECT MAX(CASE WHEN SEQ = 1 THEN COND_CODE ELSE NULL END) COND_COD1
				      ,MAX(CASE WHEN SEQ = 1 THEN COND_VACD ELSE NULL END) COND_VAC1
				      ,MAX(CASE WHEN SEQ = 2 THEN COND_CODE ELSE NULL END) COND_COD2
				      ,MAX(CASE WHEN SEQ = 2 THEN COND_VACD ELSE NULL END) COND_VAC2
				      ,MAX(CASE WHEN SEQ = 3 THEN COND_CODE ELSE NULL END) COND_COD3
				      ,MAX(CASE WHEN SEQ = 3 THEN COND_VACD ELSE NULL END) COND_VAC3
				      ,MAX(CASE WHEN SEQ = 4 THEN COND_CODE ELSE NULL END) COND_COD4
				      ,MAX(CASE WHEN SEQ = 4 THEN COND_VACD ELSE NULL END) COND_VAC4
				      ,MAX(CASE WHEN SEQ = 5 THEN COND_CODE ELSE NULL END) COND_COD5
				      ,MAX(CASE WHEN SEQ = 5 THEN COND_VACD ELSE NULL END) COND_VAC5
				      ,MAX(CASE WHEN SEQ = 6 THEN COND_CODE ELSE NULL END) COND_COD6
				      ,MAX(CASE WHEN SEQ = 6 THEN COND_VACD ELSE NULL END) COND_VAC6
				      ,MAX(CASE WHEN SEQ = 7 THEN COND_CODE ELSE NULL END) COND_COD7
				      ,MAX(CASE WHEN SEQ = 7 THEN COND_VACD ELSE NULL END) COND_VAC7
				      ,MAX(CASE WHEN SEQ = 8 THEN COND_CODE ELSE NULL END) COND_COD8
				      ,MAX(CASE WHEN SEQ = 8 THEN COND_VACD ELSE NULL END) COND_VAC8
				      ,MAX(CASE WHEN SEQ = 9 THEN COND_CODE ELSE NULL END) COND_COD9
				      ,MAX(CASE WHEN SEQ = 9 THEN COND_VACD ELSE NULL END) COND_VAC9
				  FROM (                       
				        SELECT  RANK() OVER (PARTITION BY A.SLIP_NUMB, A.SLIP_LINE ORDER BY A.SLIP_NUMB, A.SLIP_LINE, A.COND_CODE DESC) AS SEQ 
				              ,A.*
				          FROM TA_SLIPRF A	/* [전표관리항목] */
				         WHERE A.SLIP_NUMB = #OSLI_NUMB#		/* 전표번호 - 상대전표번호 */
				           AND A.SLIP_LINE = #OSLI_LINE#		/* 전표라인 - 상대전표라인 */
				     ) A
				HAVING MAX(CASE WHEN SEQ = 1 THEN COND_CODE ELSE NULL END)
						|| MAX(CASE WHEN SEQ = 2 THEN COND_CODE ELSE NULL END)
						|| MAX(CASE WHEN SEQ = 3 THEN COND_CODE ELSE NULL END)
						|| MAX(CASE WHEN SEQ = 4 THEN COND_CODE ELSE NULL END)
						|| MAX(CASE WHEN SEQ = 5 THEN COND_CODE ELSE NULL END)
						|| MAX(CASE WHEN SEQ = 6 THEN COND_CODE ELSE NULL END)
						|| MAX(CASE WHEN SEQ = 7 THEN COND_CODE ELSE NULL END)
						|| MAX(CASE WHEN SEQ = 8 THEN COND_CODE ELSE NULL END)
						|| MAX(CASE WHEN SEQ = 9 THEN COND_CODE ELSE NULL END)
						IS NOT NULL
	     	)
			LOOP
	     	        	
				/* ==================================================================
					3-2. 관리항목 저장 
				================================================================== */ 
				PKG_FAMIFSLIP.SP_LINERF_SAVE(
				       #SYST_LNCD# 			/* ●시스템언어코드 */
					  ,#UPDT_USID#   		/* ●수정작업자 */
				      ,sSLIP_NUMB      		/* ●전표번호 */
				      ,sSLIP_LINE     		/* ●전표라인번호 */
				      ,RS_RF_COPY.COND_COD1      /* ◎관리항목코드1 */
				      ,RS_RF_COPY.COND_VAC1      /* ◎관리항목값1 */
				      ,RS_RF_COPY.COND_COD2      /* ◎관리항목코드2 */
				      ,RS_RF_COPY.COND_VAC2      /* ◎관리항목값2 */
				      ,RS_RF_COPY.COND_COD3      /* ◎관리항목코드3 */
				      ,RS_RF_COPY.COND_VAC3      /* ◎관리항목값3 */
				      ,RS_RF_COPY.COND_COD4      /* ◎관리항목코드4 */
				      ,RS_RF_COPY.COND_VAC4      /* ◎관리항목값4 */
				      ,RS_RF_COPY.COND_COD5      /* ◎관리항목코드5 */
				      ,RS_RF_COPY.COND_VAC5      /* ◎관리항목값5 */
				      ,RS_RF_COPY.COND_COD6      /* ◎관리항목코드6 */
				      ,RS_RF_COPY.COND_VAC6      /* ◎관리항목값6 */
				      ,RS_RF_COPY.COND_COD7      /* ◎관리항목코드7 */
				      ,RS_RF_COPY.COND_VAC7      /* ◎관리항목값7 */
				      ,RS_RF_COPY.COND_COD8      /* ◎관리항목코드8 */
				      ,RS_RF_COPY.COND_VAC8      /* ◎관리항목값8 */
				      ,RS_RF_COPY.COND_COD9      /* ◎관리항목코드9 */
				      ,RS_RF_COPY.COND_VAC9      /* ◎관리항목값9 */
	      		);
	      		
   			END LOOP;	/* END RS_RF_COPY 전표관리항목COPY */
	      			
	    END;	
	]]>
	</insert>

<!-- 
/* ******************************************************************************
	    작  성  자 : 권미영
	    작  성  일 : 2016.11.14
	    내      용 : 채권채무 상계전표생성 - 전표작성완료
 ******************************************************************************* */
-->
	<insert id="TRMA0060.PROC02" parameterClass="hashmap" >
	<![CDATA[
		BEGIN
			/* TRMA0060.PROC002 채권채무 상계전표생성 - 전표작성완료 */       
			PKG_FAMIFSLIP.SP_FINISH (
			       #SYST_LNCD# 		/* ●시스템언어코드 */
			      ,#UPDT_USID#      /* ●수정작업자 */
			      ,#SLIP_NUMB#      /* ●전표번호 */
	   		);	
   		 END;
	]]>
	</insert>
	
	
<!--
/* ******************************************************************************
         작  성  자 : 권미영
	     작  성  일 : 2017.01.16
  	     내      용 : 채권채무 상계전표생성 - 전표라인의 정렬순서 재조정
******************************************************************************* */
 -->
 	<insert id="TRMA0060.PROC03" parameterClass="hashmap" >
	<![CDATA[
	BEGIN
		/* TRMA0060.PROC03 채권채무 상계전표생성 - 전표라인의 정렬순서 재조정 */

		FOR RS IN (
			SELECT SLIP_LINED	/* 차변 전표라인 */
			     , SLIP_AMNTD	/* 차변 전표금액 */
			     , CUST_CODED	/* 차변 거래처코드 */
			     , CUST_NAMED	/* 차변 거래처명 */
			     , SLIP_LINEC	/* 대변 전표라인 */
			     , SLIP_AMNTC	/* 대변 전표금액 */
			     , CUST_CODEC	/* 대변 거래처코드 */
			     , CUST_NAMEC	/* 대변 거래처명 */
			     , ROW_NUMBER() OVER ( ORDER BY NVL(A.CUST_CODED, A.CUST_CODEC), NVL(A.ROWX_NUMBD, A.ROWX_NUMBC) ) AS SORT_ORDR	/* 정렬순서 */
			  FROM (
			        WITH WT_SLIP AS (
			            SELECT A.SLIP_NUMB
						     , A.SLIP_LINE
						     , B.COND_VACD AS CUST_CODE
						     , SF_GET_CUSTNAME(B.COND_VACD) AS CUST_NAME
						     , A.DRCR_GUBN
						     , A.SLIP_AMNT
						       /* 거래처별 차대구분별 순번 */
						     , ROW_NUMBER() OVER ( PARTITION BY B.COND_VACD, A.DRCR_GUBN ORDER BY B.COND_VACD, A.DRCR_GUBN, A.SLIP_AMNT, A.OSLI_NUMB ) AS ROWX_NUMB /* 차대별 순번 */
						  FROM TA_SLIPNT A
						       INNER JOIN TA_SLIPRF B
						              ON A.SLIP_NUMB = B.SLIP_NUMB
						             AND A.SLIP_LINE = B.SLIP_LINE
						             AND B.COND_CODE = '0002'	/* 거래처 관리항목 */
						 WHERE A.SLIP_NUMB = #SLIP_NUMB#
						 ORDER BY B.COND_VACD
						     , A.DRCR_GUBN 
				    )
			        SELECT D.SLIP_LINE AS SLIP_LINED	/* 차변 전표라인 */
			             , D.SLIP_AMNT AS SLIP_AMNTD	/* 차변 전표금액 */
			             , D.CUST_CODE AS CUST_CODED	/* 차변 거래처코드 */
			             , D.CUST_NAME AS CUST_NAMED	/* 차변 거래처명 */
			             , D.ROWX_NUMB AS ROWX_NUMBD	/* 차변 순번 */
			             , C.SLIP_LINE AS SLIP_LINEC	/* 대변 전표라인 */
			             , C.SLIP_AMNT AS SLIP_AMNTC	/* 대변 전표금액 */
			             , C.CUST_CODE AS CUST_CODEC	/* 대변 거래처코드 */
			             , C.CUST_NAME AS CUST_NAMEC	/* 대변 거래처명 */
			             , C.ROWX_NUMB AS ROWX_NUMBC	/* 대변 순번 */
			          FROM (
			            	SELECT SLIP_NUMB
			            	     , SLIP_LINE
			            	     , ROWX_NUMB
			            	     , CUST_CODE
			            	     , CUST_NAME
			            	     , SLIP_AMNT
			            	  FROM WT_SLIP
			            	 WHERE DRCR_GUBN = 'D'      /* 차변 */
			            	 ORDER BY CUST_CODE
			             ) D
			          FULL JOIN  (
			            	SELECT SLIP_NUMB
			            	     , SLIP_LINE
			            	     , ROWX_NUMB
			            	     , CUST_CODE
			            	     , CUST_NAME
			            	     , SLIP_AMNT
			            	  FROM WT_SLIP
			            	 WHERE DRCR_GUBN = 'C'      /* 대변 */
			            	 ORDER BY CUST_CODE
			             ) C
			            ON D.SLIP_NUMB = C.SLIP_NUMB	/* 전표번호 */
			           AND D.CUST_CODE = C.CUST_CODE	/* 거래처코드 */
			           AND D.ROWX_NUMB = C.ROWX_NUMB	/* 차대별 순번 */
			     ) A
			 ORDER BY NVL(A.CUST_CODED, A.CUST_CODEC)
		)
		LOOP
			
			/* 1-1) 차변 정렬순서 UPDATE */
			IF RS.SLIP_LINED IS NOT NULL THEN	
					
				UPDATE TA_SLIPNT
				   SET SORT_ORDR = RS.SORT_ORDR
				 WHERE SLIP_NUMB = #SLIP_NUMB#
				   AND SLIP_LINE = RS.SLIP_LINED;
				   
			END IF;
			
			/* 1-2) 대변 정렬순서 UPDATE */
			IF RS.SLIP_LINEC IS NOT NULL THEN	
					
				UPDATE TA_SLIPNT
				   SET SORT_ORDR = RS.SORT_ORDR
				 WHERE SLIP_NUMB = #SLIP_NUMB#
				   AND SLIP_LINE = RS.SLIP_LINEC;
				   
			END IF;
			
		END LOOP;
      	
	END;
	]]>
	</insert>
	
</sqlMap>
