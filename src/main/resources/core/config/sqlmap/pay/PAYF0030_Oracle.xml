<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
        "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="PAYF0030">
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : X01과세이연계좌 순번조회
********************************************************************************/
-->
    <select id="PAYF0030.SEARCH01" parameterClass="hashmap" resultClass="hashmap">
    <![CDATA[
            SELECT /* PAYF0030.SEARCH01.X01과세이연계좌 순번조회 */
                   NVL(MAX(TAPA_SEQN), 0) + 1 AS TAPA_SEQN
              FROM PY_RTPPXM
             WHERE EMPL_NUMB = #EMPL_NUMB#
               AND RECE_SEQN = #RECE_SEQN#
    ]]>
    </select>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : X02자료존재여부 조회
********************************************************************************/
-->
    <select id="PAYF0030.SEARCH02" parameterClass="hashmap" resultClass="String">
    <![CDATA[
            SELECT /* PAYF0030.SEARCH02.X02자료존재여부 조회 */
                   COUNT(*) AS ROWCNT
              FROM PY_RTPCXM
             WHERE EMPL_NUMB = #EMPL_NUMB#
               AND RECE_SEQN = #RECE_SEQN#
    ]]>
    </select>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : X03정년퇴직예정일 조회
********************************************************************************/
-->
    <select id="PAYF0030.SEARCH03" parameterClass="hashmap" resultClass="hashmap">
    <![CDATA[
        SELECT /* PAYF0030.SEARCH03.X03정년퇴직예정일 조회 */
               SUBSTRING(CONVERT(VARCHAR(10), DATEADD(MONTH, 696, SYSDATE), 112), 1, 4) + '1231' AS RETR_DATE /* 정년퇴직예정일 */
             , ENCO_DATE /* 입사일 */
             , CASE CLSD_CODE WHEN '01' THEN '1' ELSE '0' END AS EXEC_YSNO /* 임원여부 */
          FROM HR_MASTXM A
         WHERE A.EMPL_NUMB = #EMPL_NUMB#
    ]]>
    </select>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : X04퇴직금지급조서 조회
********************************************************************************/
-->
    <select id="PAYF0030.SEARCH04" parameterClass="hashmap" resultClass="hashmap">
    <![CDATA[
            SELECT /* PAYF0030.SEARCH04.X04퇴직금지급조서 조회 */
                   A.EMPL_NUMB     /* 사원번호 */
                 , A.RECE_SEQN     /* 퇴직정산회차 */
                 , A.RERE_CODE     /* 퇴직사유 */
                 , A.TAXX_GUBN     /* 과세구분 */
                 , A.ENFC_CODE     /* 사업장코드 */
                 , A.FINL_ISDT     /* 최종입사일 */
                 , A.FINL_STDT     /* 최종기산일 */
                 , A.FINL_ENDT     /* 최종퇴사일 */
                 , A.FINL_PYDT     /* 최종지급일 */
                 , NVL(A.FIBF_EXMT, 0) AS FIBF_EXMT     /* 최종이전제외월수 */
                 , NVL(A.FIAF_EXMT, 0) AS FIAF_EXMT     /* 최종이후제외월수 */
                 , NVL(A.FIBF_ADMT, 0) AS FIBF_ADMT     /* 최종이전가산월수 */
                 , NVL(A.FIAF_ADMT, 0) AS FIAF_ADMT     /* 최종이후가산월수 */
                 , A.MIDL_ISDT     /* 중간입사일 */
                 , A.MIDL_STDT     /* 중간기산일 */
                 , A.MIDL_ENDT     /* 중간퇴사일 */
                 , A.MIDL_PYDT     /* 중간지급일 */
                 , NVL(A.MIBF_EXMT,0) AS MIBF_EXMT     /* 중간이전제외월수 */
                 , NVL(A.MIAF_EXMT,0) AS MIAF_EXMT     /* 중간이후제외월수 */
                 , NVL(A.MIBF_ADMT,0) AS MIBF_ADMT     /* 중간이전가산월수 */
                 , NVL(A.MIAF_ADMT,0) AS MIAF_ADMT     /* 중간이후가산월수 */
                 , A.PMST_DATE     /* 급여기준일 */
                 , '시작일' AS TITL_BEDE
                 , '종료일' AS TITL_ENDD
                 , '총일수' AS TITL_DCNT
                 , A.CAL1_YMTH     /* 계산년월1 */
                 , A.CAL1_BEDE      /* 계산1시작일 */
                 , A.CAL1_ENDD      /* 계산1종료일 */
                 , A.CAL1_DCNT      /* 계산1일수 */
                 , A.CAL2_YMTH     /* 계산년월2 */
                 , A.CAL2_BEDE      /* 계산1시작일 */
                 , A.CAL2_ENDD      /* 계산1종료일 */
                 , A.CAL2_DCNT      /* 계산1일수 */
                 , A.CAL3_YMTH     /* 계산년월3 */
                 , A.CAL3_BEDE      /* 계산3시작일 */
                 , A.CAL3_ENDD      /* 계산3종료일 */
                 , A.CAL3_DCNT      /* 계산3일수 */
                 , A.CAL4_YMTH     /* 계산년월4 */
                 , A.CAL4_BEDE      /* 계산4시작일 */
                 , A.CAL4_ENDD      /* 계산4종료일 */
                 , A.CAL4_DCNT      /* 계산4일수 */
                 , NVL(CAL1_DCNT,0)+NVL(CAL2_DCNT,0)+NVL(CAL3_DCNT,0)+NVL(CAL4_DCNT,0) AS DCNT_SUM /* 계산일수합 */
                 , NVL(A.DAVR_WAGE,0) AS DAVR_WAGE    /* 일평균임금 */
                 , NVL(A.MAVR_WAGE,0) AS MAVR_WAGE    /* 월평균임금 */
                 , NVL(A.AVER_WAGE,0) AS AVER_WAGE    /* 평균임금 */
                 , NVL(A.CWRK_YCNT,0) AS CWRK_YCNT    /* 퇴직근속년수 */
                 , NVL(A.CWRK_MCNT,0) AS CWRK_MCNT    /* 퇴직근속월수 */
                 , A.REYS_YCNT || '년' || A.REYS_MCNT || '월' ||  A.REYS_DCNT || '일' AS CWRK_YMCT
                 , NVL(A.REYS_YCNT,0) AS REYS_YCNT
                 , NVL(A.REYS_MCNT,0) AS REYS_MCNT
                 , NVL(A.REYS_DCNT,0) AS REYS_DCNT
                 , NVL(A.PAYX_RATE,(A.CWRK_YCNT*12 + A.CWRK_MCNT)/12) AS PAYX_RATE    /*  지급율이 NULL이면직접계산해서 추가 */
                 , NVL(A.RETI_WAGE,0) AS RETI_WAGE    /* 퇴직급여 */
                 , NVL(A.VORN_ALLO,0) AS VORN_ALLO     /* 명예퇴직수당 */
                 , NVL(A.AVPY_AMOT,0) AS AVPY_AMOT    /* 급여평균금액 */
                 , NVL(A.AVBN_AMOT,0) AS AVBN_AMOT     /* 상여평균금액 */
                 , NVL(A.PYET_AMOT,0) AS PYET_AMOT     /* 기타지급금액 */
                 , NVL(A.TRRT_AMOT,0) AS TRRT_AMOT     /* 퇴직전환금액 */
                 /* , NVL(A.ATPY_AMOT,0) AS ATPY_AMOT */     /*급여압류금액 */
                 /* , NVL(A.CRUN_COST,0) AS CRUN_COST */    /*신협비용 */
                 /* , NVL(A.HOSA_AMOT,0) AS HOSA_AMOT */    /*주택보조금금액 */
                 , NVL(A.OTDE_AMOT,0) AS OTDE_AMOT     /* 기타공제금액 */
                 , A.DBPJ_DATE     /* DB형연금가입일 */
                 , NVL(A.RTBM_AMOT,0) AS RTBM_AMOT     /* 임원퇴직금액 */
                 , NVL(A.RTBN_AMOT,0) AS RTBN_AMOT     /* 퇴직위로금금액 */

                 , NVL(A.PRTN_AMOT,0) AS PRTN_AMOT     /* 급여성퇴직위로금금액 */


                 , NVL(A.FINL_RPAY,0) AS FINL_RPAY     /* 최종퇴직급여 */
                 , NVL(A.FINT_RPAY,0) AS FINT_RPAY     /* 최종비과세퇴직급여 */
                 , NVL(A.FINL_PPTX,0) AS FINL_PPTX     /* 최종기납부세액 */
                 , NVL(A.FIBF_EXMT,0) + NVL(A.FIAF_EXMT,0) + NVL(A.FIBF_ADMT,0) + NVL(A.FIAF_ADMT,0) AS NUJI_MONT /* 누진개월수 */
                 , NVL(A.FINL_RPAY,0) - NVL(A.VORN_ALLO,0) AS FINL_APAY                 /* 퇴직급여 */
                 , A.PBUS_NUMB     /* 중간사업자번호 */
                 , A.PFIR_NAME     /* 중간근무처명 */
                 , NVL(A.MIDL_RPAY,0) AS MIDL_RPAY      /* 중간퇴직급여 */
                 , NVL(A.MINT_RPAY,0) AS MINT_RPAY     /* 중간비과세퇴직급여 */
                 , NVL(A.MIDL_PPTX,0) AS MIDL_PPTX     /* 중간기납부세액 */
                 , NVL(A.RETI_INTX,0) AS RETI_INTX     /* 퇴직소득세 */
                 , NVL(A.RETI_STRD,0) AS RETI_STRD     /* 퇴직농특세 */
                 , NVL(A.RETI_IHTX,0) AS RETI_IHTX     /* 퇴직주민세 */
                 , NVL(A.WORC_INTX,0) AS WORC_INTX     /* 근로정산소득세 */
                 , NVL(A.WORC_STRD,0) AS WORC_STRD     /* 근로정산농특세 */
                 , NVL(A.WORC_IHTX,0) AS WORC_IHTX     /* 근로정산주민세 */
                 , NVL(A.FPTA_ATDD,0) AS FPTA_ATDD      /* 외국납부세액공제액 */
                 , NVL(A.DDUC_AMOT,0) AS DDUC_AMOT      /* 공제금액 */
                 , NVL(A.NPPC_ATDD,0) AS NPPC_ATDD      /* 국민연금전환금공제액 */
                 , NVL(A.HINC_AMOT,0) AS HINC_AMOT      /* 건강보험정산공제액 */
                 , NVL(A.LOAN_RPAM,0) AS LOAN_RPAM      /* 대출상환액 */
                 , NVL(A.REEP_AMOT,0) AS REEP_AMOT      /* 퇴직수당금액 */
                 , NVL(A.PENS_AMOT,0) AS PENS_AMOT      /* 퇴직연금예치금 */
                 , NVL(A.RETI_ALWN,0) AS RETI_ALWN      /* 퇴직충당금 */
                 , A.REMK_100X     /* 비고(100) */
                 , NVL(A.RLPY_AMOT,0) AS RLPY_AMOT      /* 차인지급액 */
                 , A.BANK_CODE      /* 은행코드 */
                 , SF_DECRYPT(ACNT_NUMB) AS ACNT_NUMB   /* 계좌번호 */
                 , A.DPST_NAME                          /* 예금주성명 */
                 , A.CLSE_YSNO                          /* 퇴직처리마감여부 */
                 , '0' AS CHK
                 , NVL(REF1_FILD, 1) AS RETR_RATE       /* 누진율(롯데칠성만) */
                 , C.DEPT_CODE                                                          /* 근무부서 */
                 , G.DEPT_NAME                                                          /* 부서명 */
                 , C.OPOS_CODE                                                          /* 직위코드 */
                 , SF_GET_COMMNAME('OPOS_CODE', C.OPOS_CODE) AS OPOS_NAME               /* 부서명 */
                 , C.EMPL_NAME                                                          /* 사원명 */
                 , C.RERN_NUMB                                                          /* 주민등록번호 */
                 , C.ENCO_DATE                                                          /* 입사일 */
                 , C.RETR_DATE                                                          /* 퇴사일 */
                 , D.POST_NUMB                                                          /* 우편번호 */
                 , D.DTL1_ADDR || ' ' ||  D.DTL2_ADDR AS DTL1_ADDR                      /* 주소 */
                 , H.PAYX_AMOT                                                          /* 지급연차수당 */
                 , TRUNC((NVL (H.PAYX_AMOT,0) ) /12) AS AVER_PAYX                       /* 평균연차수당 */
                 ,(
                   SELECT
                          SUM(TAPD_AMOT)
                     FROM PY_RTPPXM
                    WHERE EMPL_NUMB =  #EMPL_NUMB#
                   )  AS   TAPD_AMOT                                                    /* 과세이연금액 */
              FROM PY_RTPCXM A      /* [퇴직급여계산] */
              LEFT JOIN TM_CODEXD B
                     ON A.EMPL_NUMB = B.COMD_CODE
                    AND B.COMM_CODE = 'RETR_RATE'
              LEFT OUTER JOIN HR_MASTXM C
                           ON A.EMPL_NUMB = C.EMPL_NUMB
              LEFT OUTER JOIN HR_MASTXD D
                           ON A.EMPL_NUMB = D.EMPL_NUMB
              LEFT OUTER JOIN TM_DEPTXM G
                           ON C.DEPT_CODE = G.DEPT_CODE
              LEFT OUTER JOIN PY_RTBONA H
                           ON A.EMPL_NUMB = H.EMPL_NUMB
                          AND A.RECE_SEQN = H.RECE_SEQN
                          AND H.EXPD_CODE = 'A0070'
              LEFT OUTER JOIN PY_RTPPXM J
                           ON A.EMPL_NUMB = J.EMPL_NUMB
                          AND A.RECE_SEQN = J.RECE_SEQN
             WHERE A.EMPL_NUMB = #EMPL_NUMB#     /* 사원번호 */
               AND A.RECE_SEQN = #RECE_SEQN#    /* 퇴직정산회차 */
    ]]>
    </select>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : X05퇴직금지급조서 조회2
********************************************************************************/
-->
    <select id="PAYF0030.SEARCH05" parameterClass="hashmap" resultClass="hashmap">
    <![CDATA[
           SELECT /* PAYF0030.SEARCH05.X05퇴직금지급조서 조회2 */
                  #EMPL_NUMB# AS EMPL_NUMB     /* 사원번호 */
                , #RECE_SEQN# AS RECE_SEQN     /* 퇴직정산회차 */
                , CASE WHEN B.RTTY_CODE = '01' THEN '1' WHEN B.RTTY_CODE = '02' THEN '2' WHEN B.RTTY_CODE = '11' THEN '4' WHEN B.RTTY_CODE = '12' THEN '5' WHEN B.RTTY_CODE = '13' THEN '6' ELSE '3' END  AS RERE_CODE     /* 퇴직사유[RERE_CODE] */
                , '2'  AS TAXX_GUBN    /* 과세구분 */
                , ''  AS ENFC_CODE    /* 사업장코드 */
                , ''  AS FINL_ISDT     /* 최종입사일 */
                , ''  AS FINL_STDT     /* 최종기산일 */
                , A.RETR_DATE AS FINL_ENDT     /* 최종퇴사일 */
                , ''  AS FINL_PYDT     /* 최종지급일 */
                , 0   AS FIBF_EXMT     /* 최종이전제외월수 */
                , 0   AS FIAF_EXMT     /* 최종이후제외월수 */
                , 0   AS FIBF_ADMT     /* 최종이전가산월수 */
                , 0   AS FIAF_ADMT     /* 최종이후가산월수 */
                , ''  AS MIDL_ISDT     /* 중간입사일 */
                , ''  AS MIDL_STDT     /* 중간기산일 */
                , ''  AS MIDL_ENDT     /* 중간퇴사일 */
                , ''  AS MIDL_PYDT     /* 중간지급일 */
                , 0   AS MIBF_EXMT     /* 중간이전제외월수 */
                , 0   AS MIAF_EXMT     /* 중간이후제외월수 */
                , 0   AS MIBF_ADMT     /* 중간이전가산월수 */
                , 0   AS MIAF_ADMT     /* 중간이후가산월수 */
                , A.RETR_DATE AS PMST_DATE     /* 급여기준일 */
                , '시작일' AS TITL_BEDE
                , '종료일' AS TITL_ENDD
                , '총일수' AS TITL_DCNT
                , ''   AS CAL1_YMTH     /* 계산년월1 */
                , ''   AS CAL1_BEDE      /* 계산1시작일 */
                , ''   AS CAL1_ENDD      /* 계산1종료일 */
                , 0   AS CAL1_DCNT      /* 계산1일수 */
                , ''   AS CAL2_YMTH     /* 계산년월2 */
                , ''   AS CAL2_BEDE      /* 계산2시작일 */
                , ''   AS CAL2_ENDD      /* 계산2종료일 */
                , 0   AS CAL2_DCNT      /* 계산2일수 */
                , ''   AS CAL3_YMTH     /* 계산년월3 */
                , ''   AS CAL3_BEDE      /* 계산3시작일 */
                , ''   AS CAL3_ENDD      /* 계산3종료일 */
                , 0   AS CAL3_DCNT      /* 계산3일수 */
                , ''   AS CAL4_YMTH     /* 계산년월4 */
                , ''   AS CAL4_BEDE      /* 계산4시작일 */
                , ''   AS CAL4_ENDD      /* 계산4종료일 */
                , 0   AS CAL4_DCNT      /* 계산4일수 */
                , 0   AS DCNT_SUM        /* 계산일수 합 */
                , 0   AS DAVR_WAGE     /* 일평균임금 */
                , 0   AS MAVR_WAGE     /* 월평균임금 */
                , 0   AS AVER_WAGE     /* 평균임금 */
                , 0   AS CWRK_YCNT     /* 근속년수 */
                , 0   AS CWRK_MCNT     /* 근속월수 */
                , 0   AS PAYX_RATE     /* 지급율 */
                , 0   AS RETI_WAGE     /* 퇴직급여 */
                , 0   AS VORN_ALLO     /* 명예퇴직수당 */
                , 0   AS AVPY_AMOT     /* 급여평균금액 */
                , 0   AS AVBN_AMOT     /* 상여평균금액 */
                , 0   AS PYET_AMOT     /* 기타지급금액 */
                , 0   AS TRRT_AMOT     /* 퇴직전환금액 */
                , 0   AS ATPY_AMOT     /* 급여압류금액 */
                , 0   AS CRUN_COST     /* 신협비용 */
                , 0   AS HOSA_AMOT     /* 주택보조금금액 */
                , 0   AS OTDE_AMOT     /* 기타공제금액 */
                , ''   AS DBPJ_DATE     /* DB형연금가입일 */
                , 0   AS RTBM_AMOT     /* 임원퇴직금액 */
                , 0   AS RTBN_AMOT     /* 퇴직위로금금액 */
                , 0   AS PRTN_AMOT     /* 급여성퇴직위로금금액 */
                , 0   AS FINL_RPAY     /* 최종퇴직급여 */
                , 0   AS FINT_RPAY     /* 최종비과세퇴직급여 */
                , 0   AS FINL_PPTX     /* 최종기납부세액 */
                , ''   AS PBUS_NUMB     /* 중간사업자번호 */
                , ''   AS PFIR_NAME     /* 중간근무처명 */
                , 0   AS MIDL_RPAY     /* 중간퇴직급여 */
                , 0   AS MINT_RPAY     /* 중간비과세퇴직급여 */
                , 0   AS MIDL_PPTX     /* 중간기납부세액 */
                , 0   AS RETI_INTX     /* 퇴직소득세 */
                , 0   AS RETI_STRD     /* 퇴직농특세 */
                , 0   AS RETI_IHTX     /* 퇴직주민세 */
                , 0   AS WORC_INTX     /* 근로정산소득세 */
                , 0   AS WORC_STRD     /* 근로정산농특세 */
                , 0   AS WORC_IHTX     /* 근로정산주민세 */
                , 0    AS FPTA_ATDD      /* 외국납부세액공제액 */
                , 0    AS DDUC_AMOT      /* 공제금액 */
                , 0    AS NPPC_ATDD      /* 국민연금전환금공제액 */
                , 0    AS HINC_AMOT      /* 건강보험정산공제액 */
                , 0    AS LOAN_RPAM      /* 대출상환액 */
                , 0    AS REEP_AMOT      /* 퇴직수당금액 */
                , 0   AS PENS_AMOT     /* 퇴직연금예치금 */
                , 0   AS RETI_ALWN     /* 퇴직충당금 */
                , ''   AS REMK_100X     /* 비고(500) */
                , 0   AS RLPY_AMOT     /* 차인지급액 */
                , ''   AS BANK_CODE     /* 은행코드 */
                , ''   AS ACNT_NUMB     /* 계좌번호 */
                , ''   AS DPST_NAME     /* 예금주성 */
                , '0' AS CLSE_YSNO     /* 퇴직처리마감여부 */
             FROM HR_MASTXM A
               LEFT JOIN HR_APPOXD B
                 ON A.EMPL_NUMB = B.EMPL_NUMB AND A.RETR_DATE = APNT_DATE
            WHERE A.EMPL_NUMB = #EMPL_NUMB#
    ]]>
    </select>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : X06급여 조회
********************************************************************************/
-->
    <select id="PAYF0030.SEARCH06" parameterClass="hashmap" resultClass="hashmap">
    <![CDATA[
            SELECT /* PAYF0030.SEARCH06.X06급여 조회 */
                   A.EMPL_NUMB                       /* 사원번호 */
                 , A.RECE_SEQN                       /* 퇴직정산회차 */
                 , A.EXPD_CODE                       /* 수당코드 */
                 , B.EXPD_NAME                       /* 수당명 */
                 , NVL(A.PAY1_AMOT,0) AS PAY1_AMOT   /* 금액1 */
                 , NVL(A.PAY2_AMOT,0) AS PAY2_AMOT   /* 금액2 */
                 , NVL(A.PAY3_AMOT,0) AS PAY3_AMOT   /* 금액3 */
                 , NVL(A.PAY4_AMOT,0) AS PAY4_AMOT   /* 금액4 */
                 , NVL(A.PAY1_AMOT,0) + NVL(A.PAY2_AMOT,0) + NVL(A.PAY3_AMOT,0) + NVL(A.PAY4_AMOT,0) AS RTPY_TAMT
              FROM PY_RTPAYX A
                LEFT OUTER JOIN PY_ALLDED B
                  ON A.EXPD_CODE = B.EXPD_CODE
             WHERE A.EMPL_NUMB = #EMPL_NUMB#
               AND A.RECE_SEQN = #RECE_SEQN#
             ORDER BY B.SORT_ORDR
    ]]>
    </select>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : X06급여 조회(급여조정 합계)
********************************************************************************/
-->
    <select id="PAYF0030.SUMSEARCH06" parameterClass="hashmap" resultClass="hashmap">
    <![CDATA[
            SELECT /* PAYF0030.SUMSEARCH06.X06급여 조회(급여조정 합계) */
                   A.EMPL_NUMB                       /* 사원번호 */
                 , A.RECE_SEQN                       /* 퇴직정산회차 */
                 , A.EXPD_CODE                       /* 수당코드 */
                 , B.EXPD_NAME                       /* 수당명 */
                 , NVL(A.PAY1_AMOT,0) + NVL(C.PAY1_AMOT,0) AS PAY1_AMOT   /* 금액1 */
                 , NVL(A.PAY2_AMOT,0) + NVL(C.PAY2_AMOT,0) AS PAY2_AMOT   /* 금액2 */
                 , NVL(A.PAY3_AMOT,0) + NVL(C.PAY3_AMOT,0) AS PAY3_AMOT   /* 금액3 */
                 , NVL(A.PAY4_AMOT,0) + NVL(C.PAY4_AMOT,0) AS PAY4_AMOT   /* 금액4 */
                 , NVL(A.PAY1_AMOT,0) + NVL(A.PAY2_AMOT,0) + NVL(A.PAY3_AMOT,0) + NVL(A.PAY4_AMOT,0)
                 + NVL(C.PAY1_AMOT,0) + NVL(C.PAY2_AMOT,0) + NVL(C.PAY3_AMOT,0) + NVL(C.PAY4_AMOT,0) AS RTPY_TAMT
              FROM PY_RTPAYX A
   LEFT OUTER JOIN PY_ALLDED B
                ON A.EXPD_CODE = B.EXPD_CODE
   LEFT OUTER JOIN PY_RTPAYA C
                ON A.EMPL_NUMB = C.EMPL_NUMB
               AND A.RECE_SEQN = C.RECE_SEQN
               AND A.EXPD_CODE = C.EXPD_CODE
             WHERE A.EMPL_NUMB = #EMPL_NUMB#
               AND A.RECE_SEQN = #RECE_SEQN#
             ORDER BY B.SORT_ORDR
    ]]>
    </select>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : X06급여 조회(POP)
********************************************************************************/
-->
    <select id="PAYF0030.POPSEARCH00" parameterClass="hashmap" resultClass="hashmap">
    <![CDATA[
            SELECT /* PAYF0030.POPSEARCH00.X06급여 조회(POP) */
                   A.EMPL_NUMB   /* 사원번호 */
                 , A.RECE_SEQN   /* 퇴직정산회차 */
                 , A.EXPD_CODE   /* 수당코드 */
                 , B.EXPD_NAME    /* 수당명 */
                 , NVL(A.PAY1_AMOT,0) AS PAY1_AMOT_ORG  /* 금액1 */
                 , NVL(A.PAY2_AMOT,0) AS PAY2_AMOT_ORG  /* 금액2 */
                 , NVL(A.PAY3_AMOT,0) AS PAY3_AMOT_ORG  /* 금액3 */
                 , NVL(A.PAY4_AMOT,0) AS PAY4_AMOT_ORG  /* 금액4 */
                 , NVL(A.PAY1_AMOT,0) + NVL(A.PAY2_AMOT,0) + NVL(A.PAY3_AMOT,0) + NVL(A.PAY4_AMOT,0) AS RTPY_TAMT_ORG
                 , NVL(C.PAY1_AMOT,0) AS PAY1_AMOT      /* 금액1 */
                 , NVL(C.PAY2_AMOT,0) AS PAY2_AMOT      /* 금액2 */
                 , NVL(C.PAY3_AMOT,0) AS PAY3_AMOT      /* 금액3 */
                 , NVL(C.PAY4_AMOT,0) AS PAY4_AMOT      /* 금액4 */
                 , NVL(C.PAY1_AMOT,0) + NVL(C.PAY2_AMOT,0) + NVL(C.PAY3_AMOT,0) + NVL(C.PAY4_AMOT,0) AS RTPY_TAMT
              FROM PY_RTPAYX A
   LEFT OUTER JOIN PY_ALLDED B
                ON A.EXPD_CODE = B.EXPD_CODE
   LEFT OUTER JOIN PY_RTPAYA C
                ON A.EMPL_NUMB = C.EMPL_NUMB
               AND A.RECE_SEQN = C.RECE_SEQN
               AND A.EXPD_CODE = C.EXPD_CODE
             WHERE A.EMPL_NUMB = #EMPL_NUMB#
               AND A.RECE_SEQN = #RECE_SEQN#
             ORDER BY B.SORT_ORDR
    ]]>
    </select>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : X07상여 조회
********************************************************************************/
-->
    <select id="PAYF0030.SEARCH07" parameterClass="hashmap" resultClass="hashmap">
    <![CDATA[
            SELECT /* PAYF0030.SEARCH07.X07상여 조회 */
                   EMPL_NUMB                             /* 사원번호 */
                 , RECE_SEQN                             /* 퇴직정산회차 */
                 , PAYX_DATE                             /* 지급일자 */
                 , EXPD_CODE                             /* 수당코드 */
                 , EXPD_NAME                             /* 수당명 */
                 , SUM(PAYX_AMOT) AS PAYX_AMOT           /* 상여금액 */
              FROM( SELECT A.EMPL_NUMB
                         , A.RECE_SEQN
                         , A.PAYX_DATE
                         , A.EXPD_CODE
                         , B.EXPD_NAME
                         , NVL(A.PAYX_AMOT, 0) AS PAYX_AMOT
                      FROM PY_RTBONU A
                      LEFT OUTER JOIN PY_ALLDED B
                                   ON A.EXPD_CODE = B.EXPD_CODE
                     WHERE A.EMPL_NUMB = #EMPL_NUMB#
                       AND A.RECE_SEQN = #RECE_SEQN#
                     UNION ALL
                    SELECT A.EMPL_NUMB
                         , A.RECE_SEQN
                         , A.PAYX_DATE
                         , A.EXPD_CODE
                         , B.EXPD_NAME
                         , NVL(A.PAYX_AMOT, 0) AS PAYX_AMOT
                      FROM PY_RTBONA A
                      LEFT OUTER JOIN PY_ALLDED B
                                   ON A.EXPD_CODE = B.EXPD_CODE
                     WHERE A.EMPL_NUMB = #EMPL_NUMB#
                       AND A.RECE_SEQN = #RECE_SEQN#
                   )
             GROUP BY EMPL_NUMB, RECE_SEQN, PAYX_DATE, EXPD_CODE, EXPD_NAME
             ORDER BY EXPD_CODE, PAYX_DATE
    ]]>
    </select>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : X07상여 조회(POP)
********************************************************************************/
-->
    <select id="PAYF0030.POPSEARCH01" parameterClass="hashmap" resultClass="hashmap">
    <![CDATA[
            SELECT /* PAYF0030.POPSEARCH01.X07상여 조회(POP) */
                   EMPL_NUMB                             /* 사원번호 */
                 , RECE_SEQN                             /* 퇴직정산회차 */
                 , PAYX_DATE                             /* 지급일자 */
                 , EXPD_CODE                             /* 수당코드 */
                 , EXPD_NAME                             /* 수당명 */
                 , SUM(PAYX_AMOT_ORG) AS PAYX_AMOT_ORG   /* 퇴직상여금액 */
                 , SUM(PAYX_AMOT) AS PAYX_AMOT           /* 상여조정금액 */
              FROM( SELECT A.EMPL_NUMB
                         , A.RECE_SEQN
                         , A.PAYX_DATE
                         , A.EXPD_CODE
                         , B.EXPD_NAME
                         , NVL(A.PAYX_AMOT, 0) AS PAYX_AMOT_ORG
                         , 0 AS PAYX_AMOT
                      FROM PY_RTBONU A
                      LEFT JOIN PY_ALLDED B
                             ON A.EXPD_CODE = B.EXPD_CODE
                     WHERE A.EMPL_NUMB = #EMPL_NUMB#
                       AND A.RECE_SEQN = #RECE_SEQN#
                     UNION ALL
                    SELECT A.EMPL_NUMB
                         , A.RECE_SEQN
                         , A.PAYX_DATE
                         , A.EXPD_CODE
                         , B.EXPD_NAME
                         , 0 AS PAYX_AMOT_ORG
                         , NVL(A.PAYX_AMOT, 0)
                      FROM PY_RTBONA A
                      LEFT JOIN PY_ALLDED B
                             ON A.EXPD_CODE = B.EXPD_CODE
                     WHERE A.EMPL_NUMB = #EMPL_NUMB#
                       AND A.RECE_SEQN = #RECE_SEQN#
                   )
             GROUP BY EMPL_NUMB, RECE_SEQN, PAYX_DATE, EXPD_CODE, EXPD_NAME
             ORDER BY EXPD_CODE, PAYX_DATE
    ]]>
    </select>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : X08퇴직정산 조회
********************************************************************************/
-->
    <select id="PAYF0030.SEARCH08" parameterClass="hashmap" resultClass="hashmap">
    <![CDATA[
            SELECT /* PAYF0030.SEARCH08.X08퇴직정산 조회 */
                   A.EMPL_NUMB     /* 사원번호 */
                 , A.RECE_SEQN     /* 퇴직정산회차 */
                 , A.RSTR_DATE     /* 귀속연도시작일 */
                 , A.REND_DATE     /* 귀속연도종료일 */
                 , A.RERE_CODE     /* 퇴직사유[RERE_CODE] */
                 , A.PFIR_NAME     /* 중간근무처명 */
                 , A.PBUS_NUMB     /* 중간사업자번호 */
                 , NVL(A.MIDL_RPAY, 0) AS MIDL_RPAY     /* 중간퇴직급여 */
                 , NVL(A.MINT_RPAY, 0) AS MINT_RPAY     /* 중간비과세퇴직급여 */
                 , NVL(A.MITA_RPAY, 0) AS MITA_RPAY     /* 중간과세대상퇴직급여 */
                 , NVL(A.MITA_RPAY, 0) AS MITA_RPAY1     /* 중간과세대상퇴직급여 */
                 , NVL(A.FINL_RPAY, 0) AS FINL_RPAY     /* 최종퇴직급여 */
                 , NVL(A.FINT_RPAY, 0) AS FINT_RPAY     /* 최종비과세퇴직급여 */
                 , NVL(A.FITA_RPAY, 0) AS FITA_RPAY     /* 최종과세대상퇴직급여 */
                 , NVL(A.FITA_RPAY, 0) AS FITA_RPAY1    /* 최종과세대상퇴직급여 */
                 , NVL(A.TOTL_RPAY, 0) AS TOTL_RPAY     /* 합산퇴직급여 */
                 , NVL(A.TLNT_RPAY, 0) AS TLNT_RPAY     /* 합산비과세퇴직급여 */
                 , NVL(A.TLTA_RPAY, 0) AS TLTA_RPAY     /* 합산과세대상퇴직급여 */
                 , NVL(A.TLTA_RPAY, 0) AS TLTA_RPAY1    /* 합산과세대상퇴직급여 */
                 , A.MIDL_ISDT     /* 중간입사일 */
                 , A.MIDL_STDT     /* 중간기산일 */
                 , A.MIDL_ENDT     /* 중간퇴사일 */
                 , A.MIDL_PYDT     /* 중간지급일 */
                 , A.MICT_MONT     /* 중간근속월수 */
                 , A.MIEX_MONT     /* 중간제외월수 */
                 , A.MIAD_MONT     /* 중간가산월수 */
                 , A.MICT_YEAR     /* 중간근속연수 */
                 , A.FINL_ISDT     /* 최종입사일 */
                 , A.FINL_STDT     /* 최종기산일 */
                 , A.FINL_ENDT     /* 최종퇴사일 */
                 , A.FINL_PYDT     /* 최종지급일 */
                 , A.FICT_MONT     /* 최종근속월수 */
                 , A.FIEX_MONT     /* 최종제외월수 */
                 , A.FIAD_MONT     /* 최종가산월수 */
                 , A.FICT_YEAR     /* 최종근속연수 */
                 , A.TOTL_ISDT     /* 합산입사일 */
                 , A.TOTL_STDT     /* 합산기산일 */
                 , A.TOTL_ENDT     /* 합산퇴사일 */
                 , A.TLCT_MONT     /* 합산근속월수 */
                 , A.TLEX_MONT     /* 합산제외월수 */
                 , A.TLAD_MONT     /* 합산가산월수 */
                 , A.TLOL_MONT     /* 합산중복월수 */
                 , A.TLCT_YEAR     /* 합산근속연수 */
                 , A.BEFO_STDT     /* 이전기산일 */
                 , A.BEFO_ENDT     /* 이전퇴사일 */
                 , A.BFCT_MONT     /* 이전근속월수 */
                 , A.BFEX_MONT     /* 이전제외월수 */
                 , A.BFAD_MONT     /* 이전가산월수 */
                 , A.BFCT_YEAR     /* 이전근속연수 */
                 , A.AFTR_STDT     /* 이후기산일 */
                 , A.AFTR_ENDT     /* 이후퇴사일 */
                 , A.AFCT_MONT     /* 이후근속월수 */
                 , A.AFEX_MONT     /* 이후제외월수 */
                 , A.AFAD_MONT     /* 이후가산월수 */
                 , A.AFCT_YEAR     /* 이후근속연수 */
                 , NVL(A.AFRD_AMOT, 0) AS AFRD_AMOT     /* 정률공제액 */
                 , NVL(A.CSYD_AMOT, 0) AS CSYD_AMOT     /* 근속연수공제액 */
                 , NVL(A.STAN_ASST, 0) AS STAN_ASST     /* 퇴직소득과세표준 */
                 , NVL(A.BFST_ASST, 0) AS BFST_ASST     /* 이전과세표준 */
                 , NVL(A.BFYA_STAD, 0) AS BFYA_STAD     /* 이전연평균과세표준 */
                 , NVL(A.BFYA_CTAX, 0) AS BFYA_CTAX     /* 이전연평균산출세액 */
                 , NVL(A.BEFO_CTAX, 0) AS BEFO_CTAX     /* 이전산출세액 */
                 , NVL(A.AFST_ASST, 0) AS AFST_ASST     /* 이후과세표준 */
                 , NVL(A.AFYA_STAD, 0) AS AFYA_STAD     /* 이후연평균과세표준 */
                 , NVL(A.AFCS_ASST, 0) AS AFCS_ASST     /* 이후환산과세표준 */
                 , NVL(A.AFCC_TAXX, 0) AS AFCC_TAXX     /* 이후환산산출세액 */
                 , NVL(A.AFYA_CTAX, 0) AS AFYA_CTAX     /* 이후연평균산출세액 */
                 , NVL(A.AFTR_CTAX, 0) AS AFTR_CTAX     /* 이후산출세액 */
                 , NVL(A.TLST_ASST, 0) AS TLST_ASST     /* 합산과세표준 */
                 , NVL(A.TLYA_STAD, 0) AS TLYA_STAD     /* 합산연평균과세표준 */
                 , NVL(A.TLCS_ASST, 0) AS TLCS_ASST     /* 합산환산과세표준 */
                 , NVL(A.TLCC_TAXX, 0) AS TLCC_TAXX     /* 합산환산산출세액 */
                 , NVL(A.TLYA_CTAX, 0) AS TLYA_CTAX     /* 합산연평균산출세액 */
                 , NVL(A.TOTL_CTAX, 0) AS TOTL_CTAX     /* 합산산출세액 */
                 , NVL(A.TOTL_PPTX, 0) AS TOTL_PPTX     /* 합산기납부세액 */
                 , NVL(A.TLSR_TAMT, 0) AS TLSR_TAMT     /* 합산신고대상세액 */
                 , NVL(A.TAPS_TAMT, 0) AS TAPS_TAMT     /* 과세이연신고대상세액 */
                 , A.TAPF_NAME     /* 과세이연사업자명 */
                 , A.TAPB_NUMB     /* 과세이연사업자번호 */
                 , SF_DECRYPT(A.TAPA_NUMB) AS TAPA_NUMB     /* 과세이연계좌번호 */
                 , A.TAPD_DATE     /* 과세이연입금일 */
                 , NVL(A.TAPD_AMOT, 0) AS TAPD_AMOT     /* 과세이연입금액 */
                 , NVL(A.TAPT_RPAY, 0) AS TAPT_RPAY     /* 과세이연퇴직급여 */
                 , NVL(A.TAPT_TAMT, 0) AS TAPT_TAMT     /* 과세이연세액 */
                 , NVL(A.SURE_ITAX, 0) AS SURE_ITAX     /* 신고대상소득세 */
                 , NVL(A.SURE_RTAX, 0) AS SURE_RTAX     /* 신고대상주민세 */
                 , NVL(A.SURE_FTAX, 0) AS SURE_FTAX     /* 신고대상농특세 */
                 , NVL(A.SURE_ITAX, 0) + NVL(A.SURE_RTAX, 0) + NVL(A.SURE_FTAX, 0) AS SURE_TAMT /* 신고대상합계 */
                 , NVL(A.PORE_ITAX, 0) AS PORE_ITAX     /* 이연퇴직소득세 */
                 , NVL(A.PORE_RTAX, 0) AS PORE_RTAX     /* 이연퇴직주민세 */
                 , NVL(A.PORE_FTAX, 0) AS PORE_FTAX     /* 이연퇴직농특세 */
                 , NVL(A.PORE_ITAX, 0) + NVL(A.PORE_RTAX, 0) + NVL(A.PORE_FTAX, 0) AS PORE_TAMT /* 이연퇴직합계 */
                 , NVL(A.DEDU_ITAX, 0) AS DEDU_ITAX     /* 차감징수소득세 */
                 , NVL(A.DEDU_RTAX, 0) AS DEDU_RTAX     /* 차감징수주민세 */
                 , NVL(A.DEDU_FTAX, 0) AS DEDU_FTAX     /* 차감징수농특세 */
                 , NVL(A.DEDU_ITAX, 0) + NVL(A.DEDU_RTAX, 0) + NVL(A.DEDU_FTAX, 0) AS DEDU_TAMT /* 차감징수합계 */
                 , NVL(A.CALC_REIN, 0) AS CALC_REIN     /* 정산퇴직소득_2016.01.01이후 */
                 , NVL(A.CWYC_DDUC, 0) AS CWYC_DDUC     /* 근속연수공제_2016.01.1이후 */
                 , NVL(A.CONV_WAGE, 0) AS CONV_WAGE     /* 환산급여_2016.01.01이후 */
                 , NVL(A.COWA_DDUC, 0) AS COWA_DDUC     /* 환산급여공제_2016.01.01이후 */
                 , NVL(A.REIN_STAS, 0) AS REIN_STAS     /* 퇴직소득과세표준_2016.01.01이후 */
                 , NVL(A.CONV_CLTX, 0) AS CONV_CLTX     /* 환산산출세액_2016.01.01이후 */
                 , NVL(A.CLCR_TXAM, 0) AS CLCR_TXAM     /* 산출세액_2016.01.01이후 */
                 , A.TAXX_YEAR     /* 퇴직일이 속하는 과세연도 */
                 , NVL(A.SPUE_CLTX, 0) AS SPUE_CLTX     /* 특례적용산출세액 */
                 , B.OFFI_NAME     /* 사업장명칭 */
                 , B.BSNS_NUMB     /* 사업자등록번호 */
                 , A.OWNR_NAME     /* 대표자성명 */
              FROM PY_RTPWXM A    /* [퇴직소득원천징수영수증] */
              LEFT OUTER JOIN TM_OFFICE B
                           ON B.ACCT_GUBN = '100'
             WHERE A.EMPL_NUMB = #EMPL_NUMB#     /* 사원번호 */
               AND A.RECE_SEQN = #RECE_SEQN#     /* 퇴직정산회차 */
    ]]>
    </select>

<!--
/*******************************************************************************
     작 성 자 : 황치웅
     작 성 일 : 2016. 10. 31
     내     용 : 원천징수 영수증 리포트를 출력한다.
********************************************************************************/
-->
    <select id="PAYF0030.PRINT00" parameterClass="hashmap" resultClass="hashmap">
    <![CDATA[
            SELECT /* PAYF0030.PRINT00.리포트 출력 */
                   A.EMPL_NUMB     /* 사원번호 */
                 , A.RECE_SEQN     /* 퇴직정산회차 */
                 , A.RSTR_DATE     /* 귀속연도시작일 */
                 , A.REND_DATE     /* 귀속연도종료일 */
                 , A.RERE_CODE     /* 퇴직사유[RERE_CODE] */
                 , A.PFIR_NAME     /* 중간근무처명 */
                 , A.PBUS_NUMB     /* 중간사업자번호 */
                 , NVL(A.MIDL_RPAY, 0) AS MIDL_RPAY     /* 중간퇴직급여 */
                 , NVL(A.MINT_RPAY, 0) AS MINT_RPAY     /* 중간비과세퇴직급여 */
                 , NVL(A.MITA_RPAY, 0) AS MITA_RPAY     /* 중간과세대상퇴직급여 */
                 , NVL(A.MITA_RPAY, 0) AS MITA_RPAY1     /* 중간과세대상퇴직급여 */
                 , NVL(A.FINL_RPAY, 0) AS FINL_RPAY     /* 최종퇴직급여 */
                 , NVL(A.FINT_RPAY, 0) AS FINT_RPAY     /* 최종비과세퇴직급여 */
                 , NVL(A.FITA_RPAY, 0) AS FITA_RPAY     /* 최종과세대상퇴직급여 */
                 , NVL(A.FITA_RPAY, 0) AS FITA_RPAY1    /* 최종과세대상퇴직급여 */
                 , NVL(A.TOTL_RPAY, 0) AS TOTL_RPAY     /* 합산퇴직급여 */
                 , NVL(A.TLNT_RPAY, 0) AS TLNT_RPAY     /* 합산비과세퇴직급여 */
                 , NVL(A.TLTA_RPAY, 0) AS TLTA_RPAY     /* 합산과세대상퇴직급여 */
                 , NVL(A.TLTA_RPAY, 0) AS TLTA_RPAY1    /* 합산과세대상퇴직급여 */
                 , A.MIDL_ISDT     /* 중간입사일 */
                 , A.MIDL_STDT     /* 중간기산일 */
                 , A.MIDL_ENDT     /* 중간퇴사일 */
                 , A.MIDL_PYDT     /* 중간지급일 */
                 , A.MICT_MONT     /* 중간근속월수 */
                 , A.MIEX_MONT     /* 중간제외월수 */
                 , A.MIAD_MONT     /* 중간가산월수 */
                 , A.MICT_YEAR     /* 중간근속연수 */
                 , A.FINL_ISDT     /* 최종입사일 */
                 , A.FINL_STDT     /* 최종기산일 */
                 , A.FINL_ENDT     /* 최종퇴사일 */
                 , A.FINL_PYDT     /* 최종지급일 */
                 , A.FICT_MONT     /* 최종근속월수 */
                 , A.FIEX_MONT     /* 최종제외월수 */
                 , A.FIAD_MONT     /* 최종가산월수 */
                 , A.FICT_YEAR     /* 최종근속연수 */
                 , A.TOTL_ISDT     /* 합산입사일 */
                 , A.TOTL_STDT     /* 합산기산일 */
                 , A.TOTL_ENDT     /* 합산퇴사일 */
                 , A.TLCT_MONT     /* 합산근속월수 */
                 , A.TLEX_MONT     /* 합산제외월수 */
                 , A.TLAD_MONT     /* 합산가산월수 */
                 , A.TLOL_MONT     /* 합산중복월수 */
                 , A.TLCT_YEAR     /* 합산근속연수 */
                 , A.BEFO_STDT     /* 이전기산일 */
                 , A.BEFO_ENDT     /* 이전퇴사일 */
                 , A.BFCT_MONT     /* 이전근속월수 */
                 , A.BFEX_MONT     /* 이전제외월수 */
                 , A.BFAD_MONT     /* 이전가산월수 */
                 , A.BFCT_YEAR     /* 이전근속연수 */
                 , A.AFTR_STDT     /* 이후기산일 */
                 , A.AFTR_ENDT     /* 이후퇴사일 */
                 , A.AFCT_MONT     /* 이후근속월수 */
                 , A.AFEX_MONT     /* 이후제외월수 */
                 , A.AFAD_MONT     /* 이후가산월수 */
                 , A.AFCT_YEAR     /* 이후근속연수 */
                 , NVL(A.AFRD_AMOT, 0) AS AFRD_AMOT     /* 정률공제액 */
                 , NVL(A.CSYD_AMOT, 0) AS CSYD_AMOT     /* 근속연수공제액 */
                 , NVL(A.STAN_ASST, 0) AS STAN_ASST     /* 퇴직소득과세표준 */
                 , NVL(A.BFST_ASST, 0) AS BFST_ASST     /* 이전과세표준 */
                 , NVL(A.BFYA_STAD, 0) AS BFYA_STAD     /* 이전연평균과세표준 */
                 , NVL(A.BFYA_CTAX, 0) AS BFYA_CTAX     /* 이전연평균산출세액 */
                 , NVL(A.BEFO_CTAX, 0) AS BEFO_CTAX     /* 이전산출세액 */
                 , NVL(A.AFST_ASST, 0) AS AFST_ASST     /* 이후과세표준 */
                 , NVL(A.AFYA_STAD, 0) AS AFYA_STAD     /* 이후연평균과세표준 */
                 , NVL(A.AFCS_ASST, 0) AS AFCS_ASST     /* 이후환산과세표준 */
                 , NVL(A.AFCC_TAXX, 0) AS AFCC_TAXX     /* 이후환산산출세액 */
                 , NVL(A.AFYA_CTAX, 0) AS AFYA_CTAX     /* 이후연평균산출세액 */
                 , NVL(A.AFTR_CTAX, 0) AS AFTR_CTAX     /* 이후산출세액 */
                 , NVL(A.TLST_ASST, 0) AS TLST_ASST     /* 합산과세표준 */
                 , NVL(A.TLYA_STAD, 0) AS TLYA_STAD     /* 합산연평균과세표준 */
                 , NVL(A.TLCS_ASST, 0) AS TLCS_ASST     /* 합산환산과세표준 */
                 , NVL(A.TLCC_TAXX, 0) AS TLCC_TAXX     /* 합산환산산출세액 */
                 , NVL(A.TLYA_CTAX, 0) AS TLYA_CTAX     /* 합산연평균산출세액 */
                 , NVL(A.TOTL_CTAX, 0) AS TOTL_CTAX     /* 합산산출세액 */
                 , NVL(A.TOTL_PPTX, 0) AS TOTL_PPTX     /* 합산기납부세액 */
                 , NVL(A.TLSR_TAMT, 0) AS TLSR_TAMT     /* 합산신고대상세액 */
                 , NVL(A.TAPS_TAMT, 0) AS TAPS_TAMT     /* 과세이연신고대상세액 */
                 , A.TAPF_NAME     /* 과세이연사업자명 */
                 , A.TAPB_NUMB     /* 과세이연사업자번호 */
                 , SF_DECRYPT(A.TAPA_NUMB) AS TAPA_NUMB     /* 과세이연계좌번호 */
                 , A.TAPD_DATE     /* 과세이연입금일 */
                 , NVL(A.TAPD_AMOT, 0) AS TAPD_AMOT     /* 과세이연입금액 */
                 , NVL(A.TAPT_RPAY, 0) AS TAPT_RPAY     /* 과세이연퇴직급여 */
                 , NVL(A.TAPT_TAMT, 0) AS TAPT_TAMT     /* 과세이연세액 */
                 , NVL(A.SURE_ITAX, 0) AS SURE_ITAX     /* 신고대상소득세 */
                 , NVL(A.SURE_RTAX, 0) AS SURE_RTAX     /* 신고대상주민세 */
                 , NVL(A.SURE_FTAX, 0) AS SURE_FTAX     /* 신고대상농특세 */
                 , NVL(A.SURE_ITAX, 0) + NVL(A.SURE_RTAX, 0) + NVL(A.SURE_FTAX, 0) AS SURE_TAMT /* 신고대상합계 */
                 , NVL(A.PORE_ITAX, 0) AS PORE_ITAX     /* 이연퇴직소득세 */
                 , NVL(A.PORE_RTAX, 0) AS PORE_RTAX     /* 이연퇴직주민세 */
                 , NVL(A.PORE_FTAX, 0) AS PORE_FTAX     /* 이연퇴직농특세 */
                 , NVL(A.PORE_ITAX, 0) + NVL(A.PORE_RTAX, 0) + NVL(A.PORE_FTAX, 0) AS PORE_TAMT /* 이연퇴직합계 */
                 , NVL(A.DEDU_ITAX, 0) AS DEDU_ITAX     /* 차감징수소득세 */
                 , NVL(A.DEDU_RTAX, 0) AS DEDU_RTAX     /* 차감징수주민세 */
                 , NVL(A.DEDU_FTAX, 0) AS DEDU_FTAX     /* 차감징수농특세 */
                 , NVL(A.DEDU_ITAX, 0) + NVL(A.DEDU_RTAX, 0) + NVL(A.DEDU_FTAX, 0) AS DEDU_TAMT /* 차감징수합계 */
                 , NVL(A.CALC_REIN, 0) AS CALC_REIN     /* 정산퇴직소득_2016.01.01이후 */
                 , NVL(A.CWYC_DDUC, 0) AS CWYC_DDUC     /* 근속연수공제_2016.01.1이후 */
                 , NVL(A.CONV_WAGE, 0) AS CONV_WAGE     /* 환산급여_2016.01.01이후 */
                 , NVL(A.COWA_DDUC, 0) AS COWA_DDUC     /* 환산급여공제_2016.01.01이후 */
                 , NVL(A.REIN_STAS, 0) AS REIN_STAS     /* 퇴직소득과세표준_2016.01.01이후 */
                 , NVL(A.CONV_CLTX, 0) AS CONV_CLTX     /* 환산산출세액_2016.01.01이후 */
                 , NVL(A.CLCR_TXAM, 0) AS CLCR_TXAM     /* 산출세액_2016.01.01이후 */
                 , A.TAXX_YEAR                          /* 퇴직일이 속하는 과세연도 */
                 , NVL(A.SPUE_CLTX, 0) AS SPUE_CLTX     /* 특례적용산출세액 */
                 , B.OFFI_NAME                          /* 사업장명칭 */
                 , B.BSNS_NUMB                          /* 사업자등록번호 */
                 , A.OWNR_NAME                          /* 대표자명 */
                 , B.JURI_NUMB                          /* 법인주민번호  */
                 , B.ADDR_DESC                          /* 소재지(주소) */
                 , C.DBPJ_DATE                          /* 퇴직연금제도 가입일 */
                 , D.EMPL_NAME                          /* 성명 */                  
                 , D.RERN_NUMB                          /* 주민등록번호 */
                 , D.CLSD_CODE                          /* 임원여부 */
                 , E.DTL1_ADDR                          /* 주소 */
                 , E.DTL2_ADDR                          /* 주소 */
                 , F.RECL_CODE                          /* 거주자구분 */
                 , F.LFDN_CODE                          /* 내외국인 */
                 , F.DOMC_CODE                          /* 거주지국코드 */
                 , SF_GET_COMMNAME('DOMC_CODE', F.DOMC_CODE) AS DOMC_NAME /*국적*/
                 , G.TAPF_NAME1
                 , G.TAPB_NUMB1
                 , G.TAPA_NUMB1
                 , G.TAPD_AMOT1
                 , G.TAPD_DATE1
                 , G.BANK_NAME1
                 , G.TAPF_NAME2
                 , G.TAPB_NUMB2
                 , G.TAPA_NUMB2
                 , G.TAPD_AMOT2
                 , G.TAPD_DATE2
                 , G.BANK_NAME2
                 , G.TAPF_NAME3
                 , G.TAPB_NUMB3
                 , G.TAPA_NUMB3
                 , G.TAPD_AMOT3
                 , G.TAPD_DATE3
                 , G.BANK_NAME3
                 , G.TAPF_NAME4
                 , G.TAPB_NUMB4
                 , G.TAPA_NUMB4
                 , G.TAPD_AMOT4
                 , G.TAPD_DATE4
                 , G.BANK_NAME4
                 , G.TAPF_NAME5
                 , G.TAPB_NUMB5
                 , G.TAPA_NUMB5
                 , G.TAPD_AMOT5
                 , G.TAPD_DATE5
                 , G.BANK_NAME5
              FROM PY_RTPWXM A    /* [퇴직소득원천징수영수증] */
              LEFT OUTER JOIN TM_OFFICE B
                           ON B.ACCT_GUBN = '100'
              LEFT OUTER JOIN PY_RTPCXM C
                           ON A.EMPL_NUMB = C.EMPL_NUMB
                          AND A.RECE_SEQN = C.RECE_SEQN
              LEFT OUTER JOIN HR_MASTXM D
                           ON A.EMPL_NUMB = D.EMPL_NUMB
              LEFT OUTER JOIN HR_MASTXD E
                           ON A.EMPL_NUMB = E.EMPL_NUMB
              LEFT OUTER JOIN PY_MASTPM F 
                           ON A.EMPL_NUMB = F.EMPL_NUMB     
              LEFT OUTER JOIN (
                             SELECT EMPL_NUMB
                                  , RECE_SEQN
                                  , MAX(DECODE(TAPA_SEQN, 1, TAPF_NAME, NULL)) AS TAPF_NAME1
                                  , MAX(DECODE(TAPA_SEQN, 1, TAPB_NUMB, NULL)) AS TAPB_NUMB1
                                  , MAX(DECODE(TAPA_SEQN, 1, TAPA_NUMB, NULL)) AS TAPA_NUMB1
                                  , MAX(DECODE(TAPA_SEQN, 1, TAPD_AMOT, 0))    AS TAPD_AMOT1
                                  , MAX(DECODE(TAPA_SEQN, 1, TAPD_DATE, NULL)) AS TAPD_DATE1
                                  , MAX(DECODE(TAPA_SEQN, 1, SF_GET_COMMNAME('BANK_CODE',BANK_CODE), NULL)) AS BANK_NAME1
                                  , MAX(DECODE(TAPA_SEQN, 2, TAPF_NAME, NULL)) AS TAPF_NAME2
                                  , MAX(DECODE(TAPA_SEQN, 2, TAPB_NUMB, NULL)) AS TAPB_NUMB2
                                  , MAX(DECODE(TAPA_SEQN, 2, TAPA_NUMB, NULL)) AS TAPA_NUMB2
                                  , MAX(DECODE(TAPA_SEQN, 2, TAPD_AMOT, 0))    AS TAPD_AMOT2
                                  , MAX(DECODE(TAPA_SEQN, 2, TAPD_DATE, NULL)) AS TAPD_DATE2
                                  , MAX(DECODE(TAPA_SEQN, 2, SF_GET_COMMNAME('BANK_CODE',BANK_CODE), NULL)) AS BANK_NAME2
                                  , MAX(DECODE(TAPA_SEQN, 3, TAPF_NAME, NULL)) AS TAPF_NAME3
                                  , MAX(DECODE(TAPA_SEQN, 3, TAPB_NUMB, NULL)) AS TAPB_NUMB3
                                  , MAX(DECODE(TAPA_SEQN, 3, TAPA_NUMB, NULL)) AS TAPA_NUMB3
                                  , MAX(DECODE(TAPA_SEQN, 3, TAPD_AMOT, 0))    AS TAPD_AMOT3
                                  , MAX(DECODE(TAPA_SEQN, 3, TAPD_DATE, NULL)) AS TAPD_DATE3
                                  , MAX(DECODE(TAPA_SEQN, 3, SF_GET_COMMNAME('BANK_CODE',BANK_CODE), NULL)) AS BANK_NAME3
                                  , MAX(DECODE(TAPA_SEQN, 4, TAPF_NAME, NULL)) AS TAPF_NAME4
                                  , MAX(DECODE(TAPA_SEQN, 4, TAPB_NUMB, NULL)) AS TAPB_NUMB4
                                  , MAX(DECODE(TAPA_SEQN, 4, TAPA_NUMB, NULL)) AS TAPA_NUMB4
                                  , MAX(DECODE(TAPA_SEQN, 4, TAPD_AMOT, 0))    AS TAPD_AMOT4
                                  , MAX(DECODE(TAPA_SEQN, 4, TAPD_DATE, NULL)) AS TAPD_DATE4
                                  , MAX(DECODE(TAPA_SEQN, 4, SF_GET_COMMNAME('BANK_CODE',BANK_CODE), NULL)) AS BANK_NAME4
                                  , MAX(DECODE(TAPA_SEQN, 5, TAPF_NAME, NULL)) AS TAPF_NAME5
                                  , MAX(DECODE(TAPA_SEQN, 5, TAPB_NUMB, NULL)) AS TAPB_NUMB5
                                  , MAX(DECODE(TAPA_SEQN, 5, TAPA_NUMB, NULL)) AS TAPA_NUMB5
                                  , MAX(DECODE(TAPA_SEQN, 5, TAPD_AMOT, 0))    AS TAPD_AMOT5
                                  , MAX(DECODE(TAPA_SEQN, 5, TAPD_DATE, NULL)) AS TAPD_DATE5
                                  , MAX(DECODE(TAPA_SEQN, 5, SF_GET_COMMNAME('BANK_CODE',BANK_CODE), NULL)) AS BANK_NAME5
                               FROM PY_RTPPXM
                              WHERE EMPL_NUMB = #EMPL_NUMB#     /* 사원번호 */
                                AND RECE_SEQN = #RECE_SEQN#     /* 퇴직정산회차 */
                              GROUP BY EMPL_NUMB
                                  , RECE_SEQN
                            ) G    
                          ON G.EMPL_NUMB = A.EMPL_NUMB
                         AND G.RECE_SEQN = A.RECE_SEQN
             WHERE A.EMPL_NUMB = #EMPL_NUMB#     /* 사원번호 */
               AND A.RECE_SEQN = #RECE_SEQN#     /* 퇴직정산회차 */
    ]]>
    </select>
    
<!--
/*******************************************************************************
     작 성 자 : 황치웅
     작 성 일 : 2016. 10. 31
     내     용 : 여러명의 원천징수 영수증 리포트를 출력한다.
********************************************************************************/
-->
    <select id="PAYF0030.PRINT10" parameterClass="hashmap" resultClass="hashmap">
    <![CDATA[
            SELECT /* PAYF0030.PRINT10.여러명의 리포트 출력 */
                   A.EMPL_NUMB     /* 사원번호 */
                 , A.RECE_SEQN     /* 퇴직정산회차 */
                 , A.RSTR_DATE     /* 귀속연도시작일 */
                 , A.REND_DATE     /* 귀속연도종료일 */
                 , A.RERE_CODE     /* 퇴직사유[RERE_CODE] */
                 , A.PFIR_NAME     /* 중간근무처명 */
                 , A.PBUS_NUMB     /* 중간사업자번호 */
                 , NVL(A.MIDL_RPAY, 0) AS MIDL_RPAY     /* 중간퇴직급여 */
                 , NVL(A.MINT_RPAY, 0) AS MINT_RPAY     /* 중간비과세퇴직급여 */
                 , NVL(A.MITA_RPAY, 0) AS MITA_RPAY     /* 중간과세대상퇴직급여 */
                 , NVL(A.MITA_RPAY, 0) AS MITA_RPAY1     /* 중간과세대상퇴직급여 */
                 , NVL(A.FINL_RPAY, 0) AS FINL_RPAY     /* 최종퇴직급여 */
                 , NVL(A.FINT_RPAY, 0) AS FINT_RPAY     /* 최종비과세퇴직급여 */
                 , NVL(A.FITA_RPAY, 0) AS FITA_RPAY     /* 최종과세대상퇴직급여 */
                 , NVL(A.FITA_RPAY, 0) AS FITA_RPAY1    /* 최종과세대상퇴직급여 */
                 , NVL(A.TOTL_RPAY, 0) AS TOTL_RPAY     /* 합산퇴직급여 */
                 , NVL(A.TLNT_RPAY, 0) AS TLNT_RPAY     /* 합산비과세퇴직급여 */
                 , NVL(A.TLTA_RPAY, 0) AS TLTA_RPAY     /* 합산과세대상퇴직급여 */
                 , NVL(A.TLTA_RPAY, 0) AS TLTA_RPAY1    /* 합산과세대상퇴직급여 */
                 , A.MIDL_ISDT     /* 중간입사일 */
                 , A.MIDL_STDT     /* 중간기산일 */
                 , A.MIDL_ENDT     /* 중간퇴사일 */
                 , A.MIDL_PYDT     /* 중간지급일 */
                 , A.MICT_MONT     /* 중간근속월수 */
                 , A.MIEX_MONT     /* 중간제외월수 */
                 , A.MIAD_MONT     /* 중간가산월수 */
                 , A.MICT_YEAR     /* 중간근속연수 */
                 , A.FINL_ISDT     /* 최종입사일 */
                 , A.FINL_STDT     /* 최종기산일 */
                 , A.FINL_ENDT     /* 최종퇴사일 */
                 , A.FINL_PYDT     /* 최종지급일 */
                 , A.FICT_MONT     /* 최종근속월수 */
                 , A.FIEX_MONT     /* 최종제외월수 */
                 , A.FIAD_MONT     /* 최종가산월수 */
                 , A.FICT_YEAR     /* 최종근속연수 */
                 , A.TOTL_ISDT     /* 합산입사일 */
                 , A.TOTL_STDT     /* 합산기산일 */
                 , A.TOTL_ENDT     /* 합산퇴사일 */
                 , A.TLCT_MONT     /* 합산근속월수 */
                 , A.TLEX_MONT     /* 합산제외월수 */
                 , A.TLAD_MONT     /* 합산가산월수 */
                 , A.TLOL_MONT     /* 합산중복월수 */
                 , A.TLCT_YEAR     /* 합산근속연수 */
                 , A.BEFO_STDT     /* 이전기산일 */
                 , A.BEFO_ENDT     /* 이전퇴사일 */
                 , A.BFCT_MONT     /* 이전근속월수 */
                 , A.BFEX_MONT     /* 이전제외월수 */
                 , A.BFAD_MONT     /* 이전가산월수 */
                 , A.BFCT_YEAR     /* 이전근속연수 */
                 , A.AFTR_STDT     /* 이후기산일 */
                 , A.AFTR_ENDT     /* 이후퇴사일 */
                 , A.AFCT_MONT     /* 이후근속월수 */
                 , A.AFEX_MONT     /* 이후제외월수 */
                 , A.AFAD_MONT     /* 이후가산월수 */
                 , A.AFCT_YEAR     /* 이후근속연수 */
                 , NVL(A.AFRD_AMOT, 0) AS AFRD_AMOT     /* 정률공제액 */
                 , NVL(A.CSYD_AMOT, 0) AS CSYD_AMOT     /* 근속연수공제액 */
                 , NVL(A.STAN_ASST, 0) AS STAN_ASST     /* 퇴직소득과세표준 */
                 , NVL(A.BFST_ASST, 0) AS BFST_ASST     /* 이전과세표준 */
                 , NVL(A.BFYA_STAD, 0) AS BFYA_STAD     /* 이전연평균과세표준 */
                 , NVL(A.BFYA_CTAX, 0) AS BFYA_CTAX     /* 이전연평균산출세액 */
                 , NVL(A.BEFO_CTAX, 0) AS BEFO_CTAX     /* 이전산출세액 */
                 , NVL(A.AFST_ASST, 0) AS AFST_ASST     /* 이후과세표준 */
                 , NVL(A.AFYA_STAD, 0) AS AFYA_STAD     /* 이후연평균과세표준 */
                 , NVL(A.AFCS_ASST, 0) AS AFCS_ASST     /* 이후환산과세표준 */
                 , NVL(A.AFCC_TAXX, 0) AS AFCC_TAXX     /* 이후환산산출세액 */
                 , NVL(A.AFYA_CTAX, 0) AS AFYA_CTAX     /* 이후연평균산출세액 */
                 , NVL(A.AFTR_CTAX, 0) AS AFTR_CTAX     /* 이후산출세액 */
                 , NVL(A.TLST_ASST, 0) AS TLST_ASST     /* 합산과세표준 */
                 , NVL(A.TLYA_STAD, 0) AS TLYA_STAD     /* 합산연평균과세표준 */
                 , NVL(A.TLCS_ASST, 0) AS TLCS_ASST     /* 합산환산과세표준 */
                 , NVL(A.TLCC_TAXX, 0) AS TLCC_TAXX     /* 합산환산산출세액 */
                 , NVL(A.TLYA_CTAX, 0) AS TLYA_CTAX     /* 합산연평균산출세액 */
                 , NVL(A.TOTL_CTAX, 0) AS TOTL_CTAX     /* 합산산출세액 */
                 , NVL(A.TOTL_PPTX, 0) AS TOTL_PPTX     /* 합산기납부세액 */
                 , NVL(A.TLSR_TAMT, 0) AS TLSR_TAMT     /* 합산신고대상세액 */
                 , NVL(A.TAPS_TAMT, 0) AS TAPS_TAMT     /* 과세이연신고대상세액 */
                 , A.TAPF_NAME     /* 과세이연사업자명 */
                 , A.TAPB_NUMB     /* 과세이연사업자번호 */
                 , SF_DECRYPT(A.TAPA_NUMB) AS TAPA_NUMB     /* 과세이연계좌번호 */
                 , A.TAPD_DATE     /* 과세이연입금일 */
                 , NVL(A.TAPD_AMOT, 0) AS TAPD_AMOT     /* 과세이연입금액 */
                 , NVL(A.TAPT_RPAY, 0) AS TAPT_RPAY     /* 과세이연퇴직급여 */
                 , NVL(A.TAPT_TAMT, 0) AS TAPT_TAMT     /* 과세이연세액 */
                 , NVL(A.SURE_ITAX, 0) AS SURE_ITAX     /* 신고대상소득세 */
                 , NVL(A.SURE_RTAX, 0) AS SURE_RTAX     /* 신고대상주민세 */
                 , NVL(A.SURE_FTAX, 0) AS SURE_FTAX     /* 신고대상농특세 */
                 , NVL(A.SURE_ITAX, 0) + NVL(A.SURE_RTAX, 0) + NVL(A.SURE_FTAX, 0) AS SURE_TAMT /* 신고대상합계 */
                 , NVL(A.PORE_ITAX, 0) AS PORE_ITAX     /* 이연퇴직소득세 */
                 , NVL(A.PORE_RTAX, 0) AS PORE_RTAX     /* 이연퇴직주민세 */
                 , NVL(A.PORE_FTAX, 0) AS PORE_FTAX     /* 이연퇴직농특세 */
                 , NVL(A.PORE_ITAX, 0) + NVL(A.PORE_RTAX, 0) + NVL(A.PORE_FTAX, 0) AS PORE_TAMT /* 이연퇴직합계 */
                 , NVL(A.DEDU_ITAX, 0) AS DEDU_ITAX     /* 차감징수소득세 */
                 , NVL(A.DEDU_RTAX, 0) AS DEDU_RTAX     /* 차감징수주민세 */
                 , NVL(A.DEDU_FTAX, 0) AS DEDU_FTAX     /* 차감징수농특세 */
                 , NVL(A.DEDU_ITAX, 0) + NVL(A.DEDU_RTAX, 0) + NVL(A.DEDU_FTAX, 0) AS DEDU_TAMT /* 차감징수합계 */
                 , NVL(A.CALC_REIN, 0) AS CALC_REIN     /* 정산퇴직소득_2016.01.01이후 */
                 , NVL(A.CWYC_DDUC, 0) AS CWYC_DDUC     /* 근속연수공제_2016.01.1이후 */
                 , NVL(A.CONV_WAGE, 0) AS CONV_WAGE     /* 환산급여_2016.01.01이후 */
                 , NVL(A.COWA_DDUC, 0) AS COWA_DDUC     /* 환산급여공제_2016.01.01이후 */
                 , NVL(A.REIN_STAS, 0) AS REIN_STAS     /* 퇴직소득과세표준_2016.01.01이후 */
                 , NVL(A.CONV_CLTX, 0) AS CONV_CLTX     /* 환산산출세액_2016.01.01이후 */
                 , NVL(A.CLCR_TXAM, 0) AS CLCR_TXAM     /* 산출세액_2016.01.01이후 */
                 , A.TAXX_YEAR                          /* 퇴직일이 속하는 과세연도 */
                 , NVL(A.SPUE_CLTX, 0) AS SPUE_CLTX     /* 특례적용산출세액 */
                 , B.OFFI_NAME                          /* 사업장명칭 */
                 , B.BSNS_NUMB                          /* 사업자등록번호 */
                 , A.OWNR_NAME                          /* 대표자명 */
                 , B.JURI_NUMB                          /* 법인주민번호  */
                 , B.ADDR_DESC                          /* 소재지(주소) */
                 , C.DBPJ_DATE                          /* 퇴직연금제도 가입일 */
                 , D.EMPL_NAME                          /* 성명 */                 
                 , D.RERN_NUMB                          /* 주민등록번호 */
                 , D.CLSD_CODE                          /* 임원여부 */
                 , E.DTL1_ADDR                          /* 주소 */
                 , E.DTL2_ADDR                          /* 주소 */
                 , F.RECL_CODE                          /* 거주자구분 */
                 , F.LFDN_CODE                          /* 내외국인 */
                 , F.DOMC_CODE                          /* 거주지국코드 */
                 , SF_GET_COMMNAME('DOMC_CODE', F.DOMC_CODE) AS DOMC_NAME /*국적*/
                 , G.TAPF_NAME1
                 , G.TAPB_NUMB1
                 , G.TAPA_NUMB1
                 , G.TAPD_AMOT1
                 , G.TAPD_DATE1
                 , G.BANK_NAME1
                 , G.TAPF_NAME2
                 , G.TAPB_NUMB2
                 , G.TAPA_NUMB2
                 , G.TAPD_AMOT2
                 , G.TAPD_DATE2
                 , G.BANK_NAME2
                 , G.TAPF_NAME3
                 , G.TAPB_NUMB3
                 , G.TAPA_NUMB3
                 , G.TAPD_AMOT3
                 , G.TAPD_DATE3
                 , G.BANK_NAME3
                 , G.TAPF_NAME4
                 , G.TAPB_NUMB4
                 , G.TAPA_NUMB4
                 , G.TAPD_AMOT4
                 , G.TAPD_DATE4
                 , G.BANK_NAME4
                 , G.TAPF_NAME5
                 , G.TAPB_NUMB5
                 , G.TAPA_NUMB5
                 , G.TAPD_AMOT5
                 , G.TAPD_DATE5
                 , G.BANK_NAME5
              FROM PY_RTPWXM A    /* [퇴직소득원천징수영수증] */
             INNER JOIN
                                    (
                                        SELECT 
                                               EMPL_NUMB
                                             , MAX(RECE_SEQN) AS MAXX_SEQN
                                          FROM PY_RTPWXM
                                         WHERE EMPL_NUMB IN ($EMPL_LIST$)
                                         GROUP BY EMPL_NUMB   
                                    )   A2
                            ON A.EMPL_NUMB = A2.EMPL_NUMB
                           AND A.RECE_SEQN = A2.MAXX_SEQN
              LEFT OUTER JOIN TM_OFFICE B
                           ON B.ACCT_GUBN = '100'
              LEFT OUTER JOIN PY_RTPCXM C
                           ON A.EMPL_NUMB = C.EMPL_NUMB
                          AND A.RECE_SEQN = C.RECE_SEQN
              LEFT OUTER JOIN HR_MASTXM D
                           ON A.EMPL_NUMB = D.EMPL_NUMB
              LEFT OUTER JOIN HR_MASTXD E
                           ON A.EMPL_NUMB = E.EMPL_NUMB
              LEFT OUTER JOIN PY_MASTPM F 
                           ON A.EMPL_NUMB = F.EMPL_NUMB
              LEFT OUTER JOIN (
                             SELECT EMPL_NUMB
                                  , MAX(RECE_SEQN) AS RECE_SEQN
                                  , MAX(DECODE(TAPA_SEQN, 1, TAPF_NAME, NULL)) AS TAPF_NAME1
                                  , MAX(DECODE(TAPA_SEQN, 1, TAPB_NUMB, NULL)) AS TAPB_NUMB1
                                  , MAX(DECODE(TAPA_SEQN, 1, TAPA_NUMB, NULL)) AS TAPA_NUMB1
                                  , MAX(DECODE(TAPA_SEQN, 1, TAPD_AMOT, 0))    AS TAPD_AMOT1
                                  , MAX(DECODE(TAPA_SEQN, 1, TAPD_DATE, NULL)) AS TAPD_DATE1
                                  , MAX(DECODE(TAPA_SEQN, 1, SF_GET_COMMNAME('BANK_CODE',BANK_CODE), NULL)) AS BANK_NAME1
                                  , MAX(DECODE(TAPA_SEQN, 2, TAPF_NAME, NULL)) AS TAPF_NAME2
                                  , MAX(DECODE(TAPA_SEQN, 2, TAPB_NUMB, NULL)) AS TAPB_NUMB2
                                  , MAX(DECODE(TAPA_SEQN, 2, TAPA_NUMB, NULL)) AS TAPA_NUMB2
                                  , MAX(DECODE(TAPA_SEQN, 2, TAPD_AMOT, 0))    AS TAPD_AMOT2
                                  , MAX(DECODE(TAPA_SEQN, 2, TAPD_DATE, NULL)) AS TAPD_DATE2
                                  , MAX(DECODE(TAPA_SEQN, 2, SF_GET_COMMNAME('BANK_CODE',BANK_CODE), NULL)) AS BANK_NAME2
                                  , MAX(DECODE(TAPA_SEQN, 3, TAPF_NAME, NULL)) AS TAPF_NAME3
                                  , MAX(DECODE(TAPA_SEQN, 3, TAPB_NUMB, NULL)) AS TAPB_NUMB3
                                  , MAX(DECODE(TAPA_SEQN, 3, TAPA_NUMB, NULL)) AS TAPA_NUMB3
                                  , MAX(DECODE(TAPA_SEQN, 3, TAPD_AMOT, 0))    AS TAPD_AMOT3
                                  , MAX(DECODE(TAPA_SEQN, 3, TAPD_DATE, NULL)) AS TAPD_DATE3
                                  , MAX(DECODE(TAPA_SEQN, 3, SF_GET_COMMNAME('BANK_CODE',BANK_CODE), NULL)) AS BANK_NAME3
                                  , MAX(DECODE(TAPA_SEQN, 4, TAPF_NAME, NULL)) AS TAPF_NAME4
                                  , MAX(DECODE(TAPA_SEQN, 4, TAPB_NUMB, NULL)) AS TAPB_NUMB4
                                  , MAX(DECODE(TAPA_SEQN, 4, TAPA_NUMB, NULL)) AS TAPA_NUMB4
                                  , MAX(DECODE(TAPA_SEQN, 4, TAPD_AMOT, 0))    AS TAPD_AMOT4
                                  , MAX(DECODE(TAPA_SEQN, 4, TAPD_DATE, NULL)) AS TAPD_DATE4
                                  , MAX(DECODE(TAPA_SEQN, 4, SF_GET_COMMNAME('BANK_CODE',BANK_CODE), NULL)) AS BANK_NAME4
                                  , MAX(DECODE(TAPA_SEQN, 5, TAPF_NAME, NULL)) AS TAPF_NAME5
                                  , MAX(DECODE(TAPA_SEQN, 5, TAPB_NUMB, NULL)) AS TAPB_NUMB5
                                  , MAX(DECODE(TAPA_SEQN, 5, TAPA_NUMB, NULL)) AS TAPA_NUMB5
                                  , MAX(DECODE(TAPA_SEQN, 5, TAPD_AMOT, 0))    AS TAPD_AMOT5
                                  , MAX(DECODE(TAPA_SEQN, 5, TAPD_DATE, NULL)) AS TAPD_DATE5
                                  , MAX(DECODE(TAPA_SEQN, 5, SF_GET_COMMNAME('BANK_CODE',BANK_CODE), NULL)) AS BANK_NAME5
                               FROM PY_RTPPXM
                              WHERE EMPL_NUMB IN ($EMPL_LIST$)  /* 사원번호 */
                              GROUP BY EMPL_NUMB
                            ) G    
                          ON G.EMPL_NUMB = A.EMPL_NUMB
                         AND G.RECE_SEQN = A.RECE_SEQN
              WHERE A.EMPL_NUMB IN ($EMPL_LIST$)
              ORDER BY A.EMPL_NUMB 
    ]]>
    </select>
<!--
/*******************************************************************************
     작 성 자 : 황치웅
     작 성 일 : 2016. 10. 31
     내     용 : 지급결의서 상여정보 출력
********************************************************************************/
-->
 <select id="PAYF0030.PRINT01" parameterClass="hashmap" resultClass="hashmap">
    <![CDATA[
            SELECT /* PAYF0030.PRINT01.지급결의서 상여정보 출력 */
                   EMPL_NUMB                             /* 사원번호 */
                 , RECE_SEQN                             /* 퇴직정산회차 */
                 , PAYX_DATE                             /* 지급일자 */
                 , EXPD_CODE                             /* 수당코드 */
                 , EXPD_NAME                             /* 수당명 */
                 , SUM(PAYX_AMOT) AS PAYX_AMOT           /* 상여금액 */
              FROM( SELECT A.EMPL_NUMB
                         , A.RECE_SEQN
                         , A.PAYX_DATE
                         , A.EXPD_CODE
                         , B.EXPD_NAME
                         , NVL(A.PAYX_AMOT, 0) AS PAYX_AMOT
                      FROM PY_RTBONU A
                      LEFT OUTER JOIN PY_ALLDED B
                                   ON A.EXPD_CODE = B.EXPD_CODE
                     WHERE A.EXPD_CODE <> 'A0070'
                       AND A.EMPL_NUMB = #EMPL_NUMB#
                       AND A.RECE_SEQN = #RECE_SEQN#
                     UNION ALL
                    SELECT A.EMPL_NUMB
                         , A.RECE_SEQN
                         , A.PAYX_DATE
                         , A.EXPD_CODE
                         , B.EXPD_NAME
                         , NVL(A.PAYX_AMOT, 0) AS PAYX_AMOT
                      FROM PY_RTBONA A
                      LEFT OUTER JOIN PY_ALLDED B
                                   ON A.EXPD_CODE = B.EXPD_CODE
                     WHERE A.EXPD_CODE <> 'A0070'
                       AND A.EMPL_NUMB = #EMPL_NUMB#
                       AND A.RECE_SEQN = #RECE_SEQN#
                   )
             GROUP BY EMPL_NUMB, RECE_SEQN, PAYX_DATE, EXPD_CODE, EXPD_NAME
             ORDER BY EXPD_CODE, PAYX_DATE
    ]]>
    </select>

<!--
/*******************************************************************************
     작 성 자 : 황치웅
     작 성 일 : 2016. 10. 31
     내     용 : 지급결의서 급여정보 출력
********************************************************************************/
-->
 <select id="PAYF0030.PRINT02" parameterClass="hashmap" resultClass="hashmap">
    <![CDATA[
        SELECT /* PAYF0030.PRINT02.지급결의서 급여정보 출력  */
               EMPL_NUMB                 /* 사원번호 */
             , RECE_SEQN                 /* 퇴직정산회차 */
             , EXPD_CODE                 /* 수당코드 */
             , EXPD_NAME                 /* 수당명 */
             , PAY1_AMOT                 /* 금액1 */
             , PAY2_AMOT                 /* 금액2 */
             , PAY3_AMOT                 /* 금액3 */
             , PAY4_AMOT                 /* 금액4 */
             , RTPY_TAMT                 /* 총금액 */
             , CAL1_YMTH                 /* 계산년월1 */
             , CAL1_BEDE                 /* 계산1시작일 */
             , CAL1_ENDD                 /* 계산1종료일 */
             , CAL1_DCNT                 /* 계산1일수 */
             , CAL2_YMTH                 /* 계산년월2 */
             , CAL2_BEDE                 /* 계산2시작일 */
             , CAL2_ENDD                 /* 계산2종료일 */
             , CAL2_DCNT                 /* 계산2일수 */
             , CAL3_YMTH                 /* 계산년월3 */
             , CAL3_BEDE                 /* 계산3시작일 */
             , CAL3_ENDD                 /* 계산3종료일 */
             , CAL3_DCNT                 /* 계산3일수 */
             , CAL4_YMTH                 /* 계산년월4 */
             , CAL4_BEDE                 /* 계산4시작일 */
             , CAL4_ENDD                 /* 계산4종료일 */
             , CAL4_DCNT                 /* 계산4일수 */
             , DCNT_SUM                  /* 계산일수합 */
             , (PAY1_AMOT + PAY2_AMOT + PAY3_AMOT + PAY4_AMOT) / 3  AS APAY_AMOT                                               /* 평균 */
          FROM ( SELECT A.EMPL_NUMB                                                                                            /* 사원번호 */
                      , A.RECE_SEQN                                                                                            /* 퇴직정산회차 */
                      , A.EXPD_CODE                                                                                            /* 수당코드 */
                      , B.EXPD_NAME                                                                                            /* 수당명 */
                      , NVL(A.PAY1_AMOT,0) + NVL(C.PAY1_AMOT,0) AS PAY1_AMOT                                                   /* 금액1 */
                      , NVL(A.PAY2_AMOT,0) + NVL(C.PAY2_AMOT,0) AS PAY2_AMOT                                                   /* 금액2 */
                      , NVL(A.PAY3_AMOT,0) + NVL(C.PAY3_AMOT,0) AS PAY3_AMOT                                                   /* 금액3 */
                      , NVL(A.PAY4_AMOT,0) + NVL(C.PAY4_AMOT,0) AS PAY4_AMOT                                                   /* 금액4 */
                      , NVL(A.PAY1_AMOT,0) + NVL(A.PAY2_AMOT,0) + NVL(A.PAY3_AMOT,0) + NVL(A.PAY4_AMOT,0)
                      + NVL(C.PAY1_AMOT,0) + NVL(C.PAY2_AMOT,0) + NVL(C.PAY3_AMOT,0) + NVL(C.PAY4_AMOT,0) AS RTPY_TAMT
                      , D.CAL1_YMTH                                                                                            /* 계산년월1 */
                      , D.CAL1_BEDE                                                                                            /* 계산1시작일 */
                      , D.CAL1_ENDD                                                                                            /* 계산1종료일 */
                      , D.CAL1_DCNT                                                                                            /* 계산1일수 */
                      , D.CAL2_YMTH                                                                                            /* 계산년월2 */
                      , D.CAL2_BEDE                                                                                            /* 계산2시작일 */
                      , D.CAL2_ENDD                                                                                            /* 계산2종료일 */
                      , D.CAL2_DCNT                                                                                            /* 계산2일수 */
                      , D.CAL3_YMTH                                                                                            /* 계산년월3 */
                      , D.CAL3_BEDE                                                                                            /* 계산3시작일 */
                      , D.CAL3_ENDD                                                                                            /* 계산3종료일 */
                      , D.CAL3_DCNT                                                                                            /* 계산3일수 */
                      , D.CAL4_YMTH                                                                                            /* 계산년월4 */
                      , D.CAL4_BEDE                                                                                            /* 계산4시작일 */
                      , D.CAL4_ENDD                                                                                            /* 계산4종료일 */
                      , D.CAL4_DCNT                                                                                            /* 계산4일수 */
                      , NVL (D.CAL1_DCNT, 0) + NVL (D.CAL2_DCNT, 0) + NVL (D.CAL3_DCNT, 0) + NVL (D.CAL4_DCNT, 0) AS DCNT_SUM  /* 계산일수합 */
                   FROM PY_RTPAYX A
                   LEFT OUTER JOIN PY_ALLDED B
                                ON A.EXPD_CODE = B.EXPD_CODE
                   LEFT OUTER JOIN PY_RTPAYA C
                                ON A.EMPL_NUMB = C.EMPL_NUMB
                               AND A.RECE_SEQN = C.RECE_SEQN
                               AND A.EXPD_CODE = C.EXPD_CODE
                   LEFT OUTER JOIN PY_RTPCXM D
                                ON A.EMPL_NUMB = D.EMPL_NUMB
                               AND A.RECE_SEQN = D.RECE_SEQN
                  WHERE A.EMPL_NUMB = #EMPL_NUMB#
                    AND A.RECE_SEQN = #RECE_SEQN#
                  ORDER BY B.SORT_ORDR
                )
    ]]>
    </select>
<!--
/*******************************************************************************
     작 성 자 : 황치웅
     작 성 일 : 2016. 11. 10
     내     용 : 지급결의서 퇴직금지급조서  출력
********************************************************************************/
-->
    <select id="PAYF0030.PRINT03" parameterClass="hashmap" resultClass="hashmap">
    <![CDATA[
            SELECT /* PAYF0030.PRINT03.지급결의서 퇴직금지급조서  출력 */
                   A.EMPL_NUMB     /* 사원번호 */
                 , A.RECE_SEQN     /* 퇴직정산회차 */
                 , A.RERE_CODE     /* 퇴직사유 */
                 , A.TAXX_GUBN     /* 과세구분 */
                 , A.ENFC_CODE     /* 사업장코드 */
                 , A.FINL_ISDT     /* 최종입사일 */
                 , A.FINL_STDT     /* 최종기산일 */
                 , A.FINL_ENDT     /* 최종퇴사일 */
                 , A.FINL_PYDT     /* 최종지급일 */
                 , NVL(A.FIBF_EXMT, 0) AS FIBF_EXMT     /* 최종이전제외월수 */
                 , NVL(A.FIAF_EXMT, 0) AS FIAF_EXMT     /* 최종이후제외월수 */
                 , NVL(A.FIBF_ADMT, 0) AS FIBF_ADMT     /* 최종이전가산월수 */
                 , NVL(A.FIAF_ADMT, 0) AS FIAF_ADMT     /* 최종이후가산월수 */
                 , A.MIDL_ISDT     /* 중간입사일 */
                 , A.MIDL_STDT     /* 중간기산일 */
                 , A.MIDL_ENDT     /* 중간퇴사일 */
                 , A.MIDL_PYDT     /* 중간지급일 */
                 , NVL(A.MIBF_EXMT,0) AS MIBF_EXMT     /* 중간이전제외월수 */
                 , NVL(A.MIAF_EXMT,0) AS MIAF_EXMT     /* 중간이후제외월수 */
                 , NVL(A.MIBF_ADMT,0) AS MIBF_ADMT     /* 중간이전가산월수 */
                 , NVL(A.MIAF_ADMT,0) AS MIAF_ADMT     /* 중간이후가산월수 */
                 , A.PMST_DATE     /* 급여기준일 */
                 , '시작일' AS TITL_BEDE
                 , '종료일' AS TITL_ENDD
                 , '총일수' AS TITL_DCNT
                 , A.CAL1_YMTH     /* 계산년월1 */
                 , A.CAL1_BEDE      /* 계산1시작일 */
                 , A.CAL1_ENDD      /* 계산1종료일 */
                 , A.CAL1_DCNT      /* 계산1일수 */
                 , A.CAL2_YMTH     /* 계산년월2 */
                 , A.CAL2_BEDE      /* 계산1시작일 */
                 , A.CAL2_ENDD      /* 계산1종료일 */
                 , A.CAL2_DCNT      /* 계산1일수 */
                 , A.CAL3_YMTH     /* 계산년월3 */
                 , A.CAL3_BEDE      /* 계산3시작일 */
                 , A.CAL3_ENDD      /* 계산3종료일 */
                 , A.CAL3_DCNT      /* 계산3일수 */
                 , A.CAL4_YMTH     /* 계산년월4 */
                 , A.CAL4_BEDE      /* 계산4시작일 */
                 , A.CAL4_ENDD      /* 계산4종료일 */
                 , A.CAL4_DCNT      /* 계산4일수 */
                 , NVL(CAL1_DCNT,0)+NVL(CAL2_DCNT,0)+NVL(CAL3_DCNT,0)+NVL(CAL4_DCNT,0) AS DCNT_SUM /* 계산일수합 */
                 , NVL(A.DAVR_WAGE,0) AS DAVR_WAGE    /* 일평균임금 */
                 , NVL(A.MAVR_WAGE,0) AS MAVR_WAGE    /* 월평균임금 */
                 , NVL(A.AVER_WAGE,0) AS AVER_WAGE    /* 평균임금 */
                 , NVL(A.CWRK_YCNT,0) AS CWRK_YCNT    /* 퇴직근속년수 */
                 , NVL(A.CWRK_MCNT,0) AS CWRK_MCNT    /* 퇴직근속월수 */
                 , A.REYS_YCNT || '년' || A.REYS_MCNT || '월' ||  A.REYS_DCNT || '일' AS CWRK_YMCT
                 , SF_GET_WORKPRD5(C.ENCO_DATE , A.FINL_ENDT ) AS TOTL_DATE /* 근속기간 */
                 , NVL(A.REYS_YCNT,0) AS REYS_YCNT
                 , NVL(A.REYS_MCNT,0) AS REYS_MCNT
                 , NVL(A.REYS_DCNT,0) AS REYS_DCNT
                 , NVL(A.PAYX_RATE,(A.CWRK_YCNT*12 + A.CWRK_MCNT)/12) AS PAYX_RATE    /*  지급율이 NULL이면직접계산해서 추가 */
                 , NVL(A.RETI_WAGE,0) AS RETI_WAGE    /* 퇴직급여 */
                 , NVL(A.VORN_ALLO,0) AS VORN_ALLO     /* 명예퇴직수당 */
                 , NVL(A.AVPY_AMOT,0) AS AVPY_AMOT    /* 급여평균금액 */
                 , NVL(A.AVBN_AMOT,0) AS AVBN_AMOT     /* 상여평균금액 */
                 , NVL(A.PYET_AMOT,0) AS PYET_AMOT     /* 기타지급금액 */
                 , NVL(A.TRRT_AMOT,0) AS TRRT_AMOT     /* 퇴직전환금액 */
                 /* , NVL(A.ATPY_AMOT,0) AS ATPY_AMOT */     /*급여압류금액 */
                 /* , NVL(A.CRUN_COST,0) AS CRUN_COST */    /*신협비용 */
                 /* , NVL(A.HOSA_AMOT,0) AS HOSA_AMOT */    /*주택보조금금액 */
                 , NVL(A.OTDE_AMOT,0) AS OTDE_AMOT     /* 기타공제금액 */
                 , A.DBPJ_DATE     /* DB형연금가입일 */
                 , NVL(A.RTBM_AMOT,0) AS RTBM_AMOT     /* 임원퇴직금액 */
                 , NVL(A.RTBN_AMOT,0) AS RTBN_AMOT     /* 퇴직위로금금액 */
                 , NVL(A.PRTN_AMOT,0) AS PRTN_AMOT     /* 급여성퇴직위로금금액 */
                 , NVL(A.FINL_RPAY,0) AS FINL_RPAY     /* 최종퇴직급여 */
                 , NVL(A.FINT_RPAY,0) AS FINT_RPAY     /* 최종비과세퇴직급여 */
                 , NVL(A.FINL_PPTX,0) AS FINL_PPTX     /* 최종기납부세액 */
                 , NVL(A.FIBF_EXMT,0) + NVL(A.FIAF_EXMT,0) + NVL(A.FIBF_ADMT,0) + NVL(A.FIAF_ADMT,0) AS NUJI_MONT /* 누진개월수 */
                 , NVL(A.FINL_RPAY,0) - NVL(A.VORN_ALLO,0) AS FINL_APAY                 /* 퇴직급여 */
                 , A.PBUS_NUMB     /* 중간사업자번호 */
                 , A.PFIR_NAME     /* 중간근무처명 */
                 , NVL(A.MIDL_RPAY,0) AS MIDL_RPAY      /* 중간퇴직급여 */
                 , NVL(A.MINT_RPAY,0) AS MINT_RPAY     /* 중간비과세퇴직급여 */
                 , NVL(A.MIDL_PPTX,0) AS MIDL_PPTX     /* 중간기납부세액 */
                 , NVL(A.RETI_INTX,0) AS RETI_INTX     /* 퇴직소득세 */
                 , NVL(A.RETI_STRD,0) AS RETI_STRD     /* 퇴직농특세 */
                 , NVL(A.RETI_IHTX,0) AS RETI_IHTX     /* 퇴직주민세 */
                 , NVL(A.WORC_INTX,0) AS WORC_INTX     /* 근로정산소득세 */
                 , NVL(A.WORC_STRD,0) AS WORC_STRD     /* 근로정산농특세 */
                 , NVL(A.WORC_IHTX,0) AS WORC_IHTX     /* 근로정산주민세 */
                 , NVL(A.FPTA_ATDD,0) AS FPTA_ATDD      /* 외국납부세액공제액 */
                 , NVL(A.DDUC_AMOT,0) AS DDUC_AMOT      /* 공제금액 */
                 , NVL(A.NPPC_ATDD,0) AS NPPC_ATDD      /* 국민연금전환금공제액 */
                 , NVL(A.HINC_AMOT,0) AS HINC_AMOT      /* 건강보험정산공제액 */
                 , NVL(A.LOAN_RPAM,0) AS LOAN_RPAM      /* 대출상환액 */
                 , NVL(A.REEP_AMOT,0) AS REEP_AMOT      /* 퇴직수당금액 */
                 , NVL(A.PENS_AMOT,0) AS PENS_AMOT      /* 퇴직연금예치금 */
                 , NVL(A.RETI_ALWN,0) AS RETI_ALWN      /* 퇴직충당금 */
                 , A.REMK_100X     /* 비고(100) */
                 , NVL(A.RLPY_AMOT,0) AS RLPY_AMOT      /* 차인지급액 */
                 , NVL(A.RLPY_AMOT,0) + NVL(A.PRTN_AMOT,0) AS RLPY_RTBN /* 급여성차인지급액  */
                 , A.BANK_CODE      /* 은행코드 */
                 , SF_DECRYPT(ACNT_NUMB) AS ACNT_NUMB   /* 계좌번호 */
                 , A.DPST_NAME                          /* 예금주성명 */
                 , A.CLSE_YSNO                          /* 퇴직처리마감여부 */
                 , 0 AS CHK
                 , NVL(REF1_FILD, 1) AS RETR_RATE       /* 누진율(롯데칠성만) */
                 , C.DEPT_CODE                                                          /* 근무부서 */
                 , G.DEPT_NAME                                                          /* 부서명 */
                 , C.OPOS_CODE                                                          /* 직위코드 */
                 , SF_GET_COMMNAME('OPOS_CODE', C.OPOS_CODE) AS OPOS_NAME               /* 부서명 */
                 , C.EMPL_NAME                                                          /* 사원명 */
                 , C.RERN_NUMB                                                          /* 주민등록번호 */
                 , C.ENCO_DATE                                                          /* 입사일 */
                 , C.RETR_DATE                                                          /* 퇴사일 */
                 , D.POST_NUMB                                                          /* 우편번호 */
                 , D.DTL1_ADDR || ' ' ||  D.DTL2_ADDR AS DTL1_ADDR                      /* 주소 */
                 , NVL(H.PAYX_AMOT, 0) AS PAYX_AMOT                                     /* 지급연차수당 */
                 , ROUND((NVL (H.PAYX_AMOT,0) ) /12) AS AVER_PAYX                       /* 평균연차수당 */
                 ,(
                   SELECT
                          NVL(SUM(TAPD_AMOT), 0)
                     FROM PY_RTPPXM
                    WHERE EMPL_NUMB =  #EMPL_NUMB#
                      AND RECE_SEQN =  #RECE_SEQN#     									/* 정산회차 */
                   )  AS   TAPD_AMOT                                                    /* 과세이연금액 */
              FROM PY_RTPCXM A      /* [퇴직급여계산] */
              LEFT JOIN TM_CODEXD B
                     ON A.EMPL_NUMB = B.COMD_CODE
                    AND B.COMM_CODE = 'RETR_RATE'
              LEFT OUTER JOIN HR_MASTXM C
                           ON A.EMPL_NUMB = C.EMPL_NUMB
              LEFT OUTER JOIN HR_MASTXD D
                           ON A.EMPL_NUMB = D.EMPL_NUMB
              LEFT OUTER JOIN TM_DEPTXM G
                           ON C.DEPT_CODE = G.DEPT_CODE
              LEFT OUTER JOIN ( SELECT EMPL_NUMB                             /* 사원번호 */
                                     , RECE_SEQN                             /* 퇴직정산회차 */
                                     , PAYX_DATE                             /* 지급일자 */
                                     , EXPD_CODE                             /* 수당코드 */
                                     , EXPD_NAME                             /* 수당명 */
                                     , SUM(PAYX_AMOT) AS PAYX_AMOT           /* 상여금액 */
                                  FROM( SELECT A.EMPL_NUMB
                                             , A.RECE_SEQN
                                             , A.PAYX_DATE
                                             , A.EXPD_CODE
                                             , B.EXPD_NAME
                                             , NVL(A.PAYX_AMOT, 0) AS PAYX_AMOT
                                          FROM PY_RTBONU A
                                          LEFT OUTER JOIN PY_ALLDED B
                                                       ON A.EXPD_CODE = B.EXPD_CODE
                                         WHERE A.EXPD_CODE = 'A0070'
                                           AND A.EMPL_NUMB = #EMPL_NUMB#
                                           AND A.RECE_SEQN = #RECE_SEQN#
                                         UNION ALL
                                        SELECT A.EMPL_NUMB
                                             , A.RECE_SEQN
                                             , A.PAYX_DATE
                                             , A.EXPD_CODE
                                             , B.EXPD_NAME
                                             , NVL(A.PAYX_AMOT, 0) AS PAYX_AMOT
                                          FROM PY_RTBONA A
                                          LEFT OUTER JOIN PY_ALLDED B
                                                       ON A.EXPD_CODE = B.EXPD_CODE
                                         WHERE A.EXPD_CODE = 'A0070'
                                           AND A.EMPL_NUMB = #EMPL_NUMB#
                                           AND A.RECE_SEQN = #RECE_SEQN#
                                         )
                                 GROUP BY EMPL_NUMB, RECE_SEQN, PAYX_DATE, EXPD_CODE, EXPD_NAME
                            ) H 
                           ON A.EMPL_NUMB = H.EMPL_NUMB
                          AND A.RECE_SEQN = H.RECE_SEQN
             WHERE A.EMPL_NUMB = #EMPL_NUMB#     /* 사원번호 */
               AND A.RECE_SEQN = #RECE_SEQN#     /* 정산회차 */
    ]]>
    </select>
    <!--
/*******************************************************************************
     작 성 자 : 황치웅
     작 성 일 : 2016. 10. 31
     내     용 : 여러명의 지급결의서 상여정보 출력
********************************************************************************/
-->
 <select id="PAYF0030.PRINT04" parameterClass="hashmap" resultClass="hashmap">
    <![CDATA[
	   SELECT /* PAYF0030.PRINT04.여러명의 지급결의서 상여정보 출력  */
	                   EMPL_NUMB                                                                                            /* 사원번호 */
	                 , RECE_SEQN                                                                                            /* 퇴직정산회차 */
	                 , PAYX_DATE                                                                                            /* 지급일자 */
	                 , EXPD_CODE                                                                                            /* 수당코드 */
	                 , EXPD_NAME                                                                                            /* 수당공제코드명 */
	                 , NVL (PAYX_AMOT, 0) + NVL (PAYX_AMOT, 0) AS PAYX_AMOT                                               /* 금액 */
	            FROM( SELECT 
	            			 A.EMPL_NUMB
	                       , A.RECE_SEQN
	                       , A.PAYX_DATE
	                       , A.EXPD_CODE
	                       , B.EXPD_NAME
	                       , NVL(A.PAYX_AMOT, 0) AS PAYX_AMOT
	                    FROM PY_RTBONU A
	                    INNER JOIN 
	                           (
                                  SELECT 
                                         EMPL_NUMB
                                       , MAX(RECE_SEQN) AS MAXX_SEQN
                                    FROM PY_RTBONU
                                   WHERE EMPL_NUMB IN ($EMPL_LIST$)
                                   GROUP BY EMPL_NUMB      
	                           ) A2
			                    ON A.EMPL_NUMB = A2.EMPL_NUMB
			                   AND A.RECE_SEQN = A2.MAXX_SEQN 
	                    LEFT OUTER JOIN PY_ALLDED B
	                                 ON A.EXPD_CODE = B.EXPD_CODE
	                   WHERE A.EXPD_CODE <> 'A0070'
	                     AND A.EMPL_NUMB IN ($EMPL_LIST$)
	                   UNION ALL
	                  SELECT 
	                  		 A.EMPL_NUMB
	                       , A.RECE_SEQN
	                       , A.PAYX_DATE
	                       , A.EXPD_CODE
	                       , B.EXPD_NAME
	                       , NVL(A.PAYX_AMOT, 0) AS PAYX_AMOT
	                    FROM PY_RTBONA A
	                    INNER JOIN 
	                           (
                                  SELECT 
                                         EMPL_NUMB
                                       , MAX(RECE_SEQN) AS MAXX_SEQN
                                    FROM PY_RTBONA
                                   WHERE EMPL_NUMB IN ($EMPL_LIST$)
                                   GROUP BY EMPL_NUMB      
	                           ) A2
	                            ON A.EMPL_NUMB = A2.EMPL_NUMB
	                           AND A.RECE_SEQN = A2.MAXX_SEQN  
	                    LEFT OUTER JOIN PY_ALLDED B
	                                 ON A.EXPD_CODE = B.EXPD_CODE
	                   WHERE A.EXPD_CODE <> 'A0070'
	                     AND A.EMPL_NUMB IN ($EMPL_LIST$)
	                 )
	           WHERE EXPD_CODE <> 'A0070' 
	             AND EMPL_NUMB IN ($EMPL_LIST$)
	           ORDER BY EMPL_NUMB
    ]]>
    </select>
    
    <!--
/*******************************************************************************
     작 성 자 : 황치웅
     작 성 일 : 2016. 10. 31
     내     용 : 여러명의 지급결의서 상여정보 출력
********************************************************************************/
-->
 <select id="PAYF0030.PRINT05" parameterClass="hashmap" resultClass="hashmap">
    <![CDATA[
               SELECT /* PAYF0030.PRINT05.여러명의 지급결의서 상여정보 출력  */
                       A.EMPL_NUMB                                                                                            /* 사원번호 */
                     , A.RECE_SEQN                                                                                            /* 퇴직정산회차 */
                     , A.EXPD_CODE                                                                                            /* 수당코드 */
                     , B.EXPD_NAME                                                                                            /* 수당명 */
                     , NVL(A.PAY1_AMOT,0) + NVL(C.PAY1_AMOT,0) AS PAY1_AMOT                                                   /* 금액1 */
                     , NVL(A.PAY2_AMOT,0) + NVL(C.PAY2_AMOT,0) AS PAY2_AMOT                                                   /* 금액2 */
                     , NVL(A.PAY3_AMOT,0) + NVL(C.PAY3_AMOT,0) AS PAY3_AMOT                                                   /* 금액3 */
                     , NVL(A.PAY4_AMOT,0) + NVL(C.PAY4_AMOT,0) AS PAY4_AMOT                                                   /* 금액4 */
                     , NVL(A.PAY1_AMOT,0) + NVL(A.PAY2_AMOT,0) + NVL(A.PAY3_AMOT,0) + NVL(A.PAY4_AMOT,0)
                     + NVL(C.PAY1_AMOT,0) + NVL(C.PAY2_AMOT,0) + NVL(C.PAY3_AMOT,0) + NVL(C.PAY4_AMOT,0) AS RTPY_TAMT
                     , (A.PAY1_AMOT + A.PAY2_AMOT + A.PAY3_AMOT + A.PAY4_AMOT) / 3  AS APAY_AMOT                              /* 평균 */
                     , D.CAL1_YMTH                                                                                            /* 계산년월1 */
                     , D.CAL1_BEDE                                                                                            /* 계산1시작일 */
                     , D.CAL1_ENDD                                                                                            /* 계산1종료일 */
                     , D.CAL1_DCNT                                                                                            /* 계산1일수 */
                     , D.CAL2_YMTH                                                                                            /* 계산년월2 */
                     , D.CAL2_BEDE                                                                                            /* 계산2시작일 */
                     , D.CAL2_ENDD                                                                                            /* 계산2종료일 */
                     , D.CAL2_DCNT                                                                                            /* 계산2일수 */
                     , D.CAL3_YMTH                                                                                            /* 계산년월3 */
                     , D.CAL3_BEDE                                                                                            /* 계산3시작일 */
                     , D.CAL3_ENDD                                                                                            /* 계산3종료일 */
                     , D.CAL3_DCNT                                                                                            /* 계산3일수 */
                     , D.CAL4_YMTH                                                                                            /* 계산년월4 */
                     , D.CAL4_BEDE                                                                                            /* 계산4시작일 */
                     , D.CAL4_ENDD                                                                                            /* 계산4종료일 */
                     , D.CAL4_DCNT                                                                                            /* 계산4일수 */
                     , NVL (D.CAL1_DCNT, 0) + NVL (D.CAL2_DCNT, 0) + NVL (D.CAL3_DCNT, 0) + NVL (D.CAL4_DCNT, 0) AS DCNT_SUM  /* 계산일수합 */
                  FROM PY_RTPAYX A
                 INNER JOIN 
                                (
                                    SELECT 
                                           EMPL_NUMB
                                         , MAX(RECE_SEQN) AS MAXX_SEQN
                                      FROM PY_RTPAYX
                                     WHERE EMPL_NUMB IN ($EMPL_LIST$)
                                     GROUP BY EMPL_NUMB
                                ) A2
                        ON A.EMPL_NUMB = A2.EMPL_NUMB
                       AND A.RECE_SEQN = A2.MAXX_SEQN  
                  LEFT OUTER JOIN PY_ALLDED B
                               ON A.EXPD_CODE = B.EXPD_CODE
                  LEFT OUTER JOIN PY_RTPAYA C
                               ON A.EMPL_NUMB = C.EMPL_NUMB
                              AND A.RECE_SEQN = C.RECE_SEQN
                              AND A.EXPD_CODE = C.EXPD_CODE
                  LEFT OUTER JOIN PY_RTPCXM D
                               ON A.EMPL_NUMB = D.EMPL_NUMB
                              AND A.RECE_SEQN = D.RECE_SEQN
                 WHERE A.EMPL_NUMB IN ($EMPL_LIST$)
                 ORDER BY A.EMPL_NUMB, B.SORT_ORDR  
    ]]>
    </select>
    
<!--
/*******************************************************************************
     작 성 자 : 황치웅
     작 성 일 : 2016. 11. 10
     내    용 : 여러명의 퇴직금지급조서 조회
********************************************************************************/
-->
    <select id="PAYF0030.PRINT06" parameterClass="hashmap" resultClass="hashmap">
    <![CDATA[
        SELECT /* PAYF0030.PRINT06.여러명의 퇴직금지급조서 조회  */
               A.EMPL_NUMB     /* 사원번호 */
             , A.RECE_SEQN     /* 퇴직정산회차 */
             , A.RERE_CODE     /* 퇴직사유 */
             , A.TAXX_GUBN     /* 과세구분 */
             , A.ENFC_CODE     /* 사업장코드 */
             , A.FINL_ISDT     /* 최종입사일 */
             , A.FINL_STDT     /* 최종기산일 */
             , A.FINL_ENDT     /* 최종퇴사일 */
             , A.FINL_PYDT     /* 최종지급일 */
             , NVL(A.FIBF_EXMT, 0) AS FIBF_EXMT     /* 최종이전제외월수 */
             , NVL(A.FIAF_EXMT, 0) AS FIAF_EXMT     /* 최종이후제외월수 */
             , NVL(A.FIBF_ADMT, 0) AS FIBF_ADMT     /* 최종이전가산월수 */
             , NVL(A.FIAF_ADMT, 0) AS FIAF_ADMT     /* 최종이후가산월수 */
             , A.MIDL_ISDT     /* 중간입사일 */
             , A.MIDL_STDT     /* 중간기산일 */
             , A.MIDL_ENDT     /* 중간퇴사일 */
             , A.MIDL_PYDT     /* 중간지급일 */
             , NVL(A.MIBF_EXMT,0) AS MIBF_EXMT     /* 중간이전제외월수 */
             , NVL(A.MIAF_EXMT,0) AS MIAF_EXMT     /* 중간이후제외월수 */
             , NVL(A.MIBF_ADMT,0) AS MIBF_ADMT     /* 중간이전가산월수 */
             , NVL(A.MIAF_ADMT,0) AS MIAF_ADMT     /* 중간이후가산월수 */
             , A.PMST_DATE     /* 급여기준일 */
             , '시작일' AS TITL_BEDE
             , '종료일' AS TITL_ENDD
             , '총일수' AS TITL_DCNT
             , A.CAL1_YMTH     /* 계산년월1 */
             , A.CAL1_BEDE      /* 계산1시작일 */
             , A.CAL1_ENDD      /* 계산1종료일 */
             , A.CAL1_DCNT      /* 계산1일수 */
             , A.CAL2_YMTH     /* 계산년월2 */
             , A.CAL2_BEDE      /* 계산1시작일 */
             , A.CAL2_ENDD      /* 계산1종료일 */
             , A.CAL2_DCNT      /* 계산1일수 */
             , A.CAL3_YMTH     /* 계산년월3 */
             , A.CAL3_BEDE      /* 계산3시작일 */
             , A.CAL3_ENDD      /* 계산3종료일 */
             , A.CAL3_DCNT      /* 계산3일수 */
             , A.CAL4_YMTH     /* 계산년월4 */
             , A.CAL4_BEDE      /* 계산4시작일 */
             , A.CAL4_ENDD      /* 계산4종료일 */
             , A.CAL4_DCNT      /* 계산4일수 */
             , NVL(CAL1_DCNT,0)+NVL(CAL2_DCNT,0)+NVL(CAL3_DCNT,0)+NVL(CAL4_DCNT,0) AS DCNT_SUM /* 계산일수합 */
             , NVL(A.DAVR_WAGE,0) AS DAVR_WAGE    /* 일평균임금 */
             , NVL(A.MAVR_WAGE,0) AS MAVR_WAGE    /* 월평균임금 */
             , NVL(A.AVER_WAGE,0) AS AVER_WAGE    /* 평균임금 */
             , NVL(A.CWRK_YCNT,0) AS CWRK_YCNT    /* 퇴직근속년수 */
             , NVL(A.CWRK_MCNT,0) AS CWRK_MCNT    /* 퇴직근속월수 */
             , A.REYS_YCNT || '년' || A.REYS_MCNT || '월' ||  A.REYS_DCNT || '일' AS CWRK_YMCT
             , SF_GET_WORKPRD5(C.ENCO_DATE , A.FINL_ENDT ) AS TOTL_DATE /* 근속기간 */
             , NVL(A.REYS_YCNT,0) AS REYS_YCNT
             , NVL(A.REYS_MCNT,0) AS REYS_MCNT
             , NVL(A.REYS_DCNT,0) AS REYS_DCNT
             , NVL(A.PAYX_RATE,(A.CWRK_YCNT*12 + A.CWRK_MCNT)/12) AS PAYX_RATE    /*  지급율이 NULL이면직접계산해서 추가 */
             , NVL(A.RETI_WAGE,0) AS RETI_WAGE    /* 퇴직급여 */
             , NVL(A.VORN_ALLO,0) AS VORN_ALLO     /* 명예퇴직수당 */
             , NVL(A.AVPY_AMOT,0) AS AVPY_AMOT    /* 급여평균금액 */
             , NVL(A.AVBN_AMOT,0) AS AVBN_AMOT     /* 상여평균금액 */
             , NVL(A.PYET_AMOT,0) AS PYET_AMOT     /* 기타지급금액 */
             , NVL(A.TRRT_AMOT,0) AS TRRT_AMOT     /* 퇴직전환금액 */
             /* , NVL(A.ATPY_AMOT,0) AS ATPY_AMOT */     /*급여압류금액 */
             /* , NVL(A.CRUN_COST,0) AS CRUN_COST */    /*신협비용 */
             /* , NVL(A.HOSA_AMOT,0) AS HOSA_AMOT */    /*주택보조금금액 */
             , NVL(A.OTDE_AMOT,0) AS OTDE_AMOT     /* 기타공제금액 */
             , A.DBPJ_DATE     /* DB형연금가입일 */
             , NVL(A.RTBM_AMOT,0) AS RTBM_AMOT     /* 임원퇴직금액 */
             , NVL(A.RTBN_AMOT,0) AS RTBN_AMOT     /* 퇴직위로금금액 */
             , NVL(A.PRTN_AMOT,0) AS PRTN_AMOT     /* 급여성퇴직위로금금액 */
             , NVL(A.FINL_RPAY,0) AS FINL_RPAY     /* 최종퇴직급여 */
             , NVL(A.FINT_RPAY,0) AS FINT_RPAY     /* 최종비과세퇴직급여 */
             , NVL(A.FINL_PPTX,0) AS FINL_PPTX     /* 최종기납부세액 */
             , NVL(A.FIBF_EXMT,0) + NVL(A.FIAF_EXMT,0) + NVL(A.FIBF_ADMT,0) + NVL(A.FIAF_ADMT,0) AS NUJI_MONT /* 누진개월수 */
             , NVL(A.FINL_RPAY,0) - NVL(A.VORN_ALLO,0) AS FINL_APAY                 /* 퇴직급여 */
             , A.PBUS_NUMB     /* 중간사업자번호 */
             , A.PFIR_NAME     /* 중간근무처명 */
             , NVL(A.MIDL_RPAY,0) AS MIDL_RPAY      /* 중간퇴직급여 */
             , NVL(A.MINT_RPAY,0) AS MINT_RPAY     /* 중간비과세퇴직급여 */
             , NVL(A.MIDL_PPTX,0) AS MIDL_PPTX     /* 중간기납부세액 */
             , NVL(A.RETI_INTX,0) AS RETI_INTX     /* 퇴직소득세 */
             , NVL(A.RETI_STRD,0) AS RETI_STRD     /* 퇴직농특세 */
             , NVL(A.RETI_IHTX,0) AS RETI_IHTX     /* 퇴직주민세 */
             , NVL(A.WORC_INTX,0) AS WORC_INTX     /* 근로정산소득세 */
             , NVL(A.WORC_STRD,0) AS WORC_STRD     /* 근로정산농특세 */
             , NVL(A.WORC_IHTX,0) AS WORC_IHTX     /* 근로정산주민세 */
             , NVL(A.FPTA_ATDD,0) AS FPTA_ATDD      /* 외국납부세액공제액 */
             , NVL(A.DDUC_AMOT,0) AS DDUC_AMOT      /* 공제금액 */
             , NVL(A.NPPC_ATDD,0) AS NPPC_ATDD      /* 국민연금전환금공제액 */
             , NVL(A.HINC_AMOT,0) AS HINC_AMOT      /* 건강보험정산공제액 */
             , NVL(A.LOAN_RPAM,0) AS LOAN_RPAM      /* 대출상환액 */
             , NVL(A.REEP_AMOT,0) AS REEP_AMOT      /* 퇴직수당금액 */
             , NVL(A.PENS_AMOT,0) AS PENS_AMOT      /* 퇴직연금예치금 */
             , NVL(A.RETI_ALWN,0) AS RETI_ALWN      /* 퇴직충당금 */
             , A.REMK_100X     /* 비고(100) */
             , NVL(A.RLPY_AMOT,0) AS RLPY_AMOT      /* 차인지급액 */
             , NVL(A.RLPY_AMOT,0) + NVL(A.PRTN_AMOT,0) AS RLPY_RTBN /* 급여성차인지급액  */
             , A.BANK_CODE      /* 은행코드 */
             , SF_DECRYPT(ACNT_NUMB) AS ACNT_NUMB   /* 계좌번호 */
             , A.DPST_NAME                          /* 예금주성명 */
             , A.CLSE_YSNO                          /* 퇴직처리마감여부 */
             , '0' AS CHK
             , NVL(REF1_FILD, 1) AS RETR_RATE       /* 누진율(롯데칠성만) */
             , C.DEPT_CODE                                                          /* 근무부서 */
             , G.DEPT_NAME                                                          /* 부서명 */
             , C.OPOS_CODE                                                          /* 직위코드 */
             , SF_GET_COMMNAME('OPOS_CODE', C.OPOS_CODE) AS OPOS_NAME               /* 부서명 */
             , C.EMPL_NAME                                                          /* 사원명 */
             , C.RERN_NUMB                                                          /* 주민등록번호 */
             , C.ENCO_DATE                                                          /* 입사일 */
             , C.RETR_DATE                                                          /* 퇴사일 */
             , D.POST_NUMB                                                          /* 우편번호 */
             , D.DTL1_ADDR || ' ' ||  D.DTL2_ADDR AS DTL1_ADDR                      /* 주소 */
             , H.PAYX_AMOT                                                          /* 지급연차수당 */
             , TRUNC((NVL (H.PAYX_AMOT,0) ) /12) AS AVER_PAYX                       /* 평균연차수당 */
             , NVL(SUM(J.TAPD_AMOT),0)     AS TAPD_AMOT                             /* 과세이연금액 */
          FROM PY_RTPCXM A      /* [퇴직급여계산] */
         INNER JOIN 
                       (
                             SELECT 
                                    EMPL_NUMB
                                  , MAX(RECE_SEQN) AS MAXX_SEQN
                               FROM PY_RTPCXM 
                              WHERE EMPL_NUMB IN ($EMPL_LIST$)
                              GROUP BY EMPL_NUMB
                       ) A2
                 ON A.EMPL_NUMB = A2.EMPL_NUMB
                AND A.RECE_SEQN = A2.MAXX_SEQN
          LEFT JOIN TM_CODEXD B
                 ON A.EMPL_NUMB = B.COMD_CODE
                AND B.COMM_CODE = 'RETR_RATE'
          LEFT OUTER JOIN HR_MASTXM C
                       ON A.EMPL_NUMB = C.EMPL_NUMB
          LEFT OUTER JOIN HR_MASTXD D
                       ON A.EMPL_NUMB = D.EMPL_NUMB
          LEFT OUTER JOIN TM_DEPTXM G
                       ON C.DEPT_CODE = G.DEPT_CODE
		LEFT OUTER JOIN ( SELECT EMPL_NUMB                             /* 사원번호 */
                                     , RECE_SEQN                             /* 퇴직정산회차 */
                                     , PAYX_DATE                             /* 지급일자 */
                                     , EXPD_CODE                             /* 수당코드 */
                                     , EXPD_NAME                             /* 수당명 */
                                     , SUM(PAYX_AMOT) AS PAYX_AMOT           /* 상여금액 */
                                  FROM( SELECT A.EMPL_NUMB
                                             , A.RECE_SEQN
                                             , A.PAYX_DATE
                                             , A.EXPD_CODE
                                             , B.EXPD_NAME
                                             , NVL(A.PAYX_AMOT, 0) AS PAYX_AMOT
                                          FROM PY_RTBONU A
					  INNER JOIN 
						     (
							    SELECT 
								   EMPL_NUMB
								 , MAX(RECE_SEQN) AS MAXX_SEQN
							      FROM PY_RTBONU
							     WHERE EMPL_NUMB IN ($EMPL_LIST$)
							     GROUP BY EMPL_NUMB      
						     ) A2
					   ON A.EMPL_NUMB = A2.EMPL_NUMB
					  AND A.RECE_SEQN = A2.MAXX_SEQN 
                                          LEFT OUTER JOIN PY_ALLDED B
                                                       ON A.EXPD_CODE = B.EXPD_CODE
                                         WHERE A.EXPD_CODE = 'A0070'
                                           AND A.EMPL_NUMB IN ($EMPL_LIST$)
                                         UNION ALL
                                        SELECT A.EMPL_NUMB
                                             , A.RECE_SEQN
                                             , A.PAYX_DATE
                                             , A.EXPD_CODE
                                             , B.EXPD_NAME
                                             , NVL(A.PAYX_AMOT, 0) AS PAYX_AMOT
                                          FROM PY_RTBONA A
					  INNER JOIN 
						     (
							    SELECT 
								   EMPL_NUMB
								 , MAX(RECE_SEQN) AS MAXX_SEQN
							      FROM PY_RTBONA
							     WHERE EMPL_NUMB IN ($EMPL_LIST$)
							     GROUP BY EMPL_NUMB      
						     ) A2
					   ON A.EMPL_NUMB = A2.EMPL_NUMB
					  AND A.RECE_SEQN = A2.MAXX_SEQN 
                                          LEFT OUTER JOIN PY_ALLDED B
                                                       ON A.EXPD_CODE = B.EXPD_CODE
                                         WHERE A.EXPD_CODE = 'A0070'
                                           AND A.EMPL_NUMB IN ($EMPL_LIST$)
                                         )
                                 GROUP BY EMPL_NUMB, RECE_SEQN, PAYX_DATE, EXPD_CODE, EXPD_NAME
                            ) H 
                           ON A.EMPL_NUMB = H.EMPL_NUMB
                          AND A.RECE_SEQN = H.RECE_SEQN                        
          LEFT OUTER JOIN PY_RTPPXM J
                       ON A.EMPL_NUMB = J.EMPL_NUMB
                      AND A.RECE_SEQN = J.RECE_SEQN
         WHERE A.EMPL_NUMB IN ($EMPL_LIST$)   /* 사원번호 */
         GROUP BY 
               A.EMPL_NUMB
             , A.RECE_SEQN
             , A.RERE_CODE
             , A.TAXX_GUBN
             , A.ENFC_CODE
             , A.FINL_ISDT
             , A.FINL_STDT
             , A.FINL_ENDT
             , A.FINL_PYDT
             , A.FIBF_EXMT
             , A.FIAF_EXMT
             , A.FIBF_ADMT
             , A.FIAF_ADMT
             , A.MIDL_ISDT
             , A.MIDL_STDT
             , A.MIDL_ENDT
             , A.MIDL_PYDT
             , A.MIBF_EXMT
             , A.MIAF_EXMT
             , A.MIBF_ADMT
             , A.MIAF_ADMT
             , A.PMST_DATE
             , A.CAL1_YMTH
             , A.CAL1_BEDE
             , A.CAL1_ENDD
             , A.CAL1_DCNT
             , A.CAL2_YMTH
             , A.CAL2_BEDE
             , A.CAL2_ENDD
             , A.CAL2_DCNT
             , A.CAL3_YMTH
             , A.CAL3_BEDE
             , A.CAL3_ENDD
             , A.CAL3_DCNT
             , A.CAL4_YMTH
             , A.CAL4_BEDE
             , A.CAL4_ENDD
             , A.CAL4_DCNT
             , A.DAVR_WAGE
             , A.MAVR_WAGE
             , A.AVER_WAGE
             , A.CWRK_YCNT
             , A.CWRK_MCNT
             , A.REYS_YCNT
             , A.REYS_MCNT
             , A.REYS_DCNT
             , A.PAYX_RATE
             , A.RETI_WAGE
             , A.VORN_ALLO
             , A.AVPY_AMOT
             , A.AVBN_AMOT
             , A.PYET_AMOT
             , A.TRRT_AMOT
             , A.OTDE_AMOT
             , A.DBPJ_DATE
             , A.RTBM_AMOT
             , A.RTBN_AMOT
             , A.PRTN_AMOT
             , A.FINL_RPAY
             , A.FINT_RPAY
             , A.FINL_PPTX
             , A.PBUS_NUMB
             , A.PFIR_NAME
             , A.MIDL_RPAY
             , A.MINT_RPAY
             , A.MIDL_PPTX
             , A.RETI_INTX
             , A.RETI_STRD
             , A.RETI_IHTX
             , A.WORC_INTX
             , A.WORC_STRD
             , A.WORC_IHTX
             , A.FPTA_ATDD
             , A.DDUC_AMOT
             , A.NPPC_ATDD
             , A.HINC_AMOT
             , A.LOAN_RPAM
             , A.REEP_AMOT
             , A.PENS_AMOT
             , A.RETI_ALWN
             , A.REMK_100X
             , A.RLPY_AMOT
             , A.BANK_CODE
             , A.ACNT_NUMB
             , A.DPST_NAME
             , A.CLSE_YSNO
             , REF1_FILD
             , C.DEPT_CODE
             , G.DEPT_NAME
             , C.OPOS_CODE
             , C.EMPL_NAME
             , C.RERN_NUMB
             , C.ENCO_DATE
             , C.RETR_DATE
             , D.POST_NUMB
             , D.DTL1_ADDR
             , D.DTL2_ADDR
             , H.PAYX_AMOT
             , H.PAYX_AMOT
         ORDER BY A.EMPL_NUMB
       
    ]]>
    </select>

<!--
/*******************************************************************************
     작 성 자 : 황치웅
     작 성 일 : 2016. 11. 10
     내    용 : 여러명의 퇴직금지급조서 조회
********************************************************************************/
-->
    <select id="PAYF0030.PRINT07" parameterClass="hashmap" resultClass="hashmap">
    <![CDATA[
         SELECT /* PAYF0030.PRINT07.여러명의 퇴직금지급조서 조회 */
                   A.EMPL_NUMB     /* 사원번호 */
                 , A.RECE_SEQN     /* 퇴직정산회차 */
                 , A.TAPA_SEQN     /* 과세이연계좌순번 */
                 , A.TAPF_NAME     /* 과세이연사업자명 */
                 , A.TAPB_NUMB     /* 과세이연사업자번호 */
                 , SF_DECRYPT(A.TAPA_NUMB) AS TAPA_NUMB     /* 과세이연계좌번호 */
                 , A.TAPD_AMOT     /* 과세이연입금액 */
                 , A.TAPD_DATE     /* 과세이연입금일 */
                 , A.REMK_100X     /* 비고 */
              FROM PY_RTPPXM A      /* [퇴직소득과세이연계좌] */
             INNER JOIN
                                (
                                    SELECT EMPL_NUMB
                                         , MAX(RECE_SEQN) AS MAXX_SEQN
                                      FROM PY_RTPPXM   
                                     WHERE EMPL_NUMB IN ($EMPL_LIST$)
                                     GROUP BY EMPL_NUMB
                                ) A2
                                ON A.EMPL_NUMB = A2.EMPL_NUMB
                               AND A.RECE_SEQN = A2.MAXX_SEQN
             WHERE A.EMPL_NUMB IN ($EMPL_LIST$)     /* 사원번호 */
             ORDER BY A.EMPL_NUMB, A.TAPA_SEQN
    ]]>
    </select>

<!--
/*******************************************************************************
     작 성 자 : 황치웅
     작 성 일 : 2016. 11. 28
     내     용 : 여러명의 퇴직보험금 조회
********************************************************************************/
-->
    <select id="PAYF0030.PRINT08" parameterClass="hashmap" resultClass="hashmap">
    <![CDATA[
         SELECT /* PAYF0030.PRINT08.여러명의 퇴직보험금 조회 */
                       A.EMPL_NUMB  /* 사원번호 */
                     , A.RECE_SEQN  /* 퇴직정산회차 */
                     , A.SINS_SEQN  /* 퇴직보험일련번호 */
                     , A.SINF_NAME  /* 퇴직보험사업자명 */
                     , A.SIND_AMOT  /* 퇴직보험입금액 */
                  FROM PY_SVINSU A /* [퇴직보험] */
                  INNER JOIN
                                (
                                    SELECT EMPL_NUMB
                                         , MAX(RECE_SEQN) AS MAXX_SEQN
                                      FROM PY_SVINSU   
                                     WHERE EMPL_NUMB IN ($EMPL_LIST$)
                                     GROUP BY EMPL_NUMB
                                ) A2
                                ON A.EMPL_NUMB = A2.EMPL_NUMB
                               AND A.RECE_SEQN = A2.MAXX_SEQN
                 WHERE A.EMPL_NUMB IN ($EMPL_LIST$) /* 사원번호 */
    ]]>
    </select>
    
    
<!--
/*******************************************************************************
     작 성 자 : 황치웅
     작 성 일 : 2016. 11. 28
     내     용 : 지급결의서 퇴직보험금 출력
********************************************************************************/
-->
    <select id="PAYF0030.PRINT09" parameterClass="hashmap" resultClass="hashmap">
    <![CDATA[
                SELECT /* PAYF0030.PRINT09.지급결의서 퇴직보험금 출력 */
                       EMPL_NUMB  /* 사원번호 */
                     , RECE_SEQN  /* 퇴직정산회차 */
                     , SINS_SEQN  /* 퇴직보험일련번호 */
                     , SINF_NAME  /* 퇴직보험사업자명 */
                     , SIND_AMOT  /* 퇴직보험입금액 */
                  FROM PY_SVINSU  /* [퇴직보험] */
                 WHERE EMPL_NUMB = #EMPL_NUMB#  /* 사원번호 */
                   AND RECE_SEQN = #RECE_SEQN#  /* 퇴직정산회차 */
    ]]>
    </select>
    
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : X09추가수당 조회
********************************************************************************/
-->
    <select id="PAYF0030.SEARCH09" parameterClass="hashmap" resultClass="hashmap">
    <![CDATA[
            SELECT /* PAYF0030.SEARCH09.X09추가수당 조회 */
                   A.EMPL_NUMB
                 , A.RECE_SEQN
                 , A.EXPD_CODE
                 , B.EXPD_NAME
                 , A.PAYX_AMOT
                 , A.REMK_100X
             FROM PY_ALDEXM A
             LEFT OUTER JOIN PY_ALLDED B
               ON A.EXPD_CODE = B.EXPD_CODE
            WHERE A.EMPL_NUMB = #EMPL_NUMB#
              AND A.RECE_SEQN = #RECE_SEQN#
              AND A.EXPD_CODE LIKE 'A%'
    ]]>
    </select>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : X10추가공제 조회
********************************************************************************/
-->
    <select id="PAYF0030.SEARCH10" parameterClass="hashmap" resultClass="hashmap">
    <![CDATA[
            SELECT /* PAYF0030.SEARCH10.X10추가공제 조회 */
                   A.EMPL_NUMB
                 , A.RECE_SEQN
                 , A.EXPD_CODE
                 , B.EXPD_NAME
                 , A.PAYX_AMOT
                 , A.REMK_100X
              FROM PY_ALDEXM A
              LEFT OUTER JOIN PY_ALLDED B
                ON A.EXPD_CODE = B.EXPD_CODE
             WHERE A.EMPL_NUMB = #EMPL_NUMB#
               AND A.RECE_SEQN = #RECE_SEQN#
               AND A.EXPD_CODE LIKE 'D%'
    ]]>
    </select>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : X11과세이연계좌 조회
********************************************************************************/
-->
    <select id="PAYF0030.SEARCH11" parameterClass="hashmap" resultClass="hashmap">
    <![CDATA[
            SELECT /* PAYF0030.SEARCH11.X11과세이연계좌 조회 */
                   A.EMPL_NUMB                            /* 사원번호 */
                 , A.RECE_SEQN                            /* 퇴직정산회차 */
                 , A.TAPA_SEQN                            /* 과세이연일련번호 */
                 , A.TAPF_NAME                            /* 과세이연사업자명 */
                 , A.TAPB_NUMB                            /* 과세이연사업자번호 */
                 , SF_DECRYPT(A.TAPA_NUMB) AS TAPA_NUMB   /* 과세이연계좌번호 */
                 , NVL(A.TAPD_AMOT, 0) AS TAPD_AMOT       /* 과세이연입금액 */
                 , A.TAPD_DATE                            /* 과세이연입금일 */
                 , A.REMK_100X                            /* 비고 */
                 , A.BANK_CODE                            /* 은행코드 */
              FROM PY_RTPPXM A     /* [퇴직소득과세이연계좌] */
             WHERE A.EMPL_NUMB = #EMPL_NUMB#     /* 사원번호 */
               AND A.RECE_SEQN = #RECE_SEQN#     /* 퇴직정산회차 */
             ORDER BY A.TAPA_SEQN
    ]]>
    </select>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : X12퇴직정산처리 후 과세이연계좌정보반영
********************************************************************************/
-->
    <statement id="PAYF0030.PROC12" parameterClass="hashmap" resultClass="hashmap">
    <![CDATA[
        DECLARE /* PAYF0030.PROC12.X12퇴직정산처리 후 과세이연계좌정보반영 */
            /* 퇴직소득원천징수영수증 데이터 */
            r_PY_RTPWXM PY_RTPWXM%ROWTYPE;

            /* 과세이연계좌 1번행 데이터 */
            r_PY_RTPPXM PY_RTPPXM%ROWTYPE;

            v_ROWCNT INT;
            vTAPD_AMOT DECIMAL(15,0);
            vPAXY_AMOT1 DECIMAL(15,0);
            vPAXY_AMOT2 DECIMAL(15,0);

        BEGIN

            BEGIN
                SELECT COUNT(*) INTO v_ROWCNT
                  FROM PY_RTPPXM
                 WHERE EMPL_NUMB = #EMPL_NUMB#
                   AND RECE_SEQN = #RECE_SEQN#;

                EXCEPTION WHEN NO_DATA_FOUND THEN
                    v_ROWCNT := 0;
            END;

            /* 추가수당 */
            SELECT Nvl(Sum(PAYX_AMOT),0)
              INTO vPAXY_AMOT1
              FROM PY_ALDEXM
             WHERE EXPD_CODE LIKE 'A%'
               AND EMPL_NUMB = #EMPL_NUMB#   /* 사원번호 */
               AND RECE_SEQN = #RECE_SEQN#   /* 퇴직정산회차 */
               ;

            /* 추가공제 */
            SELECT Nvl(Sum(PAYX_AMOT),0)
              INTO vPAXY_AMOT2
              FROM PY_ALDEXM
             WHERE EXPD_CODE LIKE 'D%'
               AND EMPL_NUMB = #EMPL_NUMB#   /* 사원번호 */
               AND RECE_SEQN = #RECE_SEQN#   /* 퇴직정산회차 */
               ;

            /* 과세이연계좌 정보가 있을 경우 처리한다. */
            IF v_ROWCNT > 0 THEN

                /* 과세이연계좌 1번행 데이터 */
                SELECT * INTO r_PY_RTPPXM
                  FROM PY_RTPPXM
                 WHERE EMPL_NUMB = #EMPL_NUMB#
                   AND RECE_SEQN = #RECE_SEQN#
                   AND TAPA_SEQN = (
                                             SELECT MIN(TAPA_SEQN)
                                              FROM PY_RTPPXM
                                             WHERE EMPL_NUMB = #EMPL_NUMB#
                                                AND RECE_SEQN = #RECE_SEQN#
                                            )
                ;

                /* 퇴직소득원천징수영수증 데이터 */
                SELECT * INTO r_PY_RTPWXM
                  FROM PY_RTPWXM
                 WHERE EMPL_NUMB = #EMPL_NUMB#
                   AND RECE_SEQN = #RECE_SEQN#
                ;

                r_PY_RTPWXM.TAPF_NAME := r_PY_RTPPXM.TAPF_NAME; /* 과세이연사업자명 */
                r_PY_RTPWXM.TAPB_NUMB := r_PY_RTPPXM.TAPB_NUMB; /* 과세이연사업자번호 */
                r_PY_RTPWXM.TAPA_NUMB := r_PY_RTPPXM.TAPA_NUMB; /* 과세이연계좌번호 */
                r_PY_RTPWXM.TAPD_DATE := r_PY_RTPPXM.TAPD_DATE; /* 과세이연입금일 */

                /* RAISE_APPLICATION_ERROR(-20000,'과세계좌 ! ' || r_PY_RTPWXM.TAPA_NUMB); */

                BEGIN
                    /* 과세이연계좌입금금액 합계조회 */
                    SELECT SUM(NVL(TAPD_AMOT,0)) INTO vTAPD_AMOT
                      FROM PY_RTPPXM
                     WHERE EMPL_NUMB = #EMPL_NUMB#
                       AND RECE_SEQN = #RECE_SEQN#
                    ;
                        EXCEPTION WHEN NO_DATA_FOUND THEN
                            vTAPD_AMOT := 0;
                END;


                r_PY_RTPWXM.TAPS_TAMT := CASE WHEN vTAPD_AMOT = 0 THEN 0 ELSE r_PY_RTPWXM.TLSR_TAMT END; /* 과세이연신고대상세액 */
                r_PY_RTPWXM.TAPD_AMOT := vTAPD_AMOT; /* 과세이연입금액 */
                r_PY_RTPWXM.TAPT_RPAY := CASE WHEN NVL(r_PY_RTPPXM.TAPD_AMOT,0) = 0 THEN 0 ELSE CASE WHEN r_PY_RTPWXM.FITA_RPAY = 0 THEN 0 ELSE r_PY_RTPWXM.FITA_RPAY END END; /* 과세이연퇴직급여 */
                r_PY_RTPWXM.TAPT_TAMT := CASE WHEN r_PY_RTPWXM.TAPT_RPAY = 0 THEN 0 ELSE ROUND(r_PY_RTPWXM.TAPS_TAMT * r_PY_RTPWXM.TAPD_AMOT / r_PY_RTPWXM.TAPT_RPAY, 0) END; /* 과세이연세액 */

                r_PY_RTPWXM.PORE_ITAX := r_PY_RTPWXM.TAPT_TAMT; /* 이연퇴직소득세 */
                r_PY_RTPWXM.PORE_RTAX := TRUNC(r_PY_RTPWXM.PORE_ITAX * 0.1, 0); /* 이연퇴직주민세 */
                r_PY_RTPWXM.PORE_FTAX := 0; /* 이연퇴직농특세 */
                r_PY_RTPWXM.DEDU_ITAX := TRUNC(r_PY_RTPWXM.SURE_ITAX - r_PY_RTPWXM.PORE_ITAX, -1); /* 차감징수소득세 */
                r_PY_RTPWXM.DEDU_RTAX := TRUNC(r_PY_RTPWXM.DEDU_ITAX * 0.1, -1); /* 차감징수주민세 */
                r_PY_RTPWXM.DEDU_FTAX := 0; /* 차감징수농특세 */

                /* 퇴직소득세, 주민세, 농특세, 실수령액 수정 */
                UPDATE PY_RTPCXM
                   SET RETI_INTX = r_PY_RTPWXM.DEDU_ITAX
                       , RETI_STRD = r_PY_RTPWXM.DEDU_FTAX
                       , RETI_IHTX = r_PY_RTPWXM.DEDU_RTAX
                       , RLPY_AMOT = r_PY_RTPWXM.TOTL_RPAY - r_PY_RTPWXM.DEDU_ITAX - r_PY_RTPWXM.DEDU_FTAX - r_PY_RTPWXM.DEDU_RTAX - NVL(PENS_AMOT,0) + vPAXY_AMOT1  - vPAXY_AMOT2
                WHERE EMPL_NUMB = #EMPL_NUMB#   /* 사원번호 */
                   AND RECE_SEQN = #RECE_SEQN#   /* 퇴직정산회차 */
                ;

                /* 퇴직소득원천징수영수증(과세이연처리정보) 수정 */
                UPDATE PY_RTPWXM
                   SET  TAPS_TAMT = r_PY_RTPWXM.TAPS_TAMT /* 과세이연신고대상세액 */
                       ,TAPF_NAME = r_PY_RTPWXM.TAPF_NAME /* 과세이연사업자명 */
                       ,TAPB_NUMB = r_PY_RTPWXM.TAPB_NUMB /* 과세이연사업자번호 */
                       ,TAPA_NUMB = r_PY_RTPWXM.TAPA_NUMB /* 과세이연계좌번호 */
                       ,TAPD_DATE = r_PY_RTPWXM.TAPD_DATE /* 과세이연입금일 */
                       ,TAPD_AMOT = r_PY_RTPWXM.TAPD_AMOT /* 과세이연입금액 */
                       ,TAPT_RPAY = r_PY_RTPWXM.TAPT_RPAY /* 과세이연퇴직급여 */
                       ,TAPT_TAMT = r_PY_RTPWXM.TAPT_TAMT /* 과세이연세액 */
                       ,PORE_ITAX = r_PY_RTPWXM.PORE_ITAX /* 이연퇴직소득세 */
                       ,PORE_RTAX = r_PY_RTPWXM.PORE_RTAX /* 이연퇴직주민세 */
                       ,PORE_FTAX = r_PY_RTPWXM.PORE_FTAX /* 이연퇴직농특세 */
                       ,DEDU_ITAX = r_PY_RTPWXM.DEDU_ITAX /* 차감징수소득세 */
                       ,DEDU_RTAX = r_PY_RTPWXM.DEDU_RTAX /* 차감징수주민세 */
                       ,DEDU_FTAX = r_PY_RTPWXM.DEDU_FTAX /* 차감징수농특세 */
                 WHERE EMPL_NUMB = #EMPL_NUMB#   /* 사원번호 */
                   AND RECE_SEQN = #RECE_SEQN#   /* 퇴직정산회차 */
                ;
            END IF;
        END;
    ]]>
    </statement>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : X13마감여부 조회
********************************************************************************/
-->
    <select id="PAYF0030.SEARCH13" parameterClass="hashmap" resultClass="hashmap">
    <![CDATA[
            SELECT /* PAYF0030.SEARCH13.X13마감여부 조회 */
                   CLSE_YSNO AS CLSE_YSNO
              FROM PY_RTPCXM
             WHERE EMPL_NUMB = #EMPL_NUMB#
               AND RECE_SEQN = #RECE_SEQN#
    ]]>
    </select>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : X14직원 조회
********************************************************************************/
-->
    <select id="PAYF0030.SEARCH14" parameterClass="hashmap" resultClass="hashmap">
    <![CDATA[
       SELECT /* PAYF0030.SEARCH14.X14직원 조회 */
                 '0' AS CHK
            , A.EMPL_NUMB                                                 /* 사원번호 */
            , A.EMPL_NAME                                                 /* 성명 */
            , C.SECT_NAME                                                 /* 소속명 */
            , C.DEPT_NAME                                                 /* 부서 */
            , D.COMD_CDNM AS OPOS_NAME                                    /* 직위명 */
            , E.COMD_CDNM AS CPOS_NAME                                    /* 직급 */
            , F.APPR_SEQN                                                 /* 전자결재일련번호 */
            , F.APPR_STAT                                                 /* 전자결재상태코드 */
            , F.CLSE_YSNO                                                 /* 마감여부 */
            , 'KHR130'    AS DOCU_IDXX                                    /* 결재문서양식 */
            , SF_GET_COMMNAMEREF('APPR_STAT', F.APPR_STAT, '1') APPR_PROC /* 결재상태 */
         FROM HR_MASTXM A /* [인사기본정보] */
         LEFT OUTER JOIN PY_MASTPM B
           ON B.EMPL_NUMB = A.EMPL_NUMB
         LEFT OUTER JOIN VI_DEPTXM C
           ON A.DEPT_CODE = C.DEPT_CODE
         LEFT OUTER JOIN TM_CODEXD D
           ON D.COMM_CODE = 'OPOS_CODE'  /* 직위 */
          AND A.OPOS_CODE = D.COMD_CODE
         LEFT OUTER JOIN TM_CODEXD E
           ON E.COMM_CODE = 'CPOS_CODE'  /* 직급 */
          AND A.CPOS_CODE = E.COMD_CODE
         LEFT OUTER JOIN (
            SELECT EMPL_NUMB, RECE_SEQN, APPR_SEQN, APPR_STAT, CLSE_YSNO, RERE_CODE, FINL_PYDT
                      , ROW_NUMBER() OVER(PARTITION BY EMPL_NUMB ORDER BY RECE_SEQN DESC)  AS SORT_ORDR
               FROM PY_RTPCXM
              WHERE 1=1
]]>
               <isEqual prepend="AND" property="RETR_SEDN" compareValue="3">
                    FINL_PYDT BETWEEN #RETR_STDT# AND #RETR_ENDT#
               </isEqual>
               <isNotEmpty prepend="AND" property="EMPL_NUMB">
                    EMPL_NUMB = #EMPL_NUMB#
               </isNotEmpty>
               <isNotEmpty prepend="AND" property="RERE_CODE">
                    RERE_CODE = #RERE_CODE#
               </isNotEmpty>
<![CDATA[
                  ) F
                ON A.EMPL_NUMB = F.EMPL_NUMB
               AND  F.SORT_ORDR = 1
        WHERE 1=1
]]>
        <isNotEmpty prepend="AND" property="DEPT_FCOD">
            C.DEPT_FCOD LIKE SF_GET_DEPTFCOD(#DEPT_FCOD#) || '%'
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="EMPL_NUMB">
            A.EMPL_NUMB = #EMPL_NUMB#
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="RERE_CODE">
            F.RERE_CODE = #RERE_CODE#
        </isNotEmpty>
        <isNotEmpty property="RETR_SEDN">
            <isEqual prepend="AND" property="RETR_SEDN" compareValue="1">
                A.RETR_DATE BETWEEN #RETR_STDT# AND #RETR_ENDT#
                ORDER BY A.RETR_DATE DESC, C.DEPT_FCOD, D.SORT_ORDR, E.SORT_ORDR, A.PRON_DATE, A.ENCO_DATE      
            </isEqual>
            <isEqual prepend="AND" property="RETR_SEDN" compareValue="3">
                F.FINL_PYDT BETWEEN #RETR_STDT# AND #RETR_ENDT#
                ORDER BY C.DEPT_FCOD, D.SORT_ORDR, E.SORT_ORDR, A.PRON_DATE, A.ENCO_DATE
            </isEqual>
        </isNotEmpty>
    </select>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : X15직원 조회(중도정산자)
********************************************************************************/
-->
    <select id="PAYF0030.SEARCH15" parameterClass="hashmap" resultClass="hashmap">
    <![CDATA[
       SELECT /* PAYF0030.SEARCH15.X15직원 조회(중도정산자)  */
                 '0' AS CHK
            , A.EMPL_NUMB                                                 /* 사원번호 */
            , A.EMPL_NAME                                                 /* 성명 */
            , C.SECT_NAME                                                 /* 소속명 */
            , C.DEPT_NAME                                                 /* 부서 */
            , D.COMD_CDNM AS OPOS_NAME                                    /* 직위명 */
            , E.COMD_CDNM AS CPOS_NAME                                    /* 직급 */
            , F.APPR_SEQN                                                 /* 전자결재일련번호 */
            , F.APPR_STAT                                                 /* 전자결재상태코드 */
            , F.CLSE_YSNO                                                 /* 마감여부 */
            , 'KHR130'    AS DOCU_IDXX                                    /* 결재문서양식 */
            , SF_GET_COMMNAMEREF('APPR_STAT', F.APPR_STAT, '1') APPR_PROC /* 결재상태 */
         FROM HR_MASTXM A                   /* [인사기본정보] */
         LEFT OUTER JOIN PY_MASTPM B
           ON B.EMPL_NUMB = A.EMPL_NUMB
         LEFT OUTER JOIN VI_DEPTXM C
           ON A.DEPT_CODE = C.DEPT_CODE
         LEFT OUTER JOIN TM_CODEXD D
           ON D.COMM_CODE = 'OPOS_CODE'  /* 직위 */
          AND A.OPOS_CODE = D.COMD_CODE
         LEFT OUTER JOIN TM_CODEXD E
           ON E.COMM_CODE = 'CPOS_CODE'  /* 직급 */
          AND A.CPOS_CODE = E.COMD_CODE
         LEFT OUTER JOIN (
            SELECT EMPL_NUMB, RECE_SEQN, APPR_SEQN, APPR_STAT, CLSE_YSNO
                      , ROW_NUMBER() OVER(PARTITION BY EMPL_NUMB ORDER BY RECE_SEQN DESC)  AS SORT_ORDR
               FROM PY_RTPCXM
              WHERE 1=1
]]>
              <isNotEmpty prepend="AND" property="EMPL_NUMB">
                    EMPL_NUMB = #EMPL_NUMB#
              </isNotEmpty>
<![CDATA[
                  ) F
                ON A.EMPL_NUMB = F.EMPL_NUMB
               AND  F.SORT_ORDR = 1
        WHERE A.RETR_DATE IS NULL
          AND B.REEP_DIVC IN ('1','2')
]]>
        <isNotEmpty prepend="AND" property="DEPT_FCOD">
            C.DEPT_FCOD LIKE SF_GET_DEPTFCOD(#DEPT_FCOD#) || '%'
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="EMPL_NUMB">
            A.EMPL_NUMB = #EMPL_NUMB#
        </isNotEmpty>
       ORDER BY C.DEPT_FCOD, D.SORT_ORDR, E.SORT_ORDR, A.PRON_DATE, A.ENCO_DATE
    </select>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : 퇴직마감처리
********************************************************************************/
-->
    <statement id="PAYF0030.PROC01" parameterClass="hashmap">
    <![CDATA[
        DECLARE /* PAYF0030.PROC01.퇴직마감처리 */
            v_ROWCNT INT;

        BEGIN
            BEGIN
                SELECT COUNT(*)
                  INTO v_ROWCNT
                  FROM PY_RTPWXM
                 WHERE EMPL_NUMB = #EMPL_NUMB#
                   AND RECE_SEQN = #RECE_SEQN#
           ;

            EXCEPTION
                WHEN NO_DATA_FOUND THEN v_ROWCNT:=0;
            END;

            /* 마감되었다면 수정불가 */
            IF v_ROWCNT = 0 THEN
              RAISE_APPLICATION_ERROR(-20000,'퇴직정산 처리를 하지 않았습니다! (사번 : ' + #EMPL_NUMB# + ')');
            END IF;

            UPDATE PY_RTPCXM
               SET CLSE_YSNO = '1'          /* 마감여부 */
             WHERE EMPL_NUMB = #EMPL_NUMB#  /* 사원번호 */
               AND RECE_SEQN = #RECE_SEQN#  /* 퇴직정산회차 */
             ;
        END;
    ]]>
    </statement>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : 퇴직정산 일괄 저장및처리
********************************************************************************/
-->
    <statement id="PAYF0030.PROC02" parameterClass="hashmap" resultClass="hashmap">
    <![CDATA[
        DECLARE /* PAYF0030.PROC02.퇴직정산 일괄 저장및처리 */
            r_PY_TAXBAS PY_TAXBAS%ROWTYPE; /*간이세액근거표*/
            r_PY_RTBASE PY_RTBASE%ROWTYPE; /*퇴직정산세액기초 데이터*/
            r_PY_RTPWXM PY_RTPWXM%ROWTYPE; /*퇴직소득원천징수영수증 데이터*/
            v_ROWCNT INT;
            
            /*퇴직소득정률공제액*/
            v_RPAY_DED1 DECIMAL(15,0); /*중간지급*/
            v_RPAY_DED2 DECIMAL(15,0); /*최종*/

            /*근속연수공제액*/
            v_CONT_DEDU DECIMAL(15,0); /*합산*/

            /*2016퇴직정산 근속연수공제*/
            v_COWA_DDUC DECIMAL(15,0);
            
            /*2016퇴직정산 환산급여별공제 구간변 계산값*/
            v_CON1_CALC DECIMAL(15,0);
            v_CON2_CALC DECIMAL(15,0);
            v_CON3_CALC DECIMAL(15,0);
            v_CON4_CALC DECIMAL(15,0);

            v_CLSE_YSNO PY_RTPCXM.CLSE_YSNO%TYPE; /*마감여부*/

            vPAXY_AMOT1 DECIMAL(15,0);
            vPAXY_AMOT2 DECIMAL(15,0);

        BEGIN
            BEGIN
                SELECT CLSE_YSNO INTO v_CLSE_YSNO
                  FROM PY_RTPCXM
                 WHERE EMPL_NUMB = #EMPL_NUMB#
                   AND RECE_SEQN = #RECE_SEQN#
                ;

            EXCEPTION
                WHEN NO_DATA_FOUND THEN v_CLSE_YSNO:='0';
            END;

            /*마감되었다면 수정불가*/
            IF v_CLSE_YSNO = '1' THEN
              RAISE_APPLICATION_ERROR(-20000,'이미 퇴직처리가 마감되었습니다. 처리가 불가 합니다!');
            END IF;

            /*간이세액근거표*/
            SELECT * INTO r_PY_TAXBAS
              FROM PY_TAXBAS
             WHERE STDS_YMTH = (
               SELECT MAX(STDS_YMTH)
                 FROM PY_TAXBAS
                WHERE STDS_YMTH <= CASE WHEN #RERE_CODE# = '5' THEN SUBSTR(#FINL_PYDT#,1,6) ELSE SUBSTR(#FINL_ENDT#,1,6) END
             )
            ;

            /*퇴직정산세액근거표*/
            SELECT * INTO r_PY_RTBASE
              FROM PY_RTBASE
             WHERE STDS_YEAR = (
               SELECT MAX(STDS_YEAR)
                 FROM PY_RTBASE
                WHERE STDS_YEAR <= CASE WHEN #RERE_CODE# = '5' THEN SUBSTR(#FINL_PYDT#,1,4) ELSE SUBSTR(#FINL_ENDT#,1,4) END
             )
            ;

            /*추가수당*/
            SELECT Nvl(Sum(PAYX_AMOT),0)
              INTO vPAXY_AMOT1
              FROM PY_ALDEXM
             WHERE EXPD_CODE LIKE 'A%'
               AND EMPL_NUMB = #EMPL_NUMB#   /*사원번호*/
               AND RECE_SEQN = #RECE_SEQN#   /*퇴직정산회차*/
               ;

            /*추가공제*/
            SELECT Nvl(Sum(PAYX_AMOT),0)
              INTO vPAXY_AMOT2
              FROM PY_ALDEXM
             WHERE EXPD_CODE LIKE 'D%'
               AND EMPL_NUMB = #EMPL_NUMB#   /*사원번호*/
               AND RECE_SEQN = #RECE_SEQN#   /*퇴직정산회차*/
               ;

            /*귀속연도 시작일, 종료일*/
            IF #RERE_CODE# = '5' THEN
              r_PY_RTPWXM.RSTR_DATE := CASE WHEN SUBSTR(#FINL_STDT#,1,4) < SUBSTR(#FINL_PYDT#,1,4) THEN SUBSTR(#FINL_PYDT#,1,4) || '0101' ELSE #FINL_STDT# END;
              r_PY_RTPWXM.REND_DATE := #FINL_PYDT#;
            ELSE
              r_PY_RTPWXM.RSTR_DATE := CASE WHEN SUBSTR(#FINL_STDT#,1,4) < SUBSTR(#FINL_ENDT#,1,4) THEN SUBSTR(#FINL_ENDT#,1,4) || '0101' ELSE #FINL_STDT# END;
              r_PY_RTPWXM.REND_DATE := #FINL_ENDT#;
            END IF;

            r_PY_RTPWXM.RERE_CODE := #RERE_CODE#; /*퇴직사유*/
            r_PY_RTPWXM.PFIR_NAME := #PFIR_NAME#; /*중간근무처명*/
            r_PY_RTPWXM.PBUS_NUMB := #PBUS_NUMB#; /*중간사업자번호*/
            r_PY_RTPWXM.MIDL_RPAY := NVL(#MIDL_RPAY#, 0); /*중간퇴직급여*/
            r_PY_RTPWXM.MINT_RPAY := NVL(#MINT_RPAY#, 0); /*중간비과세퇴직급여*/
            r_PY_RTPWXM.MITA_RPAY := r_PY_RTPWXM.MIDL_RPAY - r_PY_RTPWXM.MINT_RPAY; /*중간과세대상퇴직급여*/

            r_PY_RTPWXM.FINL_RPAY := #FINL_RPAY#; /*최종퇴직급여*/
            r_PY_RTPWXM.FINT_RPAY := #FINT_RPAY#; /*최종비과세퇴직급여*/
            r_PY_RTPWXM.FITA_RPAY := r_PY_RTPWXM.FINL_RPAY - r_PY_RTPWXM.FINT_RPAY; /*최종과세대상퇴직급여*/

            r_PY_RTPWXM.TOTL_RPAY := r_PY_RTPWXM.MIDL_RPAY + r_PY_RTPWXM.FINL_RPAY; /*합산퇴직급여*/
            r_PY_RTPWXM.TLNT_RPAY := r_PY_RTPWXM.MINT_RPAY + r_PY_RTPWXM.FINT_RPAY; /*합산비과세퇴직급여*/
            r_PY_RTPWXM.TLTA_RPAY := r_PY_RTPWXM.MITA_RPAY + r_PY_RTPWXM.FITA_RPAY; /*합산과세대상퇴직급여*/

            r_PY_RTPWXM.MIDL_ISDT := #MIDL_ISDT#; /*중간입사일*/
            r_PY_RTPWXM.MIDL_STDT := #MIDL_STDT#; /*중간기산일*/
            r_PY_RTPWXM.MIDL_ENDT := #MIDL_ENDT#; /*중간퇴사일*/
            r_PY_RTPWXM.MIDL_PYDT := #MIDL_PYDT#; /*중간지급일*/
            r_PY_RTPWXM.MICT_MONT := CASE WHEN r_PY_RTPWXM.MIDL_STDT IS NULL THEN 0 ELSE CEIL(MONTHS_BETWEEN(TO_DATE(#MIDL_ENDT#, 'YYYYMMDD') + 1, TO_DATE(#MIDL_STDT#, 'YYYYMMDD'))) END; /*중간근속월수*/
            r_PY_RTPWXM.MIEX_MONT := CASE WHEN r_PY_RTPWXM.MIDL_RPAY IS NULL THEN 0 ELSE #MIBF_EXMT# + #MIAF_EXMT# END; /*중간제외월수*/
            r_PY_RTPWXM.MIAD_MONT := CASE WHEN r_PY_RTPWXM.MIDL_RPAY IS NULL THEN 0 ELSE #MIBF_ADMT# + #MIAF_ADMT# END; /*중간가산월수*/
            r_PY_RTPWXM.MICT_YEAR := CASE WHEN r_PY_RTPWXM.MICT_MONT = 0 THEN 0 ELSE CEIL((r_PY_RTPWXM.MICT_MONT - r_PY_RTPWXM.MIEX_MONT + r_PY_RTPWXM.MIAD_MONT) / 12) END; /*중간근속연수*/

            r_PY_RTPWXM.FINL_ISDT := #FINL_ISDT#; /*최종입사일*/
            r_PY_RTPWXM.FINL_STDT := #FINL_STDT#; /*최종기산일*/
            r_PY_RTPWXM.FINL_ENDT := #FINL_ENDT#; /*최종퇴사일*/
            r_PY_RTPWXM.FINL_PYDT := #FINL_PYDT#; /*최종지급일*/
            r_PY_RTPWXM.FICT_MONT := CASE WHEN r_PY_RTPWXM.FINL_STDT IS NULL THEN 0 ELSE CEIL(MONTHS_BETWEEN(TO_DATE(#FINL_ENDT#, 'YYYYMMDD') + 1, TO_DATE(#FINL_STDT#, 'YYYYMMDD'))) END; /*최종근속월수*/
            r_PY_RTPWXM.FIEX_MONT := CASE WHEN r_PY_RTPWXM.FINL_STDT IS NULL THEN 0 ELSE #FIBF_EXMT# + #FIAF_EXMT# END; /*최종제외월수*/
            r_PY_RTPWXM.FIAD_MONT := CASE WHEN r_PY_RTPWXM.FINL_STDT IS NULL THEN 0 ELSE #FIBF_ADMT# + #FIAF_ADMT# END; /*최종가산월수*/
            r_PY_RTPWXM.FICT_YEAR := CEIL((r_PY_RTPWXM.FICT_MONT - r_PY_RTPWXM.FIEX_MONT + r_PY_RTPWXM.FIAD_MONT) / 12); /*최종근속연수*/

            r_PY_RTPWXM.TOTL_ISDT := r_PY_RTPWXM.FINL_ISDT; /*합산입사일*/
            r_PY_RTPWXM.TOTL_STDT := CASE WHEN r_PY_RTPWXM.FINL_STDT IS NULL THEN '' ELSE CASE WHEN r_PY_RTPWXM.MIDL_STDT IS NULL THEN r_PY_RTPWXM.FINL_STDT ELSE r_PY_RTPWXM.MIDL_STDT END END; /*합산기산일*/
            r_PY_RTPWXM.TOTL_ENDT := r_PY_RTPWXM.FINL_ENDT; /*합산퇴사일*/
            r_PY_RTPWXM.TLCT_MONT := CASE WHEN r_PY_RTPWXM.TOTL_STDT IS NULL THEN 0 ELSE CEIL(MONTHS_BETWEEN(TO_DATE(r_PY_RTPWXM.TOTL_ENDT, 'YYYYMMDD') + 1, TO_DATE(r_PY_RTPWXM.TOTL_STDT, 'YYYYMMDD'))) END; /*합산근속월수*/
            r_PY_RTPWXM.TLEX_MONT := r_PY_RTPWXM.MIEX_MONT + r_PY_RTPWXM.FIEX_MONT; /*합산제외월수*/
            r_PY_RTPWXM.TLAD_MONT := r_PY_RTPWXM.MIAD_MONT + r_PY_RTPWXM.FIAD_MONT; /*합산가산월수*/
            r_PY_RTPWXM.TLOL_MONT := CASE WHEN r_PY_RTPWXM.MIDL_ENDT IS NULL THEN 0
                                          ELSE CASE WHEN TO_DATE(r_PY_RTPWXM.MIDL_ENDT,'YYYYMMDD')-TO_DATE(r_PY_RTPWXM.FINL_STDT,'YYYYMMDD') < 1 THEN 0
                                                    ELSE CEIL(MONTHS_BETWEEN(TO_DATE(r_PY_RTPWXM.MIDL_ENDT, 'YYYYMMDD') + 1, TO_DATE(r_PY_RTPWXM.FINL_STDT, 'YYYYMMDD')))
                                               END
                                     END; /*합산중복월수*/
            r_PY_RTPWXM.TLCT_YEAR := CEIL((r_PY_RTPWXM.TLCT_MONT - r_PY_RTPWXM.TLEX_MONT + r_PY_RTPWXM.TLAD_MONT) / 12); /*합산근속연수*/

            r_PY_RTPWXM.BEFO_STDT := CASE WHEN r_PY_RTPWXM.TOTL_STDT <= '20121231' THEN r_PY_RTPWXM.TOTL_STDT ELSE '' END; /*이전기산일*/
            r_PY_RTPWXM.BEFO_ENDT := CASE WHEN r_PY_RTPWXM.BEFO_STDT IS NULL THEN '' ELSE CASE WHEN r_PY_RTPWXM.TOTL_ENDT >= '20121231' THEN '20121231' ELSE r_PY_RTPWXM.TOTL_ENDT END END; /*이전퇴사일*/
            r_PY_RTPWXM.BFCT_MONT := CASE WHEN r_PY_RTPWXM.TOTL_STDT IS NULL THEN 0 ELSE CEIL(MONTHS_BETWEEN(TO_DATE(r_PY_RTPWXM.BEFO_ENDT, 'YYYYMMDD') + 1, TO_DATE(r_PY_RTPWXM.BEFO_STDT, 'YYYYMMDD'))) END; /*이전근속월수*/
            r_PY_RTPWXM.BFEX_MONT := #MIBF_EXMT# + #FIBF_EXMT#; /*이전제외월수*/
            r_PY_RTPWXM.BFAD_MONT := #MIBF_ADMT# + #FIBF_ADMT#; /*이전가산월수*/
            r_PY_RTPWXM.BFCT_YEAR := CASE WHEN r_PY_RTPWXM.FINL_STDT IS NULL THEN 0 ELSE CEIL((r_PY_RTPWXM.BFCT_MONT - r_PY_RTPWXM.BFEX_MONT + r_PY_RTPWXM.BFAD_MONT) / 12) END; /*이전근속연수*/

            r_PY_RTPWXM.AFTR_STDT := CASE WHEN r_PY_RTPWXM.TOTL_STDT < '20130101' THEN CASE WHEN r_PY_RTPWXM.TOTL_ENDT <= '20121231' THEN '' ELSE '20130101' END ELSE r_PY_RTPWXM.TOTL_STDT END; /*이후기산일*/
            r_PY_RTPWXM.AFTR_ENDT := CASE WHEN r_PY_RTPWXM.AFTR_STDT IS NULL THEN '' ELSE r_PY_RTPWXM.TOTL_ENDT END; /*이후퇴사일*/
            r_PY_RTPWXM.AFCT_MONT := CASE WHEN r_PY_RTPWXM.AFTR_STDT IS NULL THEN 0 ELSE CEIL(MONTHS_BETWEEN(TO_DATE(r_PY_RTPWXM.AFTR_ENDT, 'YYYYMMDD') + 1, TO_DATE(r_PY_RTPWXM.AFTR_STDT, 'YYYYMMDD'))) END; /*이후근속월수*/
            r_PY_RTPWXM.AFEX_MONT := #MIAF_EXMT# + #FIAF_EXMT#; /*이후제외월수*/
            r_PY_RTPWXM.AFAD_MONT := #MIAF_ADMT# + #FIAF_ADMT#; /*이후가산월수*/
            r_PY_RTPWXM.AFCT_YEAR := CASE WHEN r_PY_RTPWXM.TLCT_YEAR IS NULL THEN 0 ELSE CASE WHEN NVL(r_PY_RTPWXM.BFCT_YEAR,0) = 0 THEN r_PY_RTPWXM.TLCT_YEAR ELSE r_PY_RTPWXM.TLCT_YEAR - r_PY_RTPWXM.BFCT_YEAR END END; /*이후근속연수*/

            /*==========퇴직소득과세표준계산 시작=========================================================*/
            /*------2015.12.31이전 계산방법 시작---------------------------------------------------------*/
            /*퇴직소득정률공제액*/
            v_RPAY_DED1 := r_PY_RTPWXM.MITA_RPAY * r_PY_RTBASE.GERT_RATE; /*중간지급*/
            v_RPAY_DED2 := r_PY_RTPWXM.FITA_RPAY * r_PY_RTBASE.GERT_RATE; /*최종*/
            r_PY_RTPWXM.AFRD_AMOT := v_RPAY_DED1 + v_RPAY_DED2; /*정률공제액*/

            /*근속연수공제액*/
            IF r_PY_RTPWXM.TLCT_YEAR <= r_PY_RTBASE.CWR1_YCNT THEN
                v_CONT_DEDU := r_PY_RTPWXM.TLCT_YEAR * r_PY_RTBASE.ADD1_ATDD;
            ELSIF r_PY_RTPWXM.TLCT_YEAR <= r_PY_RTBASE.CWR2_YCNT THEN
                v_CONT_DEDU := r_PY_RTBASE.CWR1_YCNT * r_PY_RTBASE.ADD1_ATDD + r_PY_RTBASE.ADD2_ATDD * (r_PY_RTPWXM.TLCT_YEAR - r_PY_RTBASE.CWR1_YCNT);
            ELSIF r_PY_RTPWXM.TLCT_YEAR <= r_PY_RTBASE.CWR3_YCNT THEN
                v_CONT_DEDU := (r_PY_RTBASE.CWR1_YCNT * r_PY_RTBASE.ADD1_ATDD + r_PY_RTBASE.ADD2_ATDD * r_PY_RTBASE.CWR1_YCNT) + r_PY_RTBASE.ADD3_ATDD * (r_PY_RTPWXM.TLCT_YEAR - r_PY_RTBASE.CWR2_YCNT);
            ELSIF r_PY_RTPWXM.TLCT_YEAR > r_PY_RTBASE.CWR3_YCNT THEN
                v_CONT_DEDU := (r_PY_RTBASE.CWR1_YCNT * r_PY_RTBASE.ADD1_ATDD + r_PY_RTBASE.ADD2_ATDD * r_PY_RTBASE.CWR1_YCNT + r_PY_RTBASE.ADD3_ATDD * r_PY_RTBASE.CWR2_YCNT) + r_PY_RTBASE.ADD4_ATDD * (r_PY_RTPWXM.TLCT_YEAR - r_PY_RTBASE.CWR2_YCNT);
            END IF;

            r_PY_RTPWXM.CSYD_AMOT := v_CONT_DEDU; /*근속연수공제액*/

             /*퇴직소득과세표준*/
            r_PY_RTPWXM.STAN_ASST := CASE WHEN r_PY_RTPWXM.TLTA_RPAY - r_PY_RTPWXM.AFRD_AMOT - r_PY_RTPWXM.CSYD_AMOT < 0 THEN 0 ELSE TRUNC(r_PY_RTPWXM.TLTA_RPAY - r_PY_RTPWXM.AFRD_AMOT - r_PY_RTPWXM.CSYD_AMOT,0) END;
            /*------2015.12.31이전 계산방법 종료---------------------------------------------------------*/

            /*------2016.01.01이후 계산방법 시작---------------------------------------------------------*/
            IF SUBSTR(r_PY_RTPWXM.RSTR_DATE, 1, 4) >= '2016' THEN
                /*퇴직정산소득*/
                r_PY_RTPWXM.CALC_REIN := r_PY_RTPWXM.TLTA_RPAY; /*정산퇴직소득*/
                /*근속연수공제액*/
                r_PY_RTPWXM.CWYC_DDUC := CASE WHEN r_PY_RTPWXM.CALC_REIN - v_CONT_DEDU < 0 THEN r_PY_RTPWXM.CALC_REIN ELSE v_CONT_DEDU END; /*근속연수공제액*/

                /*환산급여*/
                /*r_PY_RTPWXM.CONV_WAGE := TRUNC((r_PY_RTPWXM.TLTA_RPAY - r_PY_RTPWXM.CWYC_DDUC) / r_PY_RTPWXM.TLCT_YEAR, 0);*/
                r_PY_RTPWXM.CONV_WAGE := CASE WHEN  r_PY_RTPWXM.TLCT_YEAR = 0 THEN 0
                                              ELSE TRUNC(((r_PY_RTPWXM.TLTA_RPAY - r_PY_RTPWXM.CWYC_DDUC) / r_PY_RTPWXM.TLCT_YEAR) * 12 , 0)
                                              END;

                /*환산급여별공제*/
                v_CON1_CALC := r_PY_RTBASE.CON1_AMOT * r_PY_RTBASE.CON1_RATE;
                v_CON2_CALC := v_CON1_CALC + (r_PY_RTBASE.CON2_AMOT - r_PY_RTBASE.CON1_AMOT) * r_PY_RTBASE.CON2_RATE;
                v_CON3_CALC := v_CON2_CALC + (r_PY_RTBASE.CON3_AMOT - r_PY_RTBASE.CON2_AMOT) * r_PY_RTBASE.CON3_RATE;
                v_CON4_CALC := v_CON3_CALC + (r_PY_RTBASE.CON4_AMOT - r_PY_RTBASE.CON3_AMOT) * r_PY_RTBASE.CON4_RATE;

                IF r_PY_RTPWXM.CONV_WAGE <= r_PY_RTBASE.CON1_AMOT THEN
                  v_COWA_DDUC := Round(r_PY_RTPWXM.CONV_WAGE * r_PY_RTBASE.CON1_RATE, 0);
                ELSIF r_PY_RTPWXM.CONV_WAGE <= r_PY_RTBASE.CON2_AMOT  THEN
                  v_COWA_DDUC := Round(v_CON1_CALC + (r_PY_RTPWXM.CONV_WAGE - r_PY_RTBASE.CON1_AMOT ) * r_PY_RTBASE.CON2_RATE, 0);
                ELSIF r_PY_RTPWXM.CONV_WAGE <= r_PY_RTBASE.CON3_AMOT  THEN
                  v_COWA_DDUC := Round(v_CON2_CALC + (r_PY_RTPWXM.CONV_WAGE - r_PY_RTBASE.CON2_AMOT ) * r_PY_RTBASE.CON3_RATE, 0);
                ELSIF r_PY_RTPWXM.CONV_WAGE <= r_PY_RTBASE.CON4_AMOT  THEN
                  v_COWA_DDUC := Round(v_CON3_CALC + (r_PY_RTPWXM.CONV_WAGE - r_PY_RTBASE.CON3_AMOT ) * r_PY_RTBASE.CON4_RATE, 0);
                ELSE
                  v_COWA_DDUC := Round(v_CON4_CALC + (r_PY_RTPWXM.CONV_WAGE - r_PY_RTBASE.CON4_AMOT ) * r_PY_RTBASE.CON5_RATE, 0);
                END IF;



                r_PY_RTPWXM.COWA_DDUC := v_COWA_DDUC;

                /*퇴직소득과세표준*/
                r_PY_RTPWXM.REIN_STAS := r_PY_RTPWXM.CONV_WAGE - r_PY_RTPWXM.COWA_DDUC;

            END IF;

            /*------2016.01.01이후 계산방법 종료---------------------------------------------------------*/
            /*==========퇴직소득과세표준계산 종료=========================================================*/


            /*==========퇴직소득세액계산 시작=========================================================*/
            /*------2015.12.31이전 계산방법 시작---------------------------------------------------------*/
            /*과세표준안분(2012.12.31이전)*/
            r_PY_RTPWXM.BFST_ASST := CASE WHEN r_PY_RTPWXM.TLCT_YEAR = 0 THEN 0
                                          ELSE CASE WHEN NVL(r_PY_RTPWXM.BFCT_YEAR,0) = 0 THEN 0
                                                    ELSE ROUND(r_PY_RTPWXM.STAN_ASST * r_PY_RTPWXM.BFCT_YEAR / r_PY_RTPWXM.TLCT_YEAR,0)
                                               END
                                     END; /*이전과세표준*/
            /*과세표준안분(2013.1.1 이후)*/
            r_PY_RTPWXM.AFST_ASST := CASE WHEN r_PY_RTPWXM.TLCT_YEAR = 0 THEN 0 ELSE r_PY_RTPWXM.STAN_ASST - NVL(r_PY_RTPWXM.BFST_ASST,0) END; /*이후과세표준*/
            /*과세표준안분(정산(합산))*/
            r_PY_RTPWXM.TLST_ASST := r_PY_RTPWXM.BFST_ASST + r_PY_RTPWXM.AFST_ASST; /*합산과세표준*/

            /*연평균과세표준(2012.12.31이전)*/
            r_PY_RTPWXM.BFYA_STAD := CASE WHEN r_PY_RTPWXM.BFCT_YEAR = 0 THEN 0 ELSE TRUNC(r_PY_RTPWXM.BFST_ASST / r_PY_RTPWXM.BFCT_YEAR,0) END; /*이전연평균과세표준*/
            /*연평균산출세액(2012.12.31이전)*/
            r_PY_RTPWXM.BFYA_CTAX := CASE WHEN r_PY_RTPWXM.BFYA_STAD <= 0 THEN 0
                                          WHEN r_PY_RTPWXM.BFYA_STAD > 0 AND r_PY_RTPWXM.BFYA_STAD <= r_PY_TAXBAS.STA1_AMOT THEN TRUNC(r_PY_RTPWXM.BFYA_STAD * r_PY_TAXBAS.TAR1_RATE,0)
                                          WHEN r_PY_RTPWXM.BFYA_STAD > r_PY_TAXBAS.STA1_AMOT AND r_PY_RTPWXM.BFYA_STAD <= r_PY_TAXBAS.STA2_AMOT THEN TRUNC((r_PY_RTPWXM.BFYA_STAD - r_PY_TAXBAS.STA1_AMOT) * r_PY_TAXBAS.TAR2_RATE + r_PY_TAXBAS.TAR1_AMOT,0)
                                          WHEN r_PY_RTPWXM.BFYA_STAD > r_PY_TAXBAS.STA2_AMOT AND r_PY_RTPWXM.BFYA_STAD <= r_PY_TAXBAS.STA3_AMOT THEN TRUNC((r_PY_RTPWXM.BFYA_STAD - r_PY_TAXBAS.STA2_AMOT) * r_PY_TAXBAS.TAR3_RATE + r_PY_TAXBAS.TAR2_AMOT,0)
                                          WHEN r_PY_RTPWXM.BFYA_STAD > r_PY_TAXBAS.STA3_AMOT AND r_PY_RTPWXM.BFYA_STAD <= r_PY_TAXBAS.STA4_AMOT THEN TRUNC((r_PY_RTPWXM.BFYA_STAD - r_PY_TAXBAS.STA3_AMOT) * r_PY_TAXBAS.TAR4_RATE + r_PY_TAXBAS.TAR3_AMOT,0)
                                          WHEN r_PY_RTPWXM.BFYA_STAD > r_PY_TAXBAS.STA4_AMOT THEN TRUNC((r_PY_RTPWXM.BFYA_STAD - r_PY_TAXBAS.STA4_AMOT) * r_PY_TAXBAS.TAR5_RATE + r_PY_TAXBAS.TAR4_AMOT,0)
                                      END; /*이전연평균산출세액*/
            /*산출세액(2012.12.31이전)*/
            r_PY_RTPWXM.BEFO_CTAX := CASE WHEN r_PY_RTPWXM.BFCT_YEAR = 0 THEN 0 ELSE r_PY_RTPWXM.BFYA_CTAX * r_PY_RTPWXM.BFCT_YEAR END; /*이전산출세액*/

            /*연평균과세표준(2013.1.1이후)*/
            r_PY_RTPWXM.AFYA_STAD := TRUNC(CASE WHEN r_PY_RTPWXM.AFST_ASST = 0 THEN 0 ELSE r_PY_RTPWXM.AFST_ASST / r_PY_RTPWXM.AFCT_YEAR END, 0); /*이후연평균과세표준*/
            /*환산과세표준(2013.1.1이후)*/
            r_PY_RTPWXM.AFCS_ASST := r_PY_RTPWXM.AFYA_STAD * 5; /*이후환산과세표준*/
            /*환산산출세액(2013.1.1이후)*/
            r_PY_RTPWXM.AFCC_TAXX := CASE WHEN r_PY_RTPWXM.AFCS_ASST <= 0 THEN 0
                                          WHEN r_PY_RTPWXM.AFCS_ASST > 0 AND r_PY_RTPWXM.AFCS_ASST <= r_PY_TAXBAS.STA1_AMOT THEN TRUNC(r_PY_RTPWXM.AFCS_ASST * r_PY_TAXBAS.TAR1_RATE,0)
                                          WHEN r_PY_RTPWXM.AFCS_ASST > r_PY_TAXBAS.STA1_AMOT AND r_PY_RTPWXM.AFCS_ASST <= r_PY_TAXBAS.STA2_AMOT THEN TRUNC((r_PY_RTPWXM.AFCS_ASST - r_PY_TAXBAS.STA1_AMOT) * r_PY_TAXBAS.TAR2_RATE + r_PY_TAXBAS.TAR1_AMOT,0)
                                          WHEN r_PY_RTPWXM.AFCS_ASST > r_PY_TAXBAS.STA2_AMOT AND r_PY_RTPWXM.AFCS_ASST <= r_PY_TAXBAS.STA3_AMOT THEN TRUNC((r_PY_RTPWXM.AFCS_ASST - r_PY_TAXBAS.STA2_AMOT) * r_PY_TAXBAS.TAR3_RATE + r_PY_TAXBAS.TAR2_AMOT,0)
                                          WHEN r_PY_RTPWXM.AFCS_ASST > r_PY_TAXBAS.STA3_AMOT AND r_PY_RTPWXM.AFCS_ASST <= r_PY_TAXBAS.STA4_AMOT THEN TRUNC((r_PY_RTPWXM.AFCS_ASST - r_PY_TAXBAS.STA3_AMOT) * r_PY_TAXBAS.TAR4_RATE + r_PY_TAXBAS.TAR3_AMOT,0)
                                          WHEN r_PY_RTPWXM.AFCS_ASST > r_PY_TAXBAS.STA4_AMOT THEN TRUNC((r_PY_RTPWXM.AFCS_ASST - r_PY_TAXBAS.STA4_AMOT) * r_PY_TAXBAS.TAR5_RATE + r_PY_TAXBAS.TAR4_AMOT,0)
                                      END; /*이후환산산출세액*/
            /*연평균산출세액(2013.1.1이후)*/
            r_PY_RTPWXM.AFYA_CTAX := TRUNC(r_PY_RTPWXM.AFCC_TAXX / 5, 0); /*이후연평균산출세액*/
            /*산출세액(2013.1.1이후)*/
            r_PY_RTPWXM.AFTR_CTAX := CASE WHEN r_PY_RTPWXM.AFCT_YEAR = 0 THEN 0 ELSE r_PY_RTPWXM.AFYA_CTAX * r_PY_RTPWXM.AFCT_YEAR END; /*이후산출세액*/

            r_PY_RTPWXM.TLYA_STAD := TRUNC(CASE WHEN r_PY_RTPWXM.TLST_ASST = 0 THEN 0 ELSE r_PY_RTPWXM.TLST_ASST / r_PY_RTPWXM.TLCT_YEAR END, 0); /*합산연평균과세표준*/
            r_PY_RTPWXM.TLCS_ASST := r_PY_RTPWXM.AFCS_ASST; /*합산환산과세표준*/
            r_PY_RTPWXM.TLCC_TAXX := r_PY_RTPWXM.AFCC_TAXX; /*합산환산산출세액*/
            r_PY_RTPWXM.TLYA_CTAX := NVL(r_PY_RTPWXM.BFYA_CTAX,0) + NVL(r_PY_RTPWXM.AFYA_CTAX,0); /*합산연평균산출세액*/
            r_PY_RTPWXM.TOTL_CTAX := NVL(r_PY_RTPWXM.BEFO_CTAX,0) + NVL(r_PY_RTPWXM.AFTR_CTAX,0); /*합산산출세액*/
            /*------2015.12.31이전 계산방법 종료---------------------------------------------------------*/

            /*------2016.1.1이후 계산방법 시작---------------------------------------------------------*/
            IF SUBSTR(r_PY_RTPWXM.RSTR_DATE, 1, 4) >= '2016' THEN
                /*환산산출세액*/
                r_PY_RTPWXM.CONV_CLTX := CASE WHEN r_PY_RTPWXM.REIN_STAS <= 0 THEN 0
                                              WHEN r_PY_RTPWXM.REIN_STAS > 0 AND r_PY_RTPWXM.REIN_STAS <= r_PY_TAXBAS.STA1_AMOT THEN TRUNC(r_PY_RTPWXM.REIN_STAS * r_PY_TAXBAS.TAR1_RATE,0)
                                              WHEN r_PY_RTPWXM.REIN_STAS > r_PY_TAXBAS.STA1_AMOT AND r_PY_RTPWXM.REIN_STAS <= r_PY_TAXBAS.STA2_AMOT THEN TRUNC((r_PY_RTPWXM.REIN_STAS - r_PY_TAXBAS.STA1_AMOT) * r_PY_TAXBAS.TAR2_RATE + r_PY_TAXBAS.TAR1_AMOT,0)
                                              WHEN r_PY_RTPWXM.REIN_STAS > r_PY_TAXBAS.STA2_AMOT AND r_PY_RTPWXM.REIN_STAS <= r_PY_TAXBAS.STA3_AMOT THEN TRUNC((r_PY_RTPWXM.REIN_STAS - r_PY_TAXBAS.STA2_AMOT) * r_PY_TAXBAS.TAR3_RATE + r_PY_TAXBAS.TAR2_AMOT,0)
                                              WHEN r_PY_RTPWXM.REIN_STAS > r_PY_TAXBAS.STA3_AMOT AND r_PY_RTPWXM.REIN_STAS <= r_PY_TAXBAS.STA4_AMOT THEN TRUNC((r_PY_RTPWXM.REIN_STAS - r_PY_TAXBAS.STA3_AMOT) * r_PY_TAXBAS.TAR4_RATE + r_PY_TAXBAS.TAR3_AMOT,0)
                                              WHEN r_PY_RTPWXM.REIN_STAS > r_PY_TAXBAS.STA4_AMOT THEN TRUNC((r_PY_RTPWXM.REIN_STAS - r_PY_TAXBAS.STA4_AMOT) * r_PY_TAXBAS.TAR5_RATE + r_PY_TAXBAS.TAR4_AMOT,0)
                                          END;
                /*산출세액*/
                r_PY_RTPWXM.CLCR_TXAM := TRUNC(r_PY_RTPWXM.CONV_CLTX / 12 * r_PY_RTPWXM.TLCT_YEAR, 0);
                /*퇴직일이 속하는 과세연도*/
                r_PY_RTPWXM.TAXX_YEAR := SUBSTR(r_PY_RTPWXM.RSTR_DATE, 1, 4);
                /*특례적용산출세액*/
                r_PY_RTPWXM.SPUE_CLTX := TRUNC(r_PY_RTPWXM.TOTL_CTAX * r_PY_RTBASE.CLC1_RATE + r_PY_RTPWXM.CLCR_TXAM * r_PY_RTBASE.CLC2_RATE, 0);

                /*합산기납부세액*/
                r_PY_RTPWXM.TOTL_PPTX := NVL(#FINL_PPTX#,0) + NVL(#MIDL_PPTX#,0);
                /*합산신고대상세액*/
                r_PY_RTPWXM.TLSR_TAMT := r_PY_RTPWXM.SPUE_CLTX - r_PY_RTPWXM.TOTL_PPTX;

            ELSE

                /*합산기납부세액*/
                r_PY_RTPWXM.TOTL_PPTX := NVL(#FINL_PPTX#,0) + NVL(#MIDL_PPTX#,0);
                /*합산신고대상세액*/
                r_PY_RTPWXM.TLSR_TAMT := r_PY_RTPWXM.TOTL_CTAX - r_PY_RTPWXM.TOTL_PPTX;

            END IF;
            /*------2016.1.1이후 계산방법 종료---------------------------------------------------------*/
            /*==========퇴직소득세액계산 종료=========================================================*/

            /*과세이연계좌 INSERT 후에 UPDATE됨*/
            r_PY_RTPWXM.TAPS_TAMT := 0; /*과세이연신고대상세액*/
            r_PY_RTPWXM.TAPF_NAME := ''; /*과세이연사업자명*/
            r_PY_RTPWXM.TAPB_NUMB := ''; /*과세이연사업자번호*/
            r_PY_RTPWXM.TAPA_NUMB := ''; /*과세이연계좌번호*/
            r_PY_RTPWXM.TAPD_DATE := ''; /*과세이연입금일*/
            r_PY_RTPWXM.TAPD_AMOT := 0; /*과세이연입금액*/
            r_PY_RTPWXM.TAPT_RPAY := 0; /*과세이연퇴직급여*/
            r_PY_RTPWXM.TAPT_TAMT := 0; /*과세이연세액*/
            /*과세이연계좌 INSERT 후에 UPDATE됨*/

            r_PY_RTPWXM.SURE_ITAX := r_PY_RTPWXM.TLSR_TAMT; /*신고대상소득세*/
            r_PY_RTPWXM.SURE_RTAX := TRUNC(r_PY_RTPWXM.SURE_ITAX * 0.1, 0); /*신고대상주민세*/
            r_PY_RTPWXM.SURE_FTAX := 0; /*신고대상농특세*/

            /*과세이연계좌 INSERT 후에 UPDATE됨*/
            r_PY_RTPWXM.PORE_ITAX := 0; /*이연퇴직소득세*/
            r_PY_RTPWXM.PORE_RTAX := 0; /*이연퇴직주민세*/
            r_PY_RTPWXM.PORE_FTAX := 0; /*이연퇴직농특세*/
            r_PY_RTPWXM.DEDU_ITAX := TRUNC(r_PY_RTPWXM.SURE_ITAX, -1); /*차감징수소득세*/
            r_PY_RTPWXM.DEDU_RTAX := TRUNC(r_PY_RTPWXM.DEDU_ITAX * 0.1, -1); /*차감징수주민세*/
            r_PY_RTPWXM.DEDU_FTAX := 0; /*차감징수농특세*/
            /*과세이연계좌 INSERT 후에 UPDATE됨*/


            /*퇴직소득원천징수영수증 삭제*/
            DELETE FROM PY_RTPWXM
             WHERE EMPL_NUMB = #EMPL_NUMB#
               AND RECE_SEQN = #RECE_SEQN#;

            SELECT COUNT(*) INTO v_ROWCNT
              FROM PY_RTPCXM
             WHERE EMPL_NUMB = #EMPL_NUMB#
               AND RECE_SEQN = #RECE_SEQN#;

    /*           RAISE_APPLICATION_ERROR(-20000,' r_PY_RTPWXM.TOTL_RPAY = ' ||  r_PY_RTPWXM.TOTL_RPAY || ' r_PY_RTPWXM.DEDU_ITAX = ' ||r_PY_RTPWXM.DEDU_ITAX);*/

    /*      퇴직지급조서에 업데이트*/
/* RAISE_APPLICATION_ERROR(-20000, r_PY_RTPWXM.TOTL_CTAX||'>>'||r_PY_RTPWXM.TOTL_PPTX); */
            UPDATE PY_RTPCXM                /*[퇴직급여계산]*/
                  SET RETI_INTX = r_PY_RTPWXM.DEDU_ITAX /*퇴직소득세*/
                        ,RETI_STRD = r_PY_RTPWXM.DEDU_FTAX /*퇴직농특세*/
                        ,RETI_IHTX = r_PY_RTPWXM.DEDU_RTAX /*퇴직주민세 */
                        ,RLPY_AMOT = r_PY_RTPWXM.TOTL_RPAY - r_PY_RTPWXM.DEDU_ITAX - r_PY_RTPWXM.DEDU_FTAX - r_PY_RTPWXM.DEDU_RTAX - NVL(#PENS_AMOT#,0)+ vPAXY_AMOT1  - vPAXY_AMOT2
                        ,UPDT_DATE = SYSDATE  /*수정일시*/
                        ,UPDT_USID = #UPDT_USID#  /*수정자*/
             WHERE EMPL_NUMB  = #EMPL_NUMB#  /*사원번호*/
                  AND RECE_SEQN  = #RECE_SEQN#  /*퇴직정산회차*/
               ;

            /*퇴직소득원천징수영수증 저장*/
            INSERT INTO PY_RTPWXM ( /*[퇴직소득원천징수영수증]*/
                   EMPL_NUMB        /*사원번호*/
                  ,RECE_SEQN        /*퇴직정산회차*/
                  ,RSTR_DATE        /*귀속연도시작일*/
                  ,REND_DATE        /*귀속연도종료일*/
                  ,RERE_CODE        /*퇴직사유[RERE_CODE]*/
                  ,PFIR_NAME        /*중간근무처명*/
                  ,PBUS_NUMB        /*중간사업자번호*/
                  ,MIDL_RPAY        /*중간퇴직급여*/
                  ,MINT_RPAY        /*중간비과세퇴직급여*/
                  ,MITA_RPAY        /*중간과세대상퇴직급여*/
                  ,FINL_RPAY        /*최종퇴직급여*/
                  ,FINT_RPAY        /*최종비과세퇴직급여*/
                  ,FITA_RPAY        /*최종과세대상퇴직급여*/
                  ,TOTL_RPAY        /*합산퇴직급여*/
                  ,TLNT_RPAY        /*합산비과세퇴직급여*/
                  ,TLTA_RPAY        /*합산과세대상퇴직급여*/
                  ,MIDL_ISDT        /*중간입사일*/
                  ,MIDL_STDT        /*중간기산일*/
                  ,MIDL_ENDT        /*중간퇴사일*/
                  ,MIDL_PYDT        /*중간지급일*/
                  ,MICT_MONT        /*중간근속월수*/
                  ,MIEX_MONT        /*중간제외월수*/
                  ,MIAD_MONT        /*중간가산월수*/
                  ,MICT_YEAR        /*중간근속연수*/
                  ,FINL_ISDT        /*최종입사일*/
                  ,FINL_STDT        /*최종기산일*/
                  ,FINL_ENDT        /*최종퇴사일*/
                  ,FINL_PYDT        /*최종지급일*/
                  ,FICT_MONT        /*최종근속월수*/
                  ,FIEX_MONT        /*최종제외월수*/
                  ,FIAD_MONT        /*최종가산월수*/
                  ,FICT_YEAR        /*최종근속연수*/
                  ,TOTL_ISDT        /*합산입사일*/
                  ,TOTL_STDT        /*합산기산일*/
                  ,TOTL_ENDT        /*합산퇴사일*/
                  ,TLCT_MONT        /*합산근속월수*/
                  ,TLEX_MONT        /*합산제외월수*/
                  ,TLAD_MONT        /*합산가산월수*/
                  ,TLOL_MONT        /*합산중복월수*/
                  ,TLCT_YEAR        /*합산근속연수*/
                  ,BEFO_STDT        /*이전기산일*/
                  ,BEFO_ENDT        /*이전퇴사일*/
                  ,BFCT_MONT        /*이전근속월수*/
                  ,BFEX_MONT        /*이전제외월수*/
                  ,BFAD_MONT        /*이전가산월수*/
                  ,BFCT_YEAR        /*이전근속연수*/
                  ,AFTR_STDT        /*이후기산일*/
                  ,AFTR_ENDT        /*이후퇴사일*/
                  ,AFCT_MONT        /*이후근속월수*/
                  ,AFEX_MONT        /*이후제외월수*/
                  ,AFAD_MONT        /*이후가산월수*/
                  ,AFCT_YEAR        /*이후근속연수*/
                  ,AFRD_AMOT        /*정률공제액*/
                  ,CSYD_AMOT        /*근속연수공제액*/
                  ,STAN_ASST        /*퇴직소득과세표준*/
                  ,BFST_ASST        /*이전과세표준*/
                  ,BFYA_STAD        /*이전연평균과세표준*/
                  ,BFYA_CTAX        /*이전연평균산출세액*/
                  ,BEFO_CTAX        /*이전산출세액*/
                  ,AFST_ASST        /*이후과세표준*/
                  ,AFYA_STAD        /*이후연평균과세표준*/
                  ,AFCS_ASST        /*이후환산과세표준*/
                  ,AFCC_TAXX        /*이후환산산출세액*/
                  ,AFYA_CTAX        /*이후연평균산출세액*/
                  ,AFTR_CTAX        /*이후산출세액*/
                  ,TLST_ASST        /*합산과세표준*/
                  ,TLYA_STAD        /*합산연평균과세표준*/
                  ,TLCS_ASST        /*합산환산과세표준*/
                  ,TLCC_TAXX        /*합산환산산출세액*/
                  ,TLYA_CTAX        /*합산연평균산출세액*/
                  ,TOTL_CTAX        /*합산산출세액*/
                  ,TOTL_PPTX        /*합산기납부세액*/
                  ,TLSR_TAMT        /*합산신고대상세액*/
                  ,TAPS_TAMT        /*과세이연신고대상세액*/
                  ,TAPF_NAME        /*과세이연사업자명*/
                  ,TAPB_NUMB        /*과세이연사업자번호*/
                  ,TAPA_NUMB        /*과세이연계좌번호*/
                  ,TAPD_DATE        /*과세이연입금일*/
                  ,TAPD_AMOT        /*과세이연입금액*/
                  ,TAPT_RPAY        /*과세이연퇴직급여*/
                  ,TAPT_TAMT        /*과세이연세액*/
                  ,SURE_ITAX        /*신고대상소득세*/
                  ,SURE_RTAX        /*신고대상주민세*/
                  ,SURE_FTAX        /*신고대상농특세*/
                  ,PORE_ITAX        /*이연퇴직소득세*/
                  ,PORE_RTAX        /*이연퇴직주민세*/
                  ,PORE_FTAX        /*이연퇴직농특세*/
                  ,DEDU_ITAX        /*차감징수소득세*/
                  ,DEDU_RTAX        /*차감징수주민세*/
                  ,DEDU_FTAX        /*차감징수농특세*/
                  ,CALC_REIN        /*정산퇴직소득_2016.01.01이후*/
                  ,CWYC_DDUC        /*근속연수공제_2016.01.01이후*/
                  ,CONV_WAGE        /*환산급여_2016.01.01이후*/
                  ,COWA_DDUC        /*환산급여공제_2016.01.01이후*/
                  ,REIN_STAS        /*퇴직소득과세표준_2016.01.01이후*/
                  ,CONV_CLTX        /*환산산출세액_2016.01.01이후*/
                  ,CLCR_TXAM        /*산출세액_2016.01.01이후*/
                  ,TAXX_YEAR        /*퇴직일이 속하는 과세연도*/
                  ,SPUE_CLTX        /*특례적용산출세액*/
                  ,INST_DATE        /*등록일시*/
                  ,INST_USID        /*등록자*/
                  ,UPDT_DATE        /*수정일시*/
                  ,UPDT_USID        /*수정자*/
                  ,OWNR_NAME        /* 대표자성명 */
                  )
           VALUES (
                   #EMPL_NUMB#       /*사원번호*/
                  ,#RECE_SEQN#       /*퇴직정산회차*/
                  ,r_PY_RTPWXM.RSTR_DATE       /*귀속연도시작일*/
                  ,r_PY_RTPWXM.REND_DATE       /*귀속연도종료일*/
                  ,r_PY_RTPWXM.RERE_CODE       /*퇴직사유[RERE_CODE]*/
                  ,r_PY_RTPWXM.PFIR_NAME       /*중간근무처명*/
                  ,r_PY_RTPWXM.PBUS_NUMB       /*중간사업자번호*/
                  ,r_PY_RTPWXM.MIDL_RPAY       /*중간퇴직급여*/
                  ,r_PY_RTPWXM.MINT_RPAY       /*중간비과세퇴직급여*/
                  ,r_PY_RTPWXM.MITA_RPAY       /*중간과세대상퇴직급여*/
                  ,r_PY_RTPWXM.FINL_RPAY       /*최종퇴직급여*/
                  ,r_PY_RTPWXM.FINT_RPAY       /*최종비과세퇴직급여*/
                  ,r_PY_RTPWXM.FITA_RPAY       /*최종과세대상퇴직급여*/
                  ,r_PY_RTPWXM.TOTL_RPAY       /*합산퇴직급여*/
                  ,r_PY_RTPWXM.TLNT_RPAY       /*합산비과세퇴직급여*/
                  ,r_PY_RTPWXM.TLTA_RPAY       /*합산과세대상퇴직급여*/
                  ,r_PY_RTPWXM.MIDL_ISDT       /*중간입사일*/
                  ,r_PY_RTPWXM.MIDL_STDT       /*중간기산일*/
                  ,r_PY_RTPWXM.MIDL_ENDT       /*중간퇴사일*/
                  ,r_PY_RTPWXM.MIDL_PYDT       /*중간지급일*/
                  ,r_PY_RTPWXM.MICT_MONT       /*중간근속월수*/
                  ,r_PY_RTPWXM.MIEX_MONT       /*중간제외월수*/
                  ,r_PY_RTPWXM.MIAD_MONT       /*중간가산월수*/
                  ,r_PY_RTPWXM.MICT_YEAR       /*중간근속연수*/
                  ,r_PY_RTPWXM.FINL_ISDT       /*최종입사일*/
                  ,r_PY_RTPWXM.FINL_STDT       /*최종기산일*/
                  ,r_PY_RTPWXM.FINL_ENDT       /*최종퇴사일*/
                  ,r_PY_RTPWXM.FINL_PYDT       /*최종지급일*/
                  ,r_PY_RTPWXM.FICT_MONT       /*최종근속월수*/
                  ,r_PY_RTPWXM.FIEX_MONT       /*최종제외월수*/
                  ,r_PY_RTPWXM.FIAD_MONT       /*최종가산월수*/
                  ,r_PY_RTPWXM.FICT_YEAR       /*최종근속연수*/
                  ,r_PY_RTPWXM.TOTL_ISDT       /*합산입사일*/
                  ,r_PY_RTPWXM.TOTL_STDT       /*합산기산일*/
                  ,r_PY_RTPWXM.TOTL_ENDT       /*합산퇴사일*/
                  ,r_PY_RTPWXM.TLCT_MONT       /*합산근속월수*/
                  ,r_PY_RTPWXM.TLEX_MONT       /*합산제외월수*/
                  ,r_PY_RTPWXM.TLAD_MONT       /*합산가산월수*/
                  ,r_PY_RTPWXM.TLOL_MONT       /*합산중복월수*/
                  ,r_PY_RTPWXM.TLCT_YEAR       /*합산근속연수*/
                  ,r_PY_RTPWXM.BEFO_STDT       /*이전기산일*/
                  ,r_PY_RTPWXM.BEFO_ENDT       /*이전퇴사일*/
                  ,r_PY_RTPWXM.BFCT_MONT       /*이전근속월수*/
                  ,r_PY_RTPWXM.BFEX_MONT       /*이전제외월수*/
                  ,r_PY_RTPWXM.BFAD_MONT       /*이전가산월수*/
                  ,r_PY_RTPWXM.BFCT_YEAR       /*이전근속연수*/
                  ,r_PY_RTPWXM.AFTR_STDT       /*이후기산일*/
                  ,r_PY_RTPWXM.AFTR_ENDT       /*이후퇴사일*/
                  ,r_PY_RTPWXM.AFCT_MONT       /*이후근속월수*/
                  ,r_PY_RTPWXM.AFEX_MONT       /*이후제외월수*/
                  ,r_PY_RTPWXM.AFAD_MONT       /*이후가산월수*/
                  ,r_PY_RTPWXM.AFCT_YEAR       /*이후근속연수*/
                  ,r_PY_RTPWXM.AFRD_AMOT       /*정률공제액*/
                  ,r_PY_RTPWXM.CSYD_AMOT       /*근속연수공제액*/
                  ,r_PY_RTPWXM.STAN_ASST       /*퇴직소득과세표준*/
                  ,r_PY_RTPWXM.BFST_ASST       /*이전과세표준*/
                  ,r_PY_RTPWXM.BFYA_STAD       /*이전연평균과세표준*/
                  ,r_PY_RTPWXM.BFYA_CTAX       /*이전연평균산출세액*/
                  ,r_PY_RTPWXM.BEFO_CTAX       /*이전산출세액*/
                  ,r_PY_RTPWXM.AFST_ASST       /*이후과세표준*/
                  ,r_PY_RTPWXM.AFYA_STAD       /*이후연평균과세표준*/
                  ,r_PY_RTPWXM.AFCS_ASST       /*이후환산과세표준*/
                  ,r_PY_RTPWXM.AFCC_TAXX       /*이후환산산출세액*/
                  ,r_PY_RTPWXM.AFYA_CTAX       /*이후연평균산출세액*/
                  ,r_PY_RTPWXM.AFTR_CTAX       /*이후산출세액*/
                  ,r_PY_RTPWXM.TLST_ASST       /*합산과세표준*/
                  ,r_PY_RTPWXM.TLYA_STAD       /*합산연평균과세표준*/
                  ,r_PY_RTPWXM.TLCS_ASST       /*합산환산과세표준*/
                  ,r_PY_RTPWXM.TLCC_TAXX       /*합산환산산출세액*/
                  ,r_PY_RTPWXM.TLYA_CTAX       /*합산연평균산출세액*/
                  ,r_PY_RTPWXM.TOTL_CTAX       /*합산산출세액*/
                  ,r_PY_RTPWXM.TOTL_PPTX       /*합산기납부세액*/
                  ,r_PY_RTPWXM.TLSR_TAMT       /*합산신고대상세액*/
                  ,r_PY_RTPWXM.TAPS_TAMT       /*과세이연신고대상세액*/
                  ,r_PY_RTPWXM.TAPF_NAME       /*과세이연사업자명*/
                  ,r_PY_RTPWXM.TAPB_NUMB       /*과세이연사업자번호*/
                  ,r_PY_RTPWXM.TAPA_NUMB       /*과세이연계좌번호*/
                  ,r_PY_RTPWXM.TAPD_DATE       /*과세이연입금일*/
                  ,r_PY_RTPWXM.TAPD_AMOT       /*과세이연입금액*/
                  ,r_PY_RTPWXM.TAPT_RPAY       /*과세이연퇴직급여*/
                  ,r_PY_RTPWXM.TAPT_TAMT       /*과세이연세액*/
                  ,r_PY_RTPWXM.SURE_ITAX       /*신고대상소득세*/
                  ,r_PY_RTPWXM.SURE_RTAX       /*신고대상주민세*/
                  ,r_PY_RTPWXM.SURE_FTAX       /*신고대상농특세*/
                  ,r_PY_RTPWXM.PORE_ITAX       /*이연퇴직소득세*/
                  ,r_PY_RTPWXM.PORE_RTAX       /*이연퇴직주민세*/
                  ,r_PY_RTPWXM.PORE_FTAX       /*이연퇴직농특세*/
                  ,r_PY_RTPWXM.DEDU_ITAX       /*차감징수소득세*/
                  ,r_PY_RTPWXM.DEDU_RTAX       /*차감징수주민세*/
                  ,r_PY_RTPWXM.DEDU_FTAX       /*차감징수농특세*/
                  ,r_PY_RTPWXM.CALC_REIN       /*정산퇴직소득_2016.01.01이후*/
                  ,r_PY_RTPWXM.CWYC_DDUC       /*근속연수공제_2016.01.01이후*/
                  ,r_PY_RTPWXM.CONV_WAGE       /*환산급여_2016.01.01이후*/
                  ,r_PY_RTPWXM.COWA_DDUC       /*환산급여공제_2016.01.01이후*/
                  ,r_PY_RTPWXM.REIN_STAS       /*퇴직소득과세표준_2016.01.01이후*/
                  ,r_PY_RTPWXM.CONV_CLTX       /*환산산출세액_2016.01.01이후*/
                  ,r_PY_RTPWXM.CLCR_TXAM       /*산출세액_2016.01.01이후*/
                  ,r_PY_RTPWXM.TAXX_YEAR       /*퇴직일이 속하는 과세연도*/
                  ,r_PY_RTPWXM.SPUE_CLTX       /*특례적용산출세액*/
                  ,SYSDATE       /*등록일시*/
                  ,#UPDT_USID#       /*등록자*/
                  ,SYSDATE       /*수정일시*/
                  ,#UPDT_USID#       /*수정자*/
                  ,(SELECT OWNR_NAME FROM TM_OFFICE WHERE ACCT_GUBN = '100') /* 대표자성명 */
              );

        END;
    ]]>
    </statement>
    
<!--
/*******************************************************************************
     작 성 자 : 권미영
     작 성 일 : 2017. 2. 1
     내    용 : 급여평균 ~ 퇴직연금예치금 업데이트
********************************************************************************/
-->
    <statement id="PAYF0030.PROC03" parameterClass="hashmap" resultClass="hashmap">
    <![CDATA[
        UPDATE PY_RTPCXM /* PAYF0030.PROC03.급여평균 ~ 퇴직연금예치금 갱신 *//* [퇴직급여계산] */
           SET AVPY_AMOT = #AVPY_AMOT#    /* 급여평균 */
             , AVBN_AMOT = #AVBN_AMOT#    /* 상여평균 */
             , AVER_WAGE = #AVER_WAGE#    /* 평균임금 */
             , RETI_WAGE = #RETI_WAGE#    /* 일반퇴직금 */
             , PENS_AMOT = #PENS_AMOT#    /* 퇴직연금예치금 */
         WHERE EMPL_NUMB = #EMPL_NUMB#    /* 사원번호 */
           AND RECE_SEQN = #RECE_SEQN#    /* 퇴직정산회차 */
    ]]>
    </statement>
    
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : X16조서,급여, 상여 처리
********************************************************************************/
-->
    <statement id="PAYF0030.PROC16" parameterClass="hashmap" resultClass="hashmap">
    <![CDATA[
        DECLARE /* PAYF0030.PROC16.X16조서,급여, 상여 처리 */
            v_FINL_ISDT     HR_MASTXM.PCOP_JCDT%TYPE; /* 최초입사일(최종입사일) */
            v_FINL_STDT     PY_RTPCXM.FINL_STDT%TYPE; /* 최종기산일 */
            v_CWRK_MCNT     PY_RTPCXM.CWRK_MCNT%TYPE; /* 근속월수 */
            v_CWRK_YCNT     PY_RTPCXM.CWRK_YCNT%TYPE; /* 근속연수 */
            v_REYS_YCNT     PY_RTPCXM.REYS_YCNT%TYPE; /* 퇴직근속년수 */
            v_REYS_MCNT     PY_RTPCXM.REYS_MCNT%TYPE; /* 퇴직근속월수 */
            v_REYS_DCNT     PY_RTPCXM.REYS_DCNT%TYPE; /* 퇴직근속일수 */
            v_PAYX_RATE     NUMBER; /* 지급율 */

            v_ENDX_DATE     HR_MASTXM.RETR_DATE%TYPE;  /* 정년퇴직예정일 */

            /* 급여지급지간 */
            v_CAL1_YMTH     PY_RTPCXM.CAL1_YMTH%TYPE;
            v_CAL1_BEDE     PY_RTPCXM.CAL1_BEDE%TYPE;
            v_CAL1_ENDD     PY_RTPCXM.CAL1_ENDD%TYPE;
            v_CAL1_DCNT     PY_RTPCXM.CAL1_DCNT%TYPE;

            v_CAL2_YMTH     PY_RTPCXM.CAL2_YMTH%TYPE;
            v_CAL2_BEDE     PY_RTPCXM.CAL2_BEDE%TYPE;
            v_CAL2_ENDD     PY_RTPCXM.CAL2_ENDD%TYPE;
            v_CAL2_DCNT     PY_RTPCXM.CAL2_DCNT%TYPE;

            v_CAL3_YMTH     PY_RTPCXM.CAL3_YMTH%TYPE;
            v_CAL3_BEDE     PY_RTPCXM.CAL3_BEDE%TYPE;
            v_CAL3_ENDD     PY_RTPCXM.CAL3_ENDD%TYPE;
            v_CAL3_DCNT     PY_RTPCXM.CAL3_DCNT%TYPE;

            v_CAL4_YMTH     PY_RTPCXM.CAL3_YMTH%TYPE;
            v_CAL4_BEDE     PY_RTPCXM.CAL4_BEDE%TYPE;
            v_CAL4_ENDD     PY_RTPCXM.CAL4_ENDD%TYPE;
            v_CAL4_DCNT     PY_RTPCXM.CAL4_DCNT%TYPE;

            /* SITE에 따라 사용하지 않을 수 있음 */
            v_PENS_AMOT     PY_RTPCXM.PENS_AMOT%TYPE;  /* 퇴직연금예치금 */
            v_RETI_ALWN     PY_RTPCXM.RETI_ALWN%TYPE;  /* 전년도말추계액(퇴직충당금) */
            /* SITE에 따라 사용하지 않을 수 있음 */

            /* 상여지급일, 상여지급율 */
            /* s_PAYX_RATE PY_PMDIRY.BONU_PMRT%TYPE;
            s_PAYX_DATE     PY_PMDIRY.PAYX_DATE%TYPE;
            v_MBAS_AMOT     NUMBER(15,0); */ /* 전년말월기본연봉 */

            v_ENDX_MONT     INT;                       /* 정년잔여월수 */

            /* 마감여부 */
            v_CLSE_YSNO     PY_RTPCXM.CLSE_YSNO%TYPE;

            /* 기본급 */
            v_CPOS_CODE     HR_MASTXM.CPOS_CODE%TYPE;
            v_PSTP_CODE     HR_MASTXM.PSTP_CODE%TYPE;
            v_BSL1_AMOT     PY_GBHOBO.BSL1_AMOT%TYPE;

            v_ENFC_CODE     PY_RTPCXM.ENFC_CODE%TYPE;  /* 사업장코드 */
            v_BANK_CODE     PY_RTPCXM.BANK_CODE%TYPE;  /* 은행코드 */
            v_ACNT_NUMB     PY_RTPCXM.ACNT_NUMB%TYPE;  /* 계좌번호 */
            v_DPST_NAME     PY_RTPCXM.DPST_NAME%TYPE;  /* 예금주 */
            v_REMK_100X     PY_RTPCXM.REMK_100X%TYPE;  /* 비고100 */

            v_PAYX_TAMT     NUMBER(15); /* 3개월급여 */
            v_BONU_TAMT     NUMBER(15); /* 1년상여 */

            v_CLSD_CODE     HR_MASTXM.CLSD_CODE%TYPE;  /* 직원구분 */

            /* 성과급관련 */
            v_CPOS_CODE_BS  HR_MASTXM.CPOS_CODE%TYPE;
            v_PSTP_CODE_BS  HR_MASTXM.PSTP_CODE%TYPE;
            v_BSL1_AMOT_BS  PY_GBHOBO.BSL1_AMOT%TYPE;

            v_PAYS_YMTH     VARCHAR2(6);
            v_PAYE_YMTH     VARCHAR2(6);
            v_PAYS_DCNT     PY_RTBONU.PAYX_DCNT%TYPE;
            v_PAYE_DCNT     PY_RTBONU.PAYX_DCNT%TYPE;

            vPAXY_AMOT1     DECIMAL(15,0);
            vPAXY_AMOT2     DECIMAL(15,0);

            v_PROG_RATE     NUMBER;                             /*2016-10-26 LYG 퇴직누직율*/
            v_TRRT_AMOT     PY_RTPFCN.TRRT_AMOT%TYPE;   /*2016-10-26 퇴직전환금*/
        BEGIN

            BEGIN
                SELECT CLSE_YSNO
                  INTO v_CLSE_YSNO
                  FROM PY_RTPCXM
                 WHERE EMPL_NUMB = #EMPL_NUMB#
                   AND RECE_SEQN = #RECE_SEQN#
                ;

            EXCEPTION
                WHEN NO_DATA_FOUND THEN v_CLSE_YSNO:='0';
            END;

            /* 마감되었다면 수정불가 */
            IF v_CLSE_YSNO = '1' THEN
                RAISE_APPLICATION_ERROR(-20000,'이미 퇴직처리가 마감되었습니다. 변경이 불가 합니다!');
            END IF;

            /* 최초입사일(최종입사일), 최종기산일, 정년퇴직예정일, 임원여부 */
            SELECT NVL(A.PCOP_JCDT, A.ENCO_DATE)  /* 최초입사일(최종입사일) */
                 , CASE WHEN B.ENDX_DATE IS NULL THEN NVL(A.PCOP_JCDT, A.ENCO_DATE)
                        ELSE TO_NCHAR(TO_CHAR(TO_DATE(B.ENDX_DATE, 'YYYYMMDD') + 1,'YYYYMMDD')) END  /* 최종기산일 */
                 , TO_CHAR(ADD_MONTHS(TO_DATE(A.EMPL_BIRT, 'YYYYMMDD'), 696),'YYYY') || '1231'  /* 정년퇴직예정일 */
                 , A.CPOS_CODE     /* 직급코드 */
                 , A.PSTP_CODE     /* 호봉코드 */
                 , C.WABK_CODE     /* 급여은행코드 */
                 , C.WAGE_ACNO     /* 급여계좌번호 */
                 , A.EMPL_NAME     /* 사원성명 */
                 , A.CLSD_CODE     /* 직원구분코드 */
                 , D.ENFC_CODE     /* 사업장코드 */
                 , NVL( TO_NUMBER(E.REF1_FILD), 1 )     /*2016-10-26 LYG 퇴직누진율*/
                 , NVL( F.TRRT_AMOT, 0)
              INTO v_FINL_ISDT, v_FINL_STDT, v_ENDX_DATE,  v_CPOS_CODE, v_PSTP_CODE, v_BANK_CODE, v_ACNT_NUMB, v_DPST_NAME, v_CLSD_CODE, v_ENFC_CODE, v_PROG_RATE, v_TRRT_AMOT
             FROM TABLE(SF_HR_MASTXM(#EMPL_NUMB#, #FINL_ENDT#)) A
                    LEFT OUTER JOIN ( SELECT #EMPL_NUMB# AS EMPL_NUMB
                                           , MAX(FINL_ENDT) AS ENDX_DATE
                                        FROM PY_RTPCXM
                                       WHERE EMPL_NUMB = #EMPL_NUMB#
                                         AND RECE_SEQN < #RECE_SEQN#
                                         AND CLSE_YSNO = '1'
                                     ) B
                            ON A.EMPL_NUMB = B.EMPL_NUMB
                    INNER JOIN PY_MASTPM C
                        ON A.EMPL_NUMB = C.EMPL_NUMB
                    LEFT JOIN TABLE(SF_TM_DEPTXM(#FINL_ENDT#)) D
                        ON A.DEPT_CODE = D.DEPT_CODE
                    LEFT JOIN TM_CODEXD E                       /*2016-10-26 LYG 퇴직누진율*/
                        ON E.COMM_CODE = 'RETR_RATE'
                       AND E.COMD_CODE = A.EMPL_NUMB
                    LEFT JOIN PY_RTPFCN F                       /*2016-10-26 LYG 퇴직전환금*/
                        ON F.EMPL_NUMB = A.EMPL_NUMB
             WHERE A.EMPL_NUMB = #EMPL_NUMB#
            ;

            /* 퇴직근속월수, */
            v_CWRK_MCNT := CEIL(MONTHS_BETWEEN(TO_DATE(#FINL_ENDT#, 'YYYYMMDD') + 1, TO_DATE(v_FINL_STDT, 'YYYYMMDD')));

            /* 근속연수 */
            v_CWRK_YCNT := CEIL(v_CWRK_MCNT / 12);

            /* 지급율(근속월수/12) */
            /*v_PAYX_RATE   := TRUNC(v_CWRK_MCNT/12,5);*/
            /*v_PAYX_RATE   := v_CWRK_MCNT/12;*/


            /* 2016-11-08 LYG 지급율 계산 방식 변경으로 추가*/
            /* 퇴직근속:년:월:일 수 */
            v_REYS_YCNT   := TRUNC(MONTHS_BETWEEN(TO_DATE(#FINL_ENDT#, 'YYYYMMDD') + 1, TO_DATE(v_FINL_STDT, 'YYYYMMDD')) / 12);
            v_REYS_MCNT   := TRUNC(MONTHS_BETWEEN(TO_DATE(#FINL_ENDT#, 'YYYYMMDD') + 1, TO_DATE(v_FINL_STDT, 'YYYYMMDD')), 0) - (v_REYS_YCNT * 12);
            v_REYS_DCNT   := (TO_DATE(#FINL_ENDT#, 'YYYYMMDD') - (ADD_MONTHS(TO_DATE(v_FINL_STDT,'YYYYMMDD'), (TRUNC(MONTHS_BETWEEN(TO_DATE(#FINL_ENDT#,'YYYYMMDD') + 1, TO_DATE(v_FINL_STDT, 'YYYYMMDD')))))-1));

            /* 지급율(X년 + Y개월/12 + Z일/365)  */
            v_PAYX_RATE   := v_REYS_YCNT + (v_REYS_MCNT/12) + (v_REYS_DCNT/365);

            /* 급여지급기간 구하기 시작 */
            /* 퇴직일자(급여기준일)가 해당월의 마지막일인지 비교 법적용시 (1=1 제거) */
            IF #PMST_DATE# = TO_CHAR(LAST_DAY(TO_DATE(#PMST_DATE#,'YYYYMMDD')),'YYYYMMDD')  OR 1=1 THEN

                /* 퇴직일자(급여기준일)가 해당월의 마지막일 인경우 */
                v_CAL1_YMTH     := TO_CHAR(ADD_MONTHS(TO_DATE(#PMST_DATE#,'YYYYMMDD'), -2),'YYYYMM');
                v_CAL1_BEDE     := TO_CHAR(ADD_MONTHS(TO_DATE(#PMST_DATE#,'YYYYMMDD'), -2),'YYYYMM')||'01';
                v_CAL1_ENDD     := TO_CHAR(LAST_DAY(ADD_MONTHS(TO_DATE(#PMST_DATE#,'YYYYMMDD'), -2)),'YYYYMMDD');
                v_CAL1_DCNT     := TO_NUMBER(TO_CHAR(LAST_DAY(ADD_MONTHS(TO_DATE(#PMST_DATE#,'YYYYMMDD'), -2)),'DD'));

                v_CAL2_YMTH     := TO_CHAR(ADD_MONTHS(TO_DATE(#PMST_DATE#,'YYYYMMDD'), -1),'YYYYMM');
                v_CAL2_BEDE     := TO_CHAR(ADD_MONTHS(TO_DATE(#PMST_DATE#,'YYYYMMDD'), -1),'YYYYMM')||'01';
                v_CAL2_ENDD     := TO_CHAR(LAST_DAY(ADD_MONTHS(TO_DATE(#PMST_DATE#,'YYYYMMDD'), -1)),'YYYYMMDD');
                v_CAL2_DCNT     := TO_NUMBER(TO_CHAR(LAST_DAY(ADD_MONTHS(TO_DATE(#PMST_DATE#,'YYYYMMDD'), -1)),'DD'));

                v_CAL3_YMTH     := SUBSTR(#PMST_DATE#,1,6);
                v_CAL3_BEDE     := SUBSTR(#PMST_DATE#,1,6)||'01';
                v_CAL3_ENDD     := #PMST_DATE#;
                v_CAL3_DCNT     := TO_NUMBER(SUBSTR(#PMST_DATE#,7,2));

                v_CAL4_YMTH     := '';
                v_CAL4_BEDE     := '';
                v_CAL4_ENDD     := '';
                v_CAL4_DCNT     := 0;

            ELSE
                /* 퇴직일자(급여기준일)가 해당월의 마지막일 아닌경우 */
                v_CAL1_YMTH     := TO_CHAR(ADD_MONTHS(TO_DATE(#PMST_DATE#,'YYYYMMDD'), -3),'YYYYMM');
                v_CAL1_BEDE     := TO_CHAR(TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(#PMST_DATE#,'YYYYMMDD'), -3),'YYYYMM')||'01','YYYYMMDD')+TO_NUMBER(SUBSTR(#PMST_DATE#,7,2)),'YYYYMMDD');
                v_CAL1_ENDD     := TO_CHAR(LAST_DAY(ADD_MONTHS(TO_DATE(#PMST_DATE#,'YYYYMMDD'), -3)),'YYYYMMDD');
                v_CAL1_DCNT     := TO_DATE(v_CAL1_ENDD,'YYYYMMDD') + 1 - TO_DATE(v_CAL1_BEDE,'YYYYMMDD');

                v_CAL2_YMTH     := TO_CHAR(ADD_MONTHS(TO_DATE(#PMST_DATE#,'YYYYMMDD'), -2),'YYYYMM');
                v_CAL2_BEDE     := TO_CHAR(ADD_MONTHS(TO_DATE(#PMST_DATE#,'YYYYMMDD'), -2),'YYYYMM')||'01';
                v_CAL2_ENDD     := TO_CHAR(LAST_DAY(ADD_MONTHS(TO_DATE(#PMST_DATE#,'YYYYMMDD'), -2)),'YYYYMMDD');
                v_CAL2_DCNT     := TO_NUMBER(TO_CHAR(LAST_DAY(ADD_MONTHS(TO_DATE(#PMST_DATE#,'YYYYMMDD'), -2)),'DD'));

                v_CAL3_YMTH     := TO_CHAR(ADD_MONTHS(TO_DATE(#PMST_DATE#,'YYYYMMDD'), -1),'YYYYMM');
                v_CAL3_BEDE     := TO_CHAR(ADD_MONTHS(TO_DATE(#PMST_DATE#,'YYYYMMDD'), -1),'YYYYMM')||'01';
                v_CAL3_ENDD     := TO_CHAR(LAST_DAY(ADD_MONTHS(TO_DATE(#PMST_DATE#,'YYYYMMDD'), -1)),'YYYYMMDD');
                v_CAL3_DCNT     := TO_NUMBER(TO_CHAR(LAST_DAY(ADD_MONTHS(TO_DATE(#PMST_DATE#,'YYYYMMDD'), -1)),'DD'));

                v_CAL4_YMTH     := SUBSTR(#PMST_DATE#,1,6);
                v_CAL4_BEDE     := SUBSTR(#PMST_DATE#,1,6)||'01';
                v_CAL4_ENDD     := #PMST_DATE#;
                v_CAL4_DCNT     := TO_NUMBER(SUBSTR(#PMST_DATE#,7,2));

            END IF;

            /* 퇴직연금예치금 */
            BEGIN
                SELECT SUM(RTPD_AMOT)
                  INTO v_PENS_AMOT
                  FROM PY_RTPSDB
                 WHERE EMPL_NUMB = #EMPL_NUMB#
                   AND STDS_DATE = (SELECT MAX(STDS_DATE) FROM PY_RTPSDB WHERE EMPL_NUMB = #EMPL_NUMB# AND STDS_DATE <= #FINL_ENDT#);

            EXCEPTION
                WHEN NO_DATA_FOUND THEN v_PENS_AMOT := 0;
            END;

            /* 전년말 추계액 */
            BEGIN
                SELECT RETI_ALWN
                  INTO v_RETI_ALWN
                  FROM PY_RTRESE
                 WHERE EMPL_NUMB = #EMPL_NUMB#
                   AND STDS_DATE = (SELECT MAX(STDS_DATE) FROM PY_RTPSDB WHERE EMPL_NUMB = #EMPL_NUMB# AND STDS_DATE <= #FINL_ENDT#);

            EXCEPTION
                WHEN NO_DATA_FOUND THEN v_RETI_ALWN := 0;
            END;

            /* 상여 지급율 상여지급일 */
            /*SELECT NVL(BONU_PMRT,0)
                    ,PAYX_DATE
                INTO s_PAYX_RATE, s_PAYX_DATE
                FROM PY_PMDIRY
               WHERE WADE_YSNO = '1'
                 AND WAGE_CODE = '3000'
                 AND PAYX_DATE = (SELECT MAX(PAYX_DATE) FROM PY_PMDIRY WHERE WADE_YSNO = '1' AND WAGE_CODE = '3000');*/

            /* 기존 회차의 퇴직금을 삭제한다. */
            DELETE FROM PY_RTPAYX
             WHERE EMPL_NUMB = #EMPL_NUMB#
               AND RECE_SEQN = #RECE_SEQN#;

            DELETE FROM PY_RTPAYA
             WHERE EMPL_NUMB = #EMPL_NUMB#
               AND RECE_SEQN = #RECE_SEQN#;

            DELETE FROM PY_RTBONU
             WHERE EMPL_NUMB = #EMPL_NUMB#
               AND RECE_SEQN = #RECE_SEQN#;

            DELETE FROM PY_RTBONA
             WHERE EMPL_NUMB = #EMPL_NUMB#
               AND RECE_SEQN = #RECE_SEQN#;

            DELETE FROM PY_ALDEXM
             WHERE EMPL_NUMB = #EMPL_NUMB#
               AND RECE_SEQN = #RECE_SEQN#;

            DELETE FROM PY_RTPPXM
             WHERE EMPL_NUMB = #EMPL_NUMB#
               AND RECE_SEQN = #RECE_SEQN#;

            DELETE FROM PY_RTPWXM
             WHERE EMPL_NUMB = #EMPL_NUMB#
               AND RECE_SEQN = #RECE_SEQN#;

            DELETE FROM PY_RTPCXM
             WHERE EMPL_NUMB = #EMPL_NUMB#
               AND RECE_SEQN = #RECE_SEQN#;

            INSERT INTO PY_RTPCXM (
                     EMPL_NUMB      /* 사원번호 */
                    ,RECE_SEQN      /* 퇴직정산회차 */
                    ,RERE_CODE      /* 퇴직사유[RERE_CODE] */
                    ,TAXX_GUBN      /* 과세구분[TAXX_GUBN] */
                    ,ENFC_CODE      /* 사업장코드 */
                    ,FINL_ISDT      /* 최종입사일 */
                    ,FINL_STDT      /* 최종기산일 */
                    ,FINL_ENDT      /* 최종퇴사일 */
                    ,FINL_PYDT      /* 최종지급일 */
                    ,FIBF_EXMT      /* 최종이전제외월수 */
                    ,FIAF_EXMT      /* 최종이후제외월수 */
                    ,FIBF_ADMT      /* 최종이전가산월수 */
                    ,FIAF_ADMT      /* 최종이후가산월수 */
                    ,MIDL_ISDT      /* 중간입사일 */
                    ,MIDL_STDT      /* 중간기산일 */
                    ,MIDL_ENDT      /* 중간퇴사일 */
                    ,MIDL_PYDT      /* 중간지급일 */
                    ,MIBF_EXMT      /* 중간이전제외월수 */
                    ,MIAF_EXMT      /* 중간이후제외월수 */
                    ,MIBF_ADMT      /* 중간이전가산월수 */
                    ,MIAF_ADMT      /* 중간이후가산월수 */
                    ,PMST_DATE      /* 급여기준일 */
                    ,CAL1_YMTH      /* 계산년월1 */
                    ,CAL1_BEDE      /* 계산1시작일 */
                    ,CAL1_ENDD      /* 계산1종료일 */
                    ,CAL1_DCNT      /* 계산1일수 */
                    ,CAL2_YMTH      /* 계산년월2 */
                    ,CAL2_BEDE      /* 계산2시작일 */
                    ,CAL2_ENDD      /* 계산2종료일 */
                    ,CAL2_DCNT      /* 계산2일수 */
                    ,CAL3_YMTH      /* 계산년월3 */
                    ,CAL3_BEDE      /* 계산3시작일 */
                    ,CAL3_ENDD      /* 계산3종료일 */
                    ,CAL3_DCNT      /* 계산3일수 */
                    ,CAL4_YMTH      /* 계산년월4 */
                    ,CAL4_BEDE      /* 계산4시작일 */
                    ,CAL4_ENDD      /* 계산4종료일 */
                    ,CAL4_DCNT      /* 계산4일수 */
                    ,DAVR_WAGE      /* 일평균임금 */
                    ,MAVR_WAGE      /* 월평균임금 */
                    ,AVER_WAGE      /* 평균임금 */
                    ,CWRK_YCNT      /* 근속년수 */
                    ,CWRK_MCNT      /* 근속월수 */
                    ,EXCP_MCNT      /* 제외월수 */
                    ,REYS_YCNT      /* 퇴직근속년수 */
                    ,REYS_MCNT      /* 퇴직근속월수 */
                    ,REYS_DCNT      /* 퇴직근속일수 */
                    ,PAYX_RATE      /* 지급율 */
                    ,RETI_WAGE      /* 퇴직급여 */
                    ,VORN_ALLO      /* 명예퇴직수당 */
                    ,FINL_RPAY      /* 최종퇴직급여 */
                    ,FINT_RPAY      /* 최종비과세퇴직급여 */
                    ,FINL_PPTX      /* 최종기납부세액 */
                    ,PBUS_NUMB      /* 중간사업자번호 */
                    ,PFIR_NAME      /* 중간근무처명 */
                    ,MIDL_RPAY      /* 중간퇴직급여 */
                    ,MINT_RPAY      /* 중간비과세퇴직급여 */
                    ,MIDL_PPTX      /* 중간기납부세액 */
                    ,RETI_INTX      /* 퇴직소득세 */
                    ,RETI_STRD      /* 퇴직농특세 */
                    ,RETI_IHTX      /* 퇴직주민세 */
                    ,WORC_INTX      /* 근로정산소득세 */
                    ,WORC_STRD      /* 근로정산농특세 */
                    ,WORC_IHTX      /* 근로정산주민세 */
                    ,FPTA_ATDD      /* 외국납부세액공제액 */
                    ,DDUC_AMOT      /* 공제금액 */
                    ,NPPC_ATDD      /* 국민연금전환금공제액 */
                    ,HINC_AMOT      /* 건강보험정산금액 */
                    ,LOAN_RPAM      /* 대출상환액 */
                    ,REEP_AMOT      /* 퇴직수당금액 */
                    ,PENS_AMOT      /* 퇴직연금예치금 */
                    ,RETI_ALWN      /* 퇴직충당금 */
                    ,REMK_100X      /* 비고(500) */
                    ,RLPY_AMOT      /* 차인지급액 */
                    ,BANK_CODE      /* 은행코드 */
                    ,ACNT_NUMB      /* 계좌번호 */
                    ,DPST_NAME      /* 예금주성명 */
                    ,CLSE_YSNO      /* 퇴직처리마감여부 */
                    ,TRRT_AMOT      /* 2016-10-26 LYG 퇴직전환금 */
                    ,INST_USID      /* 입력작업자 */
                    ,INST_DATE      /* 입력일시 */
                    ,UPDT_USID      /* 수정작업자 */
                    ,UPDT_DATE      /* 수정일시 */
            )  VALUES (
                    #EMPL_NUMB#     /* EMPL_NUMB*/     /*사원번호 */
                    ,#RECE_SEQN#    /* RECE_SEQN */    /*퇴직정산회차 */
                    ,#RERE_CODE#    /* RERE_CODE*/     /*퇴직사유[RERE_CODE] */
                    ,#TAXX_GUBN#    /* TAXX_GUBN */    /*과세구분[TAXX_GUBN] */
                    ,v_ENFC_CODE    /* 사업장코드 */
                    ,v_FINL_ISDT    /* FINL_ISDT */    /*최종입사일 */
                    ,v_FINL_STDT    /* FINL_STDT*/     /*최종기산일 */
                    ,#FINL_ENDT#    /* FINL_ENDT*/     /*최종퇴사일 */
                    ,#FINL_PYDT#    /* FINL_PYDT*/     /*최종지급일 */
                    ,0              /* FIBF_EXMT*/     /*최종이전제외월수 */
                    ,0              /* FIAF_EXMT*/     /*최종이후제외월수 */
                    ,0              /* FIBF_ADMT*/     /*최종이전가산월수 */
                    ,0              /* FIAF_ADMT*/     /*최종이후가산월수 */
                    ,''             /* MIDL_ISDT*/     /*중간입사일 */
                    ,''             /* MIDL_STDT*/     /*중간기산일 */
                    ,''             /* MIDL_ENDT*/     /*중간퇴사일 */
                    ,''             /* MIDL_PYDT*/     /*중간지급일 */
                    ,0              /* MIBF_EXMT*/     /*중간이전제외월수 */
                    ,0              /* MIAF_EXMT*/     /*중간이후제외월수 */
                    ,0              /* MIBF_ADMT*/     /*중간이전가산월수 */
                    ,0              /* MIAF_ADMT*/     /*중간이후가산월수 */
                    ,#PMST_DATE#    /* PMST_DATE*/     /*급여기준일 */
                    ,v_CAL1_YMTH    /* CAL1_YMTH*/     /*계산년월1 */
                    ,v_CAL1_BEDE    /* 계산1시작일 */
                    ,v_CAL1_ENDD    /* 계산1종료일 */
                    ,v_CAL1_DCNT    /* 계산1일수 */
                    ,v_CAL2_YMTH    /* CAL2_YMTH*/     /*계산년월2 */
                    ,v_CAL2_BEDE    /* 계산2시작일 */
                    ,v_CAL2_ENDD    /* 계산2종료일 */
                    ,v_CAL2_DCNT    /* 계산2일수 */
                    ,v_CAL3_YMTH    /* CAL3_YMTH*/     /*계산년월3 */
                    ,v_CAL3_BEDE    /* 계산3시작일 */
                    ,v_CAL3_ENDD    /* 계산3종료일 */
                    ,v_CAL3_DCNT    /* 계산3일수 */
                    ,v_CAL4_YMTH    /* CAL4_YMTH*/     /*계산년월4 */
                    ,v_CAL4_BEDE    /* 계산4시작일 */
                    ,v_CAL4_ENDD    /* 계산4종료일 */
                    ,v_CAL4_DCNT    /* 계산4일수 */
                    ,0              /* DAVR_WAGE   일평균임금 */
                    ,0              /* MAVR_WAGE   월평균임금 */
                    ,0              /* AVER_WAGE   평균임금 */
                    ,v_CWRK_YCNT    /* CWRK_YCNT   근속년수 */
                    ,v_CWRK_MCNT    /* CWRK_MCNT   근속월수 */
                    ,0              /* EXCP_MCNT   제외월수 */
                    ,v_REYS_YCNT    /* 퇴직근속년수 */
                    ,v_REYS_MCNT    /* 퇴직근속월수 */
                    ,v_REYS_DCNT    /* 퇴직근속일수 */
                    ,v_PAYX_RATE    /* PAYX_RATE     지급율 */
                    ,0              /* RETI_WAGE     퇴직급여 */
                    ,0              /* VORN_ALLO     명예퇴직수당 */
                    ,0              /* FINL_RPAY     최종퇴직급여 */
                    ,0              /* FINT_RPAY     최종비과세퇴직급여 */
                    ,0              /* FINL_PPTX     최종기납부세액 */
                    ,''             /* PBUS_NUMB     중간사업자번호 */
                    ,''             /* PFIR_NAME     중간근무처명 */
                    ,0              /* MIDL_RPAY     중간퇴직급여 */
                    ,0              /* MINT_RPAY     중간비과세퇴직급여 */
                    ,0              /* MIDL_PPTX     중간기납부세액 */
                    ,0              /* RETI_INTX     퇴직소득세 */
                    ,0              /* RETI_STRD     퇴직농특세 */
                    ,0              /* RETI_IHTX     퇴직주민세 */
                    ,0              /* WORC_INTX     근로정산소득세 */
                    ,0              /* WORC_STRD     근로정산농특세 */
                    ,0              /* WORC_IHTX     근로정산주민세 */
                    ,0              /* FPTA_ATDD     외국납부세액공제액 */
                    ,0              /* DDUC_AMOT     공제금액 */
                    ,0              /* NPPC_ATDD     국민연금전환금공제액 */
                    ,0              /* HINC_AMOT     건강보험정산금액 */
                    ,0              /* LOAN_RPAM     대출상환액 */
                    ,0              /* REEP_AMOT     퇴직수당금액 */
                    ,NVL(v_PENS_AMOT,0)     /* PENS_AMOT     퇴직연금예치금 */
                    ,NVL(v_RETI_ALWN,0)     /* RETI_ALWN     퇴직충당금 */
                    ,#REMK_100X#    /* REMK_100X 비고(100) */
                    ,0              /* RLPY_AMOT 차인지급액 */
                    ,v_BANK_CODE    /* BANK_CODE 은행코드 */
                    ,v_ACNT_NUMB    /* ACNT_NUMB 계좌번호 */
                    ,v_DPST_NAME    /* DPST_NAME 예금주 */
                    ,'0'            /* CLSE_YSNO 퇴직처리마감여부 */
                    ,v_TRRT_AMOT    /* 2016-10-26 LYG 퇴직전환금 */
                    ,#UPDT_USID#
                    ,SYSDATE
                    ,#UPDT_USID#
                    ,SYSDATE
                  );

            /* 급여입력 */
             INSERT INTO PY_RTPAYX (
                   EMPL_NUMB   /* 사원번호 */
                   ,RECE_SEQN   /* 퇴직정산회차 */
                   ,EXPD_CODE   /* 수당공제코드 */
                   ,PAY1_AMOT   /* 지급1금액 */
                   ,PAY2_AMOT   /* 지급2금액 */
                   ,PAY3_AMOT   /* 지급3금액 */
                   ,PAY4_AMOT   /* 지급4금액 */
                   ,INST_USID   /* 입력작업자 */
                   ,INST_DATE   /* 입력일시 */
                   ,UPDT_USID   /* 수정작업자 */
                   ,UPDT_DATE   /* 수정일시 */
           )
           SELECT A.EMPL_NUMB
                , #RECE_SEQN# AS RECE_SEQN
                , A.EXPD_CODE
                , SUM(CASE WHEN A.PAYX_YMTH = v_CAL1_YMTH THEN ROUND(A.EXPD_AMOT * v_CAL1_DCNT / TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE(v_CAL1_YMTH || '01','YYYYMMDD')),'DD')),0) ELSE 0 END)  AS PAY1_AMOT
                , SUM(CASE WHEN A.PAYX_YMTH = v_CAL2_YMTH THEN A.EXPD_AMOT ELSE 0 END)  AS PAY2_AMOT
                , SUM(CASE WHEN A.PAYX_YMTH = v_CAL3_YMTH THEN A.EXPD_AMOT ELSE 0 END)  AS PAY3_AMOT
                , SUM(CASE WHEN A.PAYX_YMTH = v_CAL4_YMTH THEN A.EXPD_AMOT ELSE 0 END)  AS PAY4_AMOT
                , #UPDT_USID#
                , SYSDATE
                , #UPDT_USID#
                , SYSDATE
             FROM (SELECT A.EMPL_NUMB
                        , B.EXPD_CODE
                        , C.EXPD_NAME
                        , SUBSTR(A.PAYX_DATE,1,6) AS PAYX_YMTH
                        , SUM(NVL(B.EXPD_AMOT,0) + NVL(B.RTRC_AMOT,0)) AS EXPD_AMOT
                        , C.SORT_ORDR
                     FROM PY_PMMAST A
                            INNER JOIN PY_PMDETL B
                               ON A.PAYX_DATE = B.PAYX_DATE
                              AND A.WAGE_CODE = B.WAGE_CODE
                              AND A.EMPL_NUMB = B.EMPL_NUMB
                            INNER JOIN PY_ALLDED C
                               ON B.EXPD_CODE = C.EXPD_CODE
                              AND C.REUD_CODE IN ('2') /* 월간급 */
                            INNER JOIN PY_PAYCOD D
                               ON A.WAGE_CODE = D.WAGE_CODE
                  WHERE D.WAGP_CODE NOT IN ('9000','4000') /* 소급, 인상분제외 */
                    AND SUBSTR(A.PAYX_DATE,1,6) IN (v_CAL1_YMTH, v_CAL2_YMTH, v_CAL3_YMTH, v_CAL4_YMTH)
                    AND A.EMPL_NUMB = #EMPL_NUMB#
                  GROUP BY A.EMPL_NUMB, B.EXPD_CODE, C.EXPD_NAME, SUBSTR(A.PAYX_DATE,1,6),C.SORT_ORDR
            ) A
            GROUP BY A.EMPL_NUMB, A.EXPD_CODE, A.SORT_ORDR
            ORDER BY A.SORT_ORDR;

            /* 상여 */
            /* 1년간 상여수당, 성과급 */
            IF v_CAL4_YMTH IS NULL THEN
                  v_PAYS_YMTH := TO_CHAR(ADD_MONTHS(TO_DATE(v_CAL3_YMTH,'YYYYMM'), -11),'YYYYMM');
                  v_PAYE_YMTH := v_CAL3_YMTH;
                  v_PAYS_DCNT := TO_NUMBER(TO_CHAR(LAST_DAY(ADD_MONTHS(TO_DATE(v_CAL3_YMTH,'YYYYMM'), -11)),'DD'));
                  v_PAYE_DCNT := v_CAL3_DCNT;
            ELSE
                  v_PAYS_YMTH := TO_CHAR(ADD_MONTHS(TO_DATE(v_CAL4_YMTH,'YYYYMM'), -12),'YYYYMM');
                  v_PAYE_YMTH := v_CAL4_YMTH;
                  v_PAYS_DCNT := TO_NUMBER(TO_CHAR(LAST_DAY(ADD_MONTHS(TO_DATE(v_CAL4_YMTH,'YYYYMM'), -12)),'DD')) - v_CAL4_DCNT;
                  v_PAYE_DCNT := v_CAL4_DCNT;
            END IF;
/* RAISE_APPLICATION_ERROR(-20000, 'v_PAYS_YMTH='||v_PAYS_YMTH||' v_PAYE_YMTH='||v_PAYE_YMTH||' v_PAYS_DCNT='||v_PAYS_DCNT||' v_PAYE_DCNT='||v_PAYE_DCNT); */

             /* 상여 저장(소급분, 연차제외) */
             INSERT INTO PY_RTBONU (
                         EMPL_NUMB   /* 사원번호 */
                        ,RECE_SEQN   /* 퇴직정산회차 */
                        ,PAYX_DATE   /* 지급일자 */
                        ,EXPD_CODE   /* 수당공제코드 */
                        ,PAYX_DCNT   /* 지급일수 */
                        ,PAYX_AMOT   /* 지급금액 */
                        ,INST_USID   /* 입력작업자 */
                        ,INST_DATE   /* 입력일시 */
                        ,UPDT_USID   /* 수정작업자 */
                        ,UPDT_DATE   /* 수정일시 */
                   )
           SELECT A.EMPL_NUMB
                 ,#RECE_SEQN# AS RECE_SEQN
                 ,A.PAYX_DATE
                 ,A.EXPD_CODE
                 ,0 AS PAYX_DCNT
                 ,CASE WHEN SUBSTR(A.PAYX_DATE,1,6) = v_PAYS_YMTH THEN TRUNC(EXPD_AMOT * v_PAYS_DCNT / TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE(v_PAYS_YMTH,'YYYYMM')),'DD')),-1)
                       ELSE EXPD_AMOT
                       END AS PAYX_AMOT
                 ,#UPDT_USID#
                 ,SYSDATE
                 ,#UPDT_USID#
                 ,SYSDATE
            FROM (
                    SELECT A.EMPL_NUMB
                          ,B.EXPD_CODE
                          ,C.EXPD_NAME
                          ,A.PAYX_DATE
                          ,SUM(NVL(B.EXPD_AMOT,0) + NVL(B.RTRC_AMOT,0)) AS EXPD_AMOT
                          ,C.SORT_ORDR
                    FROM PY_PMMAST A
                          INNER JOIN PY_PMDETL B
                              ON A.PAYX_DATE = B.PAYX_DATE
                            AND A.WAGE_CODE = B.WAGE_CODE
                            AND A.EMPL_NUMB = B.EMPL_NUMB
                          INNER JOIN PY_ALLDED C
                              ON B.EXPD_CODE = C.EXPD_CODE
                            AND C.REUD_CODE IN ('3') /* 연간급 */
                          INNER JOIN PY_PAYCOD D
                             ON A.WAGE_CODE = D.WAGE_CODE
                   WHERE D.WAGP_CODE NOT IN ('9000','4000') /* 소급, 인상분제외 */
                     AND B.EXPD_CODE NOT IN ('A9005', 'A0070')   /* 2016-11-08 LYG 소급분 수당 제외 2017-01-16 연차제외 */
                     AND B.WAGE_YMTH BETWEEN v_PAYS_YMTH AND v_PAYE_YMTH
                     AND A.EMPL_NUMB = #EMPL_NUMB#
                   GROUP BY A.PAYX_DATE, A.EMPL_NUMB, B.EXPD_CODE, C.EXPD_NAME, C.SORT_ORDR
                    ) A
            GROUP BY A.EMPL_NUMB, A.PAYX_DATE, A.EXPD_CODE, A.EXPD_AMOT, A.SORT_ORDR
            /* 2016-10-26 LYG 금액이 0인 자료는 생성 대상에서 제외 */
            HAVING CASE WHEN SUBSTR(A.PAYX_DATE,1,6) = v_PAYS_YMTH THEN TRUNC(EXPD_AMOT * v_PAYS_DCNT / TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE(v_PAYS_YMTH,'YYYYMM')),'DD')),-1)
                        ELSE EXPD_AMOT
                        END > 0

            ORDER BY A.PAYX_DATE, A.SORT_ORDR
            ;
            
             /* 상여 저장(연차) */
             INSERT INTO PY_RTBONU (
                         EMPL_NUMB   /* 사원번호 */
                        ,RECE_SEQN   /* 퇴직정산회차 */
                        ,PAYX_DATE   /* 지급일자 */
                        ,EXPD_CODE   /* 수당공제코드 */
                        ,PAYX_DCNT   /* 지급일수 */
                        ,PAYX_AMOT   /* 지급금액 */
                        ,INST_USID   /* 입력작업자 */
                        ,INST_DATE   /* 입력일시 */
                        ,UPDT_USID   /* 수정작업자 */
                        ,UPDT_DATE   /* 수정일시 */
                   )
           SELECT A.EMPL_NUMB
                 ,#RECE_SEQN# AS RECE_SEQN
                 ,A.PAYX_DATE
                 ,A.EXPD_CODE
                 ,0 AS PAYX_DCNT
                 ,CASE WHEN SUBSTR(A.PAYX_DATE,1,6) = v_PAYS_YMTH THEN TRUNC(EXPD_AMOT * v_PAYS_DCNT / TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE(v_PAYS_YMTH,'YYYYMM')),'DD')),-1)
                       ELSE EXPD_AMOT
                       END AS PAYX_AMOT
                 ,#UPDT_USID#
                 ,SYSDATE
                 ,#UPDT_USID#
                 ,SYSDATE
            FROM (
                    SELECT A.EMPL_NUMB
                          ,B.EXPD_CODE
                          ,C.EXPD_NAME
                          ,A.PAYX_DATE
                          ,SUM(NVL(B.EXPD_AMOT,0) + NVL(B.RTRC_AMOT,0)) AS EXPD_AMOT
                          ,C.SORT_ORDR
                    FROM PY_PMMAST A
                          INNER JOIN PY_PMDETL B
                              ON A.PAYX_DATE = B.PAYX_DATE
                            AND A.WAGE_CODE = B.WAGE_CODE
                            AND A.EMPL_NUMB = B.EMPL_NUMB
                          INNER JOIN PY_ALLDED C
                              ON B.EXPD_CODE = C.EXPD_CODE
                            AND C.REUD_CODE IN ('3') /* 연간급 */
                          INNER JOIN PY_PAYCOD D
                             ON A.WAGE_CODE = D.WAGE_CODE
                   WHERE D.WAGP_CODE NOT IN ('9000','4000') /* 소급, 인상분제외 */
                     AND B.EXPD_CODE = 'A0070'   /* 2017-01-16 연차 */
                     AND A.EMPL_NUMB = #EMPL_NUMB#
                     AND (                     		
                         	   /* 12월 말일 퇴사 */
	                         ( SUBSTR(#FINL_ENDT#,5,4) = '1231' 
	                      	   AND B.WAGE_YMTH BETWEEN v_PAYS_YMTH AND v_PAYE_YMTH
	                      	   AND SUBSTR(B.WAGE_YMTH, 1, 4) = SUBSTR(#FINL_ENDT#, 1, 4) ) 
	                      		
	                      	   /* 12월 말일 퇴사가 아닌경우 */
	                      OR ( SUBSTR(#FINL_ENDT#,5,4) != '1231' 
	                      	   AND B.WAGE_YMTH BETWEEN v_PAYS_YMTH AND v_PAYE_YMTH
	                      	   AND SUBSTR(B.WAGE_YMTH, 1, 4) = TO_CHAR(TO_NUMBER(SUBSTR(#FINL_ENDT#, 1, 4)) - 1) ) 
	                   )
                   GROUP BY A.PAYX_DATE, A.EMPL_NUMB, B.EXPD_CODE, C.EXPD_NAME, C.SORT_ORDR
                    ) A
            GROUP BY A.EMPL_NUMB, A.PAYX_DATE, A.EXPD_CODE, A.EXPD_AMOT, A.SORT_ORDR
            /* 2016-10-26 LYG 금액이 0인 자료는 생성 대상에서 제외 */
            HAVING CASE WHEN SUBSTR(A.PAYX_DATE,1,6) = v_PAYS_YMTH THEN TRUNC(EXPD_AMOT * v_PAYS_DCNT / TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE(v_PAYS_YMTH,'YYYYMM')),'DD')),-1)
                        ELSE EXPD_AMOT
                        END > 0

            ORDER BY A.PAYX_DATE, A.SORT_ORDR
            ;            
            
            /* 급여합 */
            SELECT NVL(SUM(PAY1_AMOT),0) + NVL(SUM(PAY2_AMOT),0) + NVL(SUM(PAY3_AMOT),0) + NVL(SUM(PAY4_AMOT),0)
              INTO v_PAYX_TAMT
              FROM PY_RTPAYX
             WHERE EMPL_NUMB = #EMPL_NUMB#
               AND RECE_SEQN = #RECE_SEQN#;

            /* 상여합 */
            SELECT NVL(SUM(PAYX_AMOT),0)
              INTO v_BONU_TAMT
              FROM PY_RTBONU
             WHERE EMPL_NUMB = #EMPL_NUMB#
               AND RECE_SEQN = #RECE_SEQN#;

            IF 1=0 THEN
                /* 농심기획에서는 사용안함 */
                UPDATE PY_RTPCXM
                   SET DAVR_WAGE = TRUNC(v_PAYX_TAMT / (v_CAL1_DCNT+v_CAL2_DCNT+v_CAL3_DCNT+v_CAL4_DCNT) + v_BONU_TAMT / 4 / (v_CAL1_DCNT+v_CAL2_DCNT+v_CAL3_DCNT+v_CAL4_DCNT), 2)      /* DAVR_WAGE 일평균입금 */
                      ,MAVR_WAGE = TRUNC(TRUNC(v_PAYX_TAMT / (v_CAL1_DCNT+v_CAL2_DCNT+v_CAL3_DCNT+v_CAL4_DCNT) + v_BONU_TAMT / 4 / (v_CAL1_DCNT+v_CAL2_DCNT+v_CAL3_DCNT+v_CAL4_DCNT), 2) * 30, 1)    /* MAVR_WAGE 월평균입금 */
                      ,AVER_WAGE = TRUNC(TRUNC(v_PAYX_TAMT / (v_CAL1_DCNT+v_CAL2_DCNT+v_CAL3_DCNT+v_CAL4_DCNT) + v_BONU_TAMT / 4 / (v_CAL1_DCNT+v_CAL2_DCNT+v_CAL3_DCNT+v_CAL4_DCNT), 2) * 30, 1)    /* 평균입금 */
                      ,RETI_WAGE = TRUNC(TRUNC(TRUNC(v_PAYX_TAMT / (v_CAL1_DCNT+v_CAL2_DCNT+v_CAL3_DCNT+v_CAL4_DCNT) + v_BONU_TAMT / 4 / (v_CAL1_DCNT+v_CAL2_DCNT+v_CAL3_DCNT+v_CAL4_DCNT), 2) * 30, 1) * v_PAYX_RATE,-1)  /* 퇴직급여 */
                      ,FINL_RPAY = TRUNC(TRUNC(TRUNC(v_PAYX_TAMT / (v_CAL1_DCNT+v_CAL2_DCNT+v_CAL3_DCNT+v_CAL4_DCNT) + v_BONU_TAMT / 4 / (v_CAL1_DCNT+v_CAL2_DCNT+v_CAL3_DCNT+v_CAL4_DCNT), 2) * 30, 1) * v_PAYX_RATE,-1)  /* 퇴직금여합계 */
                 WHERE EMPL_NUMB = #EMPL_NUMB#
                   AND RECE_SEQN = #RECE_SEQN#;
            ELSE
                /* 농심기획 적용 */
                UPDATE PY_RTPCXM
                   SET DAVR_WAGE = TRUNC(v_PAYX_TAMT / (v_CAL1_DCNT+v_CAL2_DCNT+v_CAL3_DCNT+v_CAL4_DCNT) + v_BONU_TAMT / 4 / (v_CAL1_DCNT+v_CAL2_DCNT+v_CAL3_DCNT+v_CAL4_DCNT), 2)                          /* DAVR_WAGE 일평균입금 */
                      ,MAVR_WAGE = TRUNC(TRUNC(v_PAYX_TAMT / (v_CAL1_DCNT+v_CAL2_DCNT+v_CAL3_DCNT+v_CAL4_DCNT) + v_BONU_TAMT / 4 / (v_CAL1_DCNT+v_CAL2_DCNT+v_CAL3_DCNT+v_CAL4_DCNT), 2) * 30, 1)       /* MAVR_WAGE 월평균입금 */
                      ,AVER_WAGE = ( TRUNC(v_PAYX_TAMT / 3) + TRUNC(v_BONU_TAMT / 12) )                             /* 평균입금 */
                      ,RETI_WAGE = ROUND((TRUNC(v_PAYX_TAMT / 3) + TRUNC(v_BONU_TAMT / 12)) * PAYX_RATE, 1)     /* 퇴직급여 */
                      ,FINL_RPAY = ROUND((TRUNC(v_PAYX_TAMT / 3) + TRUNC(v_BONU_TAMT / 12)) * PAYX_RATE, 1)     /* 퇴직금여합계 */
                 WHERE EMPL_NUMB = #EMPL_NUMB#
                   AND RECE_SEQN = #RECE_SEQN#;

                /* 2016-10-26 LYG 퇴직누진율 적용 */
                IF (v_PROG_RATE > 1) THEN
                    UPDATE PY_RTPCXM
                       SET RETI_WAGE = RETI_WAGE * v_PROG_RATE     /* 퇴직급여 */
                          ,FINL_RPAY = FINL_RPAY * v_PROG_RATE     /* 퇴직금여합계 */
                     WHERE EMPL_NUMB = #EMPL_NUMB#
                       AND RECE_SEQN = #RECE_SEQN#;
                END IF;

            END IF;

            /*중간정산일경우 급여기본내역관리테이블에 퇴직기산일에 +1로 업데이트*/
            IF #RERE_CODE# = '5' THEN
                UPDATE PY_MASTPM
                   SET RECP_DATE = TO_CHAR(TO_DATE(v_FINL_STDT, 'YYYYMMDD'), 'YYYYMMDD')
                 WHERE EMPL_NUMB = #EMPL_NUMB#;
            END IF;
        END;
    ]]>
    </statement>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : 급여자료 저장
********************************************************************************/
-->
    <insert id="PAYF0030.SAVE00" parameterClass="hashmap">
    <![CDATA[
        DECLARE /* PAYF0030.SAVE00.급여자료 저장 */
            v_ROWCNT INT;

        BEGIN

            BEGIN
                SELECT CLSE_YSNO /* 확정여부 체크 */
                  INTO v_ROWCNT
                  FROM PY_RTPCXM
                 WHERE EMPL_NUMB = #EMPL_NUMB#
                   AND RECE_SEQN = #RECE_SEQN#
                ;

                EXCEPTION
                    WHEN NO_DATA_FOUND THEN v_ROWCNT := 0;
            END;

            IF v_ROWCNT > 0 THEN
                RAISE_APPLICATION_ERROR(-20000, '이미 퇴직처리가 마감되었습니다. 변경이 불가 합니다!');
            END IF;

            INSERT INTO PY_RTPAYX (        /* [퇴직급여] */
                        EMPL_NUMB          /* 사원번호 */
                      , RECE_SEQN          /* 퇴직정산회차 */
                      , EXPD_CODE          /* 수당공제코드 */
                      , PAY1_AMOT          /* 지급1금액 */
                      , PAY2_AMOT          /* 지급2금액 */
                      , PAY3_AMOT          /* 지급3금액 */
                      , PAY4_AMOT          /* 지급4금액 */
                      , INST_USID          /* 입력작업자 */
                      , INST_DATE          /* 입력일시 */
                      , UPDT_USID          /* 수정작업자 */
                      , UPDT_DATE          /* 수정일시 */
             ) VALUES (
                        #EMPL_NUMB#        /* 사원번호 */
                      , #RECE_SEQN#        /* 퇴직정산회차 */
                      , #EXPD_CODE#        /* 수당공제코드 */
                      , #PAY1_AMOT#        /* 지급1금액 */
                      , #PAY2_AMOT#        /* 지급2금액 */
                      , #PAY3_AMOT#        /* 지급3금액 */
                      , #PAY4_AMOT#        /* 지급4금액 */
                      , #UPDT_USID#        /* 입력작업자 */
                      , SYSDATE            /* 입력일시 */
                      , #UPDT_USID#        /* 수정작업자 */
                      , SYSDATE            /* 수정일시 */
                    );
        END;
    ]]>
    </insert>
<!--
/*******************************************************************************
     작 성 자 : 권미영
     작 성 일 : 2017. 2. 1
     내    용 : 급여자료 저장(POP)
********************************************************************************/
-->
    <update id="PAYF0030.POPSAVE00" parameterClass="hashmap">
    <![CDATA[
        DECLARE
            
            /* PAYF0030.POPSAVE00.급여자료 저장(POP) [퇴직급여조정] */
            
            sCNT INT := 0;
            
        BEGIN 
        
	         SELECT COUNT(1)
	           INTO sCNT
	           FROM PY_RTPAYA
	          WHERE EMPL_NUMB = #EMPL_NUMB#    /* 사원번호 */
                AND RECE_SEQN = #RECE_SEQN#    /* 퇴직정산회차 */
                AND EXPD_CODE = #EXPD_CODE#    /* 수당공제코드 */
	            ;
	
	         IF sCNT > 0 THEN	                    
             
                 UPDATE PY_RTPAYA 
                    SET PAY1_AMOT = #PAY1_AMOT#    /* 지급1금액 */
                      , PAY2_AMOT = #PAY2_AMOT#    /* 지급2금액 */
                      , PAY3_AMOT = #PAY3_AMOT#    /* 지급3금액 */
                      , PAY4_AMOT = #PAY4_AMOT#    /* 지급4금액 */
                      , UPDT_USID = #UPDT_USID#    /* 수정작업자 */
                      , UPDT_DATE = SYSDATE        /* 수정일시 */
                  WHERE EMPL_NUMB = #EMPL_NUMB#    /* 사원번호 */
                    AND RECE_SEQN = #RECE_SEQN#    /* 퇴직정산회차 */
                    AND EXPD_CODE = #EXPD_CODE#    /* 수당공제코드 */
                    ;
             
             ELSE
        
                 INSERT INTO PY_RTPAYA (
                             EMPL_NUMB          /* 사원번호 */
                           , RECE_SEQN          /* 퇴직정산회차 */
                           , EXPD_CODE          /* 수당공제코드 */
                           , PAY1_AMOT          /* 지급1금액 */
                           , PAY2_AMOT          /* 지급2금액 */
                           , PAY3_AMOT          /* 지급3금액 */
                           , PAY4_AMOT          /* 지급4금액 */
                           , INST_USID          /* 입력작업자 */
                           , INST_DATE          /* 입력일시 */
                           , UPDT_USID          /* 수정작업자 */
                           , UPDT_DATE          /* 수정일시 */
                  ) VALUES (
                             #EMPL_NUMB#        /* 사원번호 */
                           , #RECE_SEQN#        /* 퇴직정산회차 */
                           , #EXPD_CODE#        /* 수당공제코드 */
                           , #PAY1_AMOT#        /* 지급1금액 */
                           , #PAY2_AMOT#        /* 지급2금액 */
                           , #PAY3_AMOT#        /* 지급3금액 */
                           , #PAY4_AMOT#        /* 지급4금액 */
                           , #UPDT_USID#        /* 입력작업자 */
                           , SYSDATE            /* 입력일시 */
                           , #UPDT_USID#        /* 수정작업자 */
                           , SYSDATE            /* 수정일시 */
                 );
             
	         END IF;
	         
        END;
    ]]>
    </update>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : 상여자료 저장
********************************************************************************/
-->
    <insert id="PAYF0030.SAVE01" parameterClass="hashmap">
    <![CDATA[
        DECLARE /* PAYF0030.SAVE01.상여자료 저장 */
            v_ROWCNT INT;

        BEGIN

            BEGIN
                SELECT CLSE_YSNO /* 확정여부 체크 */
                  INTO v_ROWCNT
                  FROM PY_RTPCXM
                 WHERE EMPL_NUMB = #EMPL_NUMB#
                   AND RECE_SEQN = #RECE_SEQN#
                ;

                EXCEPTION
                    WHEN NO_DATA_FOUND THEN v_ROWCNT := 0;
            END;

            IF v_ROWCNT > 0 THEN
                RAISE_APPLICATION_ERROR(-20000, '이미 퇴직처리가 마감되었습니다. 변경이 불가 합니다!');
            END IF;

            INSERT INTO PY_RTBONU (        /* [퇴직상여] */
                        EMPL_NUMB          /* 사원번호 */
                      , RECE_SEQN          /* 퇴직정산회차 */
                      , PAYX_DATE          /* 지급일자 */
                      , EXPD_CODE          /* 수당공제코드 */
                      , PAYX_DCNT          /* 지급일수 */
                      , PAYX_AMOT          /* 지급금액 */
                      , INST_USID          /* 입력작업자 */
                      , INST_DATE          /* 입력일시 */
                      , UPDT_USID          /* 수정작업자 */
                      , UPDT_DATE          /* 수정일시 */
             ) VALUES (
                        #EMPL_NUMB#        /* 사원번호 */
                      , #RECE_SEQN#        /* 퇴직정산회차 */
                      , #PAYX_DATE#        /* 지급일자 */
                      , #EXPD_CODE#        /* 수당공제코드 */
                      , #PAYX_DCNT#        /* 지급일수 */
                      , #PAYX_AMOT#        /* 지급금액 */
                      , #UPDT_USID#        /* 입력작업자 */
                      , SYSDATE            /* 입력일시 */
                      , #UPDT_USID#        /* 수정작업자 */
                      , SYSDATE            /* 수정일시 */
                    );
        END;
    ]]>
    </insert>
<!--
/*******************************************************************************
     작 성 자 : 권미영
     작 성 일 : 2017. 2. 1
     내    용 : 상여자료 저장(POP)
********************************************************************************/
-->
    <insert id="PAYF0030.POPSAVE01" parameterClass="hashmap">
    <![CDATA[
        DECLARE
            
            /* PAYF0030.POPSAVE01.상여자료 저장(POP) [퇴직상여조정] */
            
            sCNT INT := 0;
            
        BEGIN 
        
	         SELECT COUNT(1)
	           INTO sCNT
	           FROM PY_RTBONA
	          WHERE EMPL_NUMB = #EMPL_NUMB#    /* 사원번호 */
                AND RECE_SEQN = #RECE_SEQN#    /* 퇴직정산회차 */
                AND PAYX_DATE = #PAYX_DATE#    /* 지급일자 */
                AND EXPD_CODE = #EXPD_CODE#    /* 수당공제코드 */
	            ;
	
	         IF sCNT > 0 THEN	
	         
	             UPDATE PY_RTBONA
	                SET PAYX_DCNT = #PAYX_DCNT#    /* 지급일수 */
	                  , PAYX_AMOT = #PAYX_AMOT#    /* 지급금액 */
	                  , UPDT_USID = #UPDT_USID#    /* 수정작업자 */
	                  , UPDT_DATE = SYSDATE        /* 수정일시 */
	              WHERE EMPL_NUMB = #EMPL_NUMB#    /* 사원번호 */
                    AND RECE_SEQN = #RECE_SEQN#    /* 퇴직정산회차 */
                    AND PAYX_DATE = #PAYX_DATE#    /* 지급일자 */
                    AND EXPD_CODE = #EXPD_CODE#    /* 수당공제코드 */
                    ;
	                
	         ELSE
	         
                 INSERT INTO PY_RTBONA ( 
                             EMPL_NUMB          /* 사원번호 */
                           , RECE_SEQN          /* 퇴직정산회차 */
                           , PAYX_DATE          /* 지급일자 */
                           , EXPD_CODE          /* 수당공제코드 */
                           , PAYX_DCNT          /* 지급일수 */
                           , PAYX_AMOT          /* 지급금액 */
                           , INST_USID          /* 입력작업자 */
                           , INST_DATE          /* 입력일시 */
                           , UPDT_USID          /* 수정작업자 */
                           , UPDT_DATE          /* 수정일시 */
                  ) VALUES (
                             #EMPL_NUMB#        /* 사원번호 */
                           , #RECE_SEQN#        /* 퇴직정산회차 */
                           , #PAYX_DATE#        /* 지급일자 */
                           , #EXPD_CODE#        /* 수당공제코드 */
                           , #PAYX_DCNT#        /* 지급일수 */
                           , #PAYX_AMOT#        /* 지급금액 */
                           , #UPDT_USID#        /* 입력작업자 */
                           , SYSDATE            /* 입력일시 */
                           , #UPDT_USID#        /* 수정작업자 */
                           , SYSDATE            /* 수정일시 */
                 );
                 
	         END IF;
	         
        END; 
    ]]>
    </insert>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : 추가지급 저장
********************************************************************************/
-->
    <insert id="PAYF0030.SAVE02" parameterClass="hashmap">
    <![CDATA[
    SET XACT_ABORT ON;
    SET NOCOUNT ON;
    SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE /* PAYF0030.SAVE02.추가지급 저장 */
             @v_ROWCNT INT
            /* 에러 검출 */
            ,@ErrorMessage   NVARCHAR(4000)
            ,@ErrorSeverity  INTEGER
            ,@ErrorState     INTEGER

        BEGIN

            /* 확정여부 체크 */
            SELECT @v_ROWCNT = CLSE_YSNO
              FROM PY_RTPCXM
             WHERE EMPL_NUMB = #EMPL_NUMB#
               AND RECE_SEQN = #RECE_SEQN#


            /* 확정되었다면 입력불가 */
            IF @v_ROWCNT > 0
            BEGIN
                SELECT @ErrorMessage = '이미 퇴직처리가 마감되었습니다. 입력이 불가 합니다!'
                      ,@ErrorSeverity = 16
                      ,@ErrorState = 1

                RAISERROR (@ErrorMessage
                    ,@ErrorSeverity
                    ,@ErrorState
                    )
            END

            INSERT INTO PY_ALDEXM (
                        EMPL_NUMB    /* 사원번호 */
                      , RECE_SEQN    /* 퇴직정산회차 */
                      , EXPD_CODE    /* 수당공제코드 */
                      , PAYX_AMOT    /* 지급금액 */
                      , REMK_100X    /* 비고100 */
                      , INST_USID    /* 입력작업자 */
                      , INST_DATE    /* 입력일시 */
                      , UPDT_USID    /* 수정작업자 */
                      , UPDT_DATE    /* 수정일시 */
               ) VALUES (
                        #EMPL_NUMB#  /* 사원번호 */
                      , #RECE_SEQN#  /* 퇴직정산회차 */
                      , #EXPD_CODE#  /* 수당공제코드 */
                      , #PAYX_AMOT#  /* 지급금액 */
                      , #REMK_100X#  /* 비고100 */
                      , #UPDT_USID#  /* 입력작업자 */
                      , SYSDATE      /* 입력일시 */
                      , #UPDT_USID#  /* 수정작업자 */
                      , SYSDATE      /* 수정일시 */
               )
        END
    ]]>
    </insert>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : 과세이연 저장
********************************************************************************/
-->
    <insert id="PAYF0030.SAVE03" parameterClass="hashmap">
    <![CDATA[
        DECLARE /* PAYF0030.SAVE03.과세이연 저장 */
            v_ROWCNT INT;

        BEGIN

            BEGIN
                SELECT CLSE_YSNO /* 확정여부 체크 */
                  INTO v_ROWCNT
                  FROM PY_RTPCXM
                 WHERE EMPL_NUMB = #EMPL_NUMB#
                   AND RECE_SEQN = #RECE_SEQN#
                ;

                EXCEPTION
                    WHEN NO_DATA_FOUND THEN
                        v_ROWCNT := 0;
            END;

            IF v_ROWCNT > 0 THEN
                RAISE_APPLICATION_ERROR(-20000, '이미 퇴직처리가 마감되었습니다. 변경이 불가 합니다!');
            END IF;

             INSERT INTO PY_RTPPXM (
                         EMPL_NUMB    /* 사원번호 */
                       , RECE_SEQN    /* 퇴직정산회차 */
                       , TAPA_SEQN    /* 과세이연일련번호 */
                       , TAPF_NAME    /* 과세이연사업자명 */
                       , TAPB_NUMB    /* 과세이연사업자번호 */
                       , TAPA_NUMB    /* 과세이연계좌번호 */
                       , TAPD_AMOT    /* 과세이연입금액 */
                       , TAPD_DATE    /* 과세이연입금일 */
                       , BANK_CODE    /* 은행코드 */
                       , REMK_100X    /* 비고100 */
                       , INST_USID    /* 입력작업자 */
                       , INST_DATE    /* 입력일시 */
                       , UPDT_USID    /* 수정작업자 */
                       , UPDT_DATE    /* 수정일시 */
                ) VALUES (
                         #EMPL_NUMB#  /* 사원번호 */
                       , #RECE_SEQN#  /* 퇴직정산회차 */
                       , (SELECT NVL(MAX(TAPA_SEQN), 0) + 1 FROM PY_RTPPXM WHERE EMPL_NUMB = #EMPL_NUMB# AND RECE_SEQN = #RECE_SEQN#)   /* 과세이연일련번호 */
                       , #TAPF_NAME#  /* 과세이연사업자명 */
                       , #TAPB_NUMB#  /* 과세이연사업자번호 */
                       , SF_ENCRYPT(#TAPA_NUMB#)  /* 과세이연계좌번호 */
                       , #TAPD_AMOT#  /* 과세이연입금액 */
                       , #TAPD_DATE#  /* 과세이연입금일 */
                       , #BANK_CODE#  /* 은행코드 */
                       , #REMK_100X#  /* 비고100 */
                       , #UPDT_USID#  /* 입력작업자 */
                       , SYSDATE      /* 입력일시 */
                       , #UPDT_USID#  /* 수정작업자 */
                       , SYSDATE      /* 수정일시 */
                );
        END;
    ]]>
    </insert>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : 퇴직금지급조서 저장
********************************************************************************/
-->
    <insert id="PAYF0030.SAVE04" parameterClass="hashmap">
    <![CDATA[
        DECLARE /* PAYF0030.SAVE04.퇴직금지급조서 저장 */
            v_ROWCNT INT;

        BEGIN

            BEGIN
                SELECT CLSE_YSNO /* 확정여부 체크 */
                  INTO v_ROWCNT
                  FROM PY_RTPCXM
                 WHERE EMPL_NUMB = #EMPL_NUMB#
                   AND RECE_SEQN = #RECE_SEQN#
                ;

                EXCEPTION
                    WHEN NO_DATA_FOUND THEN
                        v_ROWCNT := 0;
            END;

            IF v_ROWCNT > 0 THEN
                RAISE_APPLICATION_ERROR(-20000, '이미 퇴직처리가 마감되었습니다. 변경이 불가 합니다!');
            END IF;

            INSERT INTO PY_RTPCXM (        /* [퇴직급여계산] */
                        EMPL_NUMB          /* 사원번호 */
                      , RECE_SEQN          /* 퇴직정산회차 */
                      , RERE_CODE          /* 퇴직사유코드 */
                      , TAXX_GUBN          /* 과세구분 */
                      , ENFC_CODE          /* 사업장코드 */
                      , FINL_ISDT          /* 최종입사일 */
                      , FINL_STDT          /* 최종기산일 */
                      , FINL_ENDT          /* 최종퇴사일 */
                      , FINL_PYDT          /* 최종지급일 */
                      , FIBF_EXMT          /* 최종이전제외월수 */
                      , FIAF_EXMT          /* 최종이후제외월수 */
                      , FIBF_ADMT          /* 최종이전가산월수 */
                      , FIAF_ADMT          /* 최종이후가산월수 */
                      , MIDL_ISDT          /* 중간입사일 */
                      , MIDL_STDT          /* 중간기산일 */
                      , MIDL_ENDT          /* 중간퇴사일 */
                      , MIDL_PYDT          /* 중간지급일 */
                      , MIBF_EXMT          /* 중간이전제외월수 */
                      , MIAF_EXMT          /* 중간이후제외월수 */
                      , MIBF_ADMT          /* 중간이전가산월수 */
                      , MIAF_ADMT          /* 중간이후가산월수 */
                      , PMST_DATE          /* 급여기준일 */
                      , CAL1_YMTH          /* 계산1년월 */
                      , CAL1_BEDE          /* 계산1시작일 */
                      , CAL1_ENDD          /* 계산1종료일 */
                      , CAL1_DCNT          /* 계산1일수 */
                      , CAL2_YMTH          /* 계산2년월 */
                      , CAL2_BEDE          /* 계산2시작일 */
                      , CAL2_ENDD          /* 계산2종료일 */
                      , CAL2_DCNT          /* 계산2일수 */
                      , CAL3_YMTH          /* 계산3년월 */
                      , CAL3_BEDE          /* 계산3시작일 */
                      , CAL3_ENDD          /* 계산3종료일 */
                      , CAL3_DCNT          /* 계산3일수 */
                      , CAL4_YMTH          /* 계산4년월 */
                      , CAL4_BEDE          /* 계산4시작일 */
                      , CAL4_ENDD          /* 계산4종료일 */
                      , CAL4_DCNT          /* 계산4일수 */
                      , DAVR_WAGE          /* 일평균임금 */
                      , MAVR_WAGE          /* 월평균임금 */
                      , AVER_WAGE          /* 평균임금 */
                      , CWRK_YCNT          /* 근속년수 */
                      , CWRK_MCNT          /* 근속월수 */
                      , EXCP_MCNT          /* 제외월수 */
                      , REYS_YCNT          /* 퇴직근속년수 */
                      , REYS_MCNT          /* 퇴직근속월수 */
                      , REYS_DCNT          /* 퇴직근속일수 */
                      , PAYX_RATE          /* 지급율 */
                      , RETI_WAGE          /* 퇴직급여 */
                      , VORN_ALLO          /* 명예퇴직수당 */
                      , AVPY_AMOT          /* 급여평균금액 */
                      , AVBN_AMOT          /* 상여평균금액 */
                      , PYET_AMOT          /* 기타지급금액 */
                      , TRRT_AMOT          /* 퇴직전환금액 */
                      , OTDE_AMOT          /* 기타공제금액 */
                      , DBPJ_DATE          /* DB형연금가입일 */
                      , RTBM_AMOT          /* 임원퇴직급여 */
                      , RTBN_AMOT          /* 퇴직위로금금액 */
                      , FINL_RPAY          /* 최종퇴직급여 */
                      , FINT_RPAY          /* 최종비과세퇴직급여 */
                      , FINL_PPTX          /* 최종기납부세액 */
                      , PBUS_NUMB          /* 중간사업자번호 */
                      , PFIR_NAME          /* 중간근무처명 */
                      , MIDL_RPAY          /* 중간퇴직급여 */
                      , MINT_RPAY          /* 중간비과세퇴직급여 */
                      , MIDL_PPTX          /* 중간기납부세액 */
                      , RETI_INTX          /* 퇴직소득세 */
                      , RETI_STRD          /* 퇴직농특세 */
                      , RETI_IHTX          /* 퇴직주민세 */
                      , WORC_INTX          /* 근로정산소득세 */
                      , WORC_STRD          /* 근로정산농특세 */
                      , WORC_IHTX          /* 근로정산주민세 */
                      , FPTA_ATDD          /* 외국납부세액공제액 */
                      , DDUC_AMOT          /* 공제금액 */
                      , NPPC_ATDD          /* 국민연금전환금공제액 */
                      , HINC_AMOT          /* 건강보험정산금액 */
                      , LOAN_RPAM          /* 대출상환액 */
                      , REEP_AMOT          /* 퇴직수당금액 */
                      , PENS_AMOT          /* 퇴직연금예치금 */
                      , RETI_ALWN          /* 퇴직충당금 */
                      , REMK_100X          /* 비고100 */
                      , RLPY_AMOT          /* 차인지급금액 */
                      , BANK_CODE          /* 은행코드 */
                      , ACNT_NUMB          /* 계좌번호 */
                      , DPST_NAME          /* 예금주성명 */
                      , CLSE_YSNO          /* 마감여부 */
                      , INST_USID          /* 입력작업자 */
                      , INST_DATE          /* 입력일시 */
                      , UPDT_USID          /* 수정작업자 */
                      , UPDT_DATE          /* 수정일시 */
                      , APPR_SEQN          /* 전자결재일련번호 */
                      , APPR_STAT          /* 전자결재상태코드 */
                      , PRTN_AMOT          /* 급여성퇴직위로금금액 */
             ) VALUES (
                        #EMPL_NUMB#        /* 사원번호 */
                      , #RECE_SEQN#        /* 퇴직정산회차 */
                      , #RERE_CODE#        /* 퇴직사유코드 */
                      , #TAXX_GUBN#        /* 과세구분 */
                      , #ENFC_CODE#        /* 사업장코드 */
                      , #FINL_ISDT#        /* 최종입사일 */
                      , #FINL_STDT#        /* 최종기산일 */
                      , #FINL_ENDT#        /* 최종퇴사일 */
                      , #FINL_PYDT#        /* 최종지급일 */
                      , #FIBF_EXMT#        /* 최종이전제외월수 */
                      , #FIAF_EXMT#        /* 최종이후제외월수 */
                      , #FIBF_ADMT#        /* 최종이전가산월수 */
                      , #FIAF_ADMT#        /* 최종이후가산월수 */
                      , #MIDL_ISDT#        /* 중간입사일 */
                      , #MIDL_STDT#        /* 중간기산일 */
                      , #MIDL_ENDT#        /* 중간퇴사일 */
                      , #MIDL_PYDT#        /* 중간지급일 */
                      , #MIBF_EXMT#        /* 중간이전제외월수 */
                      , #MIAF_EXMT#        /* 중간이후제외월수 */
                      , #MIBF_ADMT#        /* 중간이전가산월수 */
                      , #MIAF_ADMT#        /* 중간이후가산월수 */
                      , #PMST_DATE#        /* 급여기준일 */
                      , #CAL1_YMTH#        /* 계산1년월 */
                      , #CAL1_BEDE#        /* 계산1시작일 */
                      , #CAL1_ENDD#        /* 계산1종료일 */
                      , #CAL1_DCNT#        /* 계산1일수 */
                      , #CAL2_YMTH#        /* 계산2년월 */
                      , #CAL2_BEDE#        /* 계산2시작일 */
                      , #CAL2_ENDD#        /* 계산2종료일 */
                      , #CAL2_DCNT#        /* 계산2일수 */
                      , #CAL3_YMTH#        /* 계산3년월 */
                      , #CAL3_BEDE#        /* 계산3시작일 */
                      , #CAL3_ENDD#        /* 계산3종료일 */
                      , #CAL3_DCNT#        /* 계산3일수 */
                      , #CAL4_YMTH#        /* 계산4년월 */
                      , #CAL4_BEDE#        /* 계산4시작일 */
                      , #CAL4_ENDD#        /* 계산4종료일 */
                      , #CAL4_DCNT#        /* 계산4일수 */
                      , #DAVR_WAGE#        /* 일평균임금 */
                      , #MAVR_WAGE#        /* 월평균임금 */
                      , #AVER_WAGE#        /* 평균임금 */
                      , #CWRK_YCNT#        /* 근속년수 */
                      , #CWRK_MCNT#        /* 근속월수 */
                      , #EXCP_MCNT#        /* 제외월수 */
                      , #REYS_YCNT#        /* 퇴직근속년수 */
                      , #REYS_MCNT#        /* 퇴직근속월수 */
                      , #REYS_DCNT#        /* 퇴직근속일수 */
                      , #PAYX_RATE#        /* 지급율 */
                      , #RETI_WAGE#        /* 퇴직급여 */
                      , #VORN_ALLO#        /* 명예퇴직수당 */
                      , #AVPY_AMOT#        /* 급여평균금액 */
                      , #AVBN_AMOT#        /* 상여평균금액 */
                      , #PYET_AMOT#        /* 기타지급금액 */
                      , #TRRT_AMOT#        /* 퇴직전환금액 */
                      , #OTDE_AMOT#        /* 기타공제금액 */
                      , #DBPJ_DATE#        /* DB형연금가입일 */
                      , #RTBM_AMOT#        /* 임원퇴직급여 */
                      , #RTBN_AMOT#        /* 퇴직위로금금액 */
                      , #FINL_RPAY#        /* 최종퇴직급여 */
                      , #FINT_RPAY#        /* 최종비과세퇴직급여 */
                      , #FINL_PPTX#        /* 최종기납부세액 */
                      , #PBUS_NUMB#        /* 중간사업자번호 */
                      , #PFIR_NAME#        /* 중간근무처명 */
                      , #MIDL_RPAY#        /* 중간퇴직급여 */
                      , #MINT_RPAY#        /* 중간비과세퇴직급여 */
                      , #MIDL_PPTX#        /* 중간기납부세액 */
                      , #RETI_INTX#        /* 퇴직소득세 */
                      , #RETI_STRD#        /* 퇴직농특세 */
                      , #RETI_IHTX#        /* 퇴직주민세 */
                      , #WORC_INTX#        /* 근로정산소득세 */
                      , #WORC_STRD#        /* 근로정산농특세 */
                      , #WORC_IHTX#        /* 근로정산주민세 */
                      , #FPTA_ATDD#        /* 외국납부세액공제액 */
                      , #DDUC_AMOT#        /* 공제금액 */
                      , #NPPC_ATDD#        /* 국민연금전환금공제액 */
                      , #HINC_AMOT#        /* 건강보험정산금액 */
                      , #LOAN_RPAM#        /* 대출상환액 */
                      , #REEP_AMOT#        /* 퇴직수당금액 */
                      , #PENS_AMOT#        /* 퇴직연금예치금 */
                      , #RETI_ALWN#        /* 퇴직충당금 */
                      , #REMK_100X#        /* 비고100 */
                      , #RLPY_AMOT#        /* 차인지급금액 */
                      , #BANK_CODE#        /* 은행코드 */
                      , #ACNT_NUMB#        /* 계좌번호 */
                      , #DPST_NAME#        /* 예금주성명 */
                      , #CLSE_YSNO#        /* 마감여부 */
                      , #UPDT_USID#        /* 입력작업자 */
                      , SYSDATE            /* 입력일시 */
                      , #UPDT_USID#        /* 수정작업자 */
                      , SYSDATE            /* 수정일시 */
                      , #APPR_SEQN#        /* 전자결재일련번호 */
                      , #APPR_STAT#        /* 전자결재상태코드 */
                      , #PRTN_AMOT#        /* 급여성퇴직위로금금액 */
                    );
        END;
    ]]>
    </insert>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016.11.11
     내    용 : 퇴직급여계산 사원 저장
********************************************************************************/
-->
    <insert id="PAYF0030.SAVE05" parameterClass="hashmap">
    <![CDATA[
            INSERT INTO PY_RTPCXM ( /* PAYF0030.SAVE05.퇴직급여계산 사원 저장 */ /* [퇴직급여계산] */
                        EMPL_NUMB          /* 사원번호 */
                      , RECE_SEQN          /* 퇴직정산회차 */
                      , RERE_CODE          /* 퇴직사유코드 */
                      , TAXX_GUBN          /* 과세구분 */
                      , ENFC_CODE          /* 사업장코드 */
                      , FINL_ISDT          /* 최종입사일 */
                      , FINL_STDT          /* 최종기산일 */
                      , FINL_ENDT          /* 최종퇴사일 */
                      , FINL_PYDT          /* 최종지급일 */
                      , FIBF_EXMT          /* 최종이전제외월수 */
                      , FIAF_EXMT          /* 최종이후제외월수 */
                      , FIBF_ADMT          /* 최종이전가산월수 */
                      , FIAF_ADMT          /* 최종이후가산월수 */
                      , MIDL_ISDT          /* 중간입사일 */
                      , MIDL_STDT          /* 중간기산일 */
                      , MIDL_ENDT          /* 중간퇴사일 */
                      , MIDL_PYDT          /* 중간지급일 */
                      , MIBF_EXMT          /* 중간이전제외월수 */
                      , MIAF_EXMT          /* 중간이후제외월수 */
                      , MIBF_ADMT          /* 중간이전가산월수 */
                      , MIAF_ADMT          /* 중간이후가산월수 */
                      , PMST_DATE          /* 급여기준일 */
                      , CAL1_YMTH          /* 계산1년월 */
                      , CAL1_BEDE          /* 계산1시작일 */
                      , CAL1_ENDD          /* 계산1종료일 */
                      , CAL1_DCNT          /* 계산1일수 */
                      , CAL2_YMTH          /* 계산2년월 */
                      , CAL2_BEDE          /* 계산2시작일 */
                      , CAL2_ENDD          /* 계산2종료일 */
                      , CAL2_DCNT          /* 계산2일수 */
                      , CAL3_YMTH          /* 계산3년월 */
                      , CAL3_BEDE          /* 계산3시작일 */
                      , CAL3_ENDD          /* 계산3종료일 */
                      , CAL3_DCNT          /* 계산3일수 */
                      , CAL4_YMTH          /* 계산4년월 */
                      , CAL4_BEDE          /* 계산4시작일 */
                      , CAL4_ENDD          /* 계산4종료일 */
                      , CAL4_DCNT          /* 계산4일수 */
                      , DAVR_WAGE          /* 일평균임금 */
                      , MAVR_WAGE          /* 월평균임금 */
                      , AVER_WAGE          /* 평균임금 */
                      , CWRK_YCNT          /* 근속년수 */
                      , CWRK_MCNT          /* 근속월수 */
                      , EXCP_MCNT          /* 제외월수 */
                      , REYS_YCNT          /* 퇴직근속년수 */
                      , REYS_MCNT          /* 퇴직근속월수 */
                      , REYS_DCNT          /* 퇴직근속일수 */
                      , PAYX_RATE          /* 지급율 */
                      , RETI_WAGE          /* 퇴직급여 */
                      , VORN_ALLO          /* 명예퇴직수당 */
                      , AVPY_AMOT          /* 급여평균금액 */
                      , AVBN_AMOT          /* 상여평균금액 */
                      , PYET_AMOT          /* 기타지급금액 */
                      , TRRT_AMOT          /* 퇴직전환금액 */
                      , OTDE_AMOT          /* 기타공제금액 */
                      , DBPJ_DATE          /* DB형연금가입일 */
                      , RTBM_AMOT          /* 임원퇴직급여 */
                      , RTBN_AMOT          /* 퇴직위로금금액 */
                      , FINL_RPAY          /* 최종퇴직급여 */
                      , FINT_RPAY          /* 최종비과세퇴직급여 */
                      , FINL_PPTX          /* 최종기납부세액 */
                      , PBUS_NUMB          /* 중간사업자번호 */
                      , PFIR_NAME          /* 중간근무처명 */
                      , MIDL_RPAY          /* 중간퇴직급여 */
                      , MINT_RPAY          /* 중간비과세퇴직급여 */
                      , MIDL_PPTX          /* 중간기납부세액 */
                      , RETI_INTX          /* 퇴직소득세 */
                      , RETI_STRD          /* 퇴직농특세 */
                      , RETI_IHTX          /* 퇴직주민세 */
                      , WORC_INTX          /* 근로정산소득세 */
                      , WORC_STRD          /* 근로정산농특세 */
                      , WORC_IHTX          /* 근로정산주민세 */
                      , FPTA_ATDD          /* 외국납부세액공제액 */
                      , DDUC_AMOT          /* 공제금액 */
                      , NPPC_ATDD          /* 국민연금전환금공제액 */
                      , HINC_AMOT          /* 건강보험정산금액 */
                      , LOAN_RPAM          /* 대출상환액 */
                      , REEP_AMOT          /* 퇴직수당금액 */
                      , PENS_AMOT          /* 퇴직연금예치금 */
                      , RETI_ALWN          /* 퇴직충당금 */
                      , REMK_100X          /* 비고100 */
                      , RLPY_AMOT          /* 차인지급금액 */
                      , BANK_CODE          /* 은행코드 */
                      , ACNT_NUMB          /* 계좌번호 */
                      , DPST_NAME          /* 예금주성명 */
                      , CLSE_YSNO          /* 마감여부 */
                      , INST_USID          /* 입력작업자 */
                      , INST_DATE          /* 입력일시 */
                      , UPDT_USID          /* 수정작업자 */
                      , UPDT_DATE          /* 수정일시 */
                      , APPR_SEQN          /* 전자결재일련번호 */
                      , APPR_STAT          /* 전자결재상태코드 */
                      , PRTN_AMOT          /* 급여성퇴직위로금금액 */
             ) VALUES (
                        #EMPL_NUMB#        /* 사원번호 */
                      , (SELECT NVL(MAX(RECE_SEQN), 0) + 1 AS RECE_SEQN
                          FROM PY_RTPCXM
                         WHERE EMPL_NUMB = #EMPL_NUMB#) /* 퇴직정산회차 */
                      , #RERE_CODE#        /* 퇴직사유코드 */
                      , #TAXX_GUBN#        /* 과세구분 */
                      , #ENFC_CODE#        /* 사업장코드 */
                      , #FINL_ISDT#        /* 최종입사일 */
                      , #FINL_STDT#        /* 최종기산일 */
                      , #FINL_ENDT#        /* 최종퇴사일 */
                      , #FINL_PYDT#        /* 최종지급일 */
                      , #FIBF_EXMT#        /* 최종이전제외월수 */
                      , #FIAF_EXMT#        /* 최종이후제외월수 */
                      , #FIBF_ADMT#        /* 최종이전가산월수 */
                      , #FIAF_ADMT#        /* 최종이후가산월수 */
                      , #MIDL_ISDT#        /* 중간입사일 */
                      , #MIDL_STDT#        /* 중간기산일 */
                      , #MIDL_ENDT#        /* 중간퇴사일 */
                      , #MIDL_PYDT#        /* 중간지급일 */
                      , #MIBF_EXMT#        /* 중간이전제외월수 */
                      , #MIAF_EXMT#        /* 중간이후제외월수 */
                      , #MIBF_ADMT#        /* 중간이전가산월수 */
                      , #MIAF_ADMT#        /* 중간이후가산월수 */
                      , #PMST_DATE#        /* 급여기준일 */
                      , #CAL1_YMTH#        /* 계산1년월 */
                      , #CAL1_BEDE#        /* 계산1시작일 */
                      , #CAL1_ENDD#        /* 계산1종료일 */
                      , #CAL1_DCNT#        /* 계산1일수 */
                      , #CAL2_YMTH#        /* 계산2년월 */
                      , #CAL2_BEDE#        /* 계산2시작일 */
                      , #CAL2_ENDD#        /* 계산2종료일 */
                      , #CAL2_DCNT#        /* 계산2일수 */
                      , #CAL3_YMTH#        /* 계산3년월 */
                      , #CAL3_BEDE#        /* 계산3시작일 */
                      , #CAL3_ENDD#        /* 계산3종료일 */
                      , #CAL3_DCNT#        /* 계산3일수 */
                      , #CAL4_YMTH#        /* 계산4년월 */
                      , #CAL4_BEDE#        /* 계산4시작일 */
                      , #CAL4_ENDD#        /* 계산4종료일 */
                      , #CAL4_DCNT#        /* 계산4일수 */
                      , #DAVR_WAGE#        /* 일평균임금 */
                      , #MAVR_WAGE#        /* 월평균임금 */
                      , #AVER_WAGE#        /* 평균임금 */
                      , #CWRK_YCNT#        /* 근속년수 */
                      , #CWRK_MCNT#        /* 근속월수 */
                      , #EXCP_MCNT#        /* 제외월수 */
                      , #REYS_YCNT#        /* 퇴직근속년수 */
                      , #REYS_MCNT#        /* 퇴직근속월수 */
                      , #REYS_DCNT#        /* 퇴직근속일수 */
                      , #PAYX_RATE#        /* 지급율 */
                      , #RETI_WAGE#        /* 퇴직급여 */
                      , #VORN_ALLO#        /* 명예퇴직수당 */
                      , #AVPY_AMOT#        /* 급여평균금액 */
                      , #AVBN_AMOT#        /* 상여평균금액 */
                      , #PYET_AMOT#        /* 기타지급금액 */
                      , #TRRT_AMOT#        /* 퇴직전환금액 */
                      , #OTDE_AMOT#        /* 기타공제금액 */
                      , #DBPJ_DATE#        /* DB형연금가입일 */
                      , #RTBM_AMOT#        /* 임원퇴직급여 */
                      , #RTBN_AMOT#        /* 퇴직위로금금액 */
                      , #FINL_RPAY#        /* 최종퇴직급여 */
                      , #FINT_RPAY#        /* 최종비과세퇴직급여 */
                      , #FINL_PPTX#        /* 최종기납부세액 */
                      , #PBUS_NUMB#        /* 중간사업자번호 */
                      , #PFIR_NAME#        /* 중간근무처명 */
                      , #MIDL_RPAY#        /* 중간퇴직급여 */
                      , #MINT_RPAY#        /* 중간비과세퇴직급여 */
                      , #MIDL_PPTX#        /* 중간기납부세액 */
                      , #RETI_INTX#        /* 퇴직소득세 */
                      , #RETI_STRD#        /* 퇴직농특세 */
                      , #RETI_IHTX#        /* 퇴직주민세 */
                      , #WORC_INTX#        /* 근로정산소득세 */
                      , #WORC_STRD#        /* 근로정산농특세 */
                      , #WORC_IHTX#        /* 근로정산주민세 */
                      , #FPTA_ATDD#        /* 외국납부세액공제액 */
                      , #DDUC_AMOT#        /* 공제금액 */
                      , #NPPC_ATDD#        /* 국민연금전환금공제액 */
                      , #HINC_AMOT#        /* 건강보험정산금액 */
                      , #LOAN_RPAM#        /* 대출상환액 */
                      , #REEP_AMOT#        /* 퇴직수당금액 */
                      , #PENS_AMOT#        /* 퇴직연금예치금 */
                      , #RETI_ALWN#        /* 퇴직충당금 */
                      , #REMK_100X#        /* 비고100 */
                      , #RLPY_AMOT#        /* 차인지급금액 */
                      , #BANK_CODE#        /* 은행코드 */
                      , #ACNT_NUMB#        /* 계좌번호 */
                      , #DPST_NAME#        /* 예금주성명 */
                      , #CLSE_YSNO#        /* 마감여부 */
                      , #UPDT_USID#        /* 입력작업자 */
                      , SYSDATE            /* 입력일시 */
                      , #UPDT_USID#        /* 수정작업자 */
                      , SYSDATE            /* 수정일시 */
                      , #APPR_SEQN#        /* 전자결재일련번호 */
                      , #APPR_STAT#        /* 전자결재상태코드 */
                      , #PRTN_AMOT#        /* 급여성퇴직위로금금액 */
                    )
    ]]>
    </insert>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : 급여자료 수정
********************************************************************************/
-->
    <update id="PAYF0030.UPDATE00" parameterClass="hashmap">
    <![CDATA[
        DECLARE /* PAYF0030.UPDATE00.급여자료 수정 */
            v_ROWCNT INT;

        BEGIN

            BEGIN
                SELECT CLSE_YSNO /* 확정여부 체크 */
                  INTO v_ROWCNT
                  FROM PY_RTPCXM
                 WHERE EMPL_NUMB = #EMPL_NUMB#
                   AND RECE_SEQN = #RECE_SEQN#
                ;

                EXCEPTION
                    WHEN NO_DATA_FOUND THEN
                        v_ROWCNT := 0;
            END;

            IF v_ROWCNT > 0 THEN
                RAISE_APPLICATION_ERROR(-20000, '이미 퇴직처리가 마감되었습니다. 변경이 불가 합니다!');
            END IF;

            UPDATE PY_RTPAYX /* [퇴직급여] */
               SET PAY1_AMOT = #PAY1_AMOT#            /* 지급1금액 */
                 , PAY2_AMOT = #PAY2_AMOT#            /* 지급2금액 */
                 , PAY3_AMOT = #PAY3_AMOT#            /* 지급3금액 */
                 , PAY4_AMOT = #PAY4_AMOT#            /* 지급4금액 */
                 , UPDT_USID = #UPDT_USID#            /* 수정작업자 */
                 , UPDT_DATE = SYSDATE                /* 수정일시 */
             WHERE EMPL_NUMB = #EMPL_NUMB#            /* 사원번호 */
               AND RECE_SEQN = #RECE_SEQN#            /* 퇴직정산회차 */
               AND EXPD_CODE = #EXPD_CODE#            /* 수당공제코드 */
               ;
        END;
    ]]>
    </update>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : 상여자료 수정
********************************************************************************/
-->
    <update id="PAYF0030.UPDATE01" parameterClass="hashmap">
    <![CDATA[
        DECLARE /* PAYF0030.UPDATE01.상여자료 수정 */
            v_ROWCNT INT;

        BEGIN

            BEGIN
                SELECT CLSE_YSNO /* 확정여부 체크 */
                  INTO v_ROWCNT
                  FROM PY_RTPCXM
                 WHERE EMPL_NUMB = #EMPL_NUMB#
                   AND RECE_SEQN = #RECE_SEQN#
                ;

                EXCEPTION
                    WHEN NO_DATA_FOUND THEN
                        v_ROWCNT := 0;
            END;

            IF v_ROWCNT > 0 THEN
                RAISE_APPLICATION_ERROR(-20000, '이미 퇴직처리가 마감되었습니다. 변경이 불가 합니다!');
            END IF;

            UPDATE PY_RTBONU /* [퇴직상여] */
               SET PAYX_DCNT = #PAYX_DCNT#            /* 지급일수 */
                 , PAYX_AMOT = #PAYX_AMOT#            /* 지급금액 */
                 , UPDT_USID = #UPDT_USID#            /* 수정작업자 */
                 , UPDT_DATE = SYSDATE                /* 수정일시 */
             WHERE EMPL_NUMB = #EMPL_NUMB#            /* 사원번호 */
               AND RECE_SEQN = #RECE_SEQN#            /* 퇴직정산회차 */
               AND PAYX_DATE = #PAYX_DATE#            /* 지급일자 */
               AND EXPD_CODE = #EXPD_CODE#            /* 수당공제코드 */
               ;
        END;
    ]]>
    </update>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : 추가지급 수정
********************************************************************************/
-->
    <update id="PAYF0030.UPDATE02" parameterClass="hashmap">
    <![CDATA[
    SET XACT_ABORT ON;
    SET NOCOUNT ON;
    SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE /* PAYF0030.UPDATE02.추가지급 수정 */
             @v_ROWCNT INT
            /* 에러 검출 */
            ,@ErrorMessage   NVARCHAR(4000)
            ,@ErrorSeverity  INTEGER
            ,@ErrorState     INTEGER

        BEGIN

            /* 확정여부 체크 */
            SELECT @v_ROWCNT = CLSE_YSNO
              FROM PY_RTPCXM
             WHERE EMPL_NUMB = #EMPL_NUMB#
               AND RECE_SEQN = #RECE_SEQN#


            /* 확정되었다면 변경불가 */
            IF @v_ROWCNT > 0
            BEGIN
                SELECT @ErrorMessage = '이미 퇴직처리가 마감되었습니다. 변경이 불가 합니다!'
                      ,@ErrorSeverity = 16
                      ,@ErrorState = 1

                RAISERROR (@ErrorMessage
                    ,@ErrorSeverity
                    ,@ErrorState
                    )
            END

            UPDATE PY_ALDEXM
               SET PAYX_AMOT = #PAYX_AMOT#   /* 지급금액 */
                 , REMK_100X = #REMK_100X#   /* 비고100 */
                 , UPDT_USID = #UPDT_USID#   /* 수정작업자 */
                 , UPDT_DATE = SYSDATE       /* 수정일시 */
             WHERE EMPL_NUMB = #EMPL_NUMB#   /* 사원번호 */
               AND RECE_SEQN = #RECE_SEQN#   /* 퇴직정산회차 */
               AND EXPD_CODE = #EXPD_CODE#   /* 수당공제코드 */
        END
    ]]>
    </update>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : 과세이연 수정
********************************************************************************/
-->
    <update id="PAYF0030.UPDATE03" parameterClass="hashmap">
    <![CDATA[
        DECLARE /* PAYF0030.UPDATE03.급여자료 수정 */
            v_ROWCNT INT;

        BEGIN

            BEGIN
                SELECT CLSE_YSNO /* 확정여부 체크 */
                  INTO v_ROWCNT
                  FROM PY_RTPCXM
                 WHERE EMPL_NUMB = #EMPL_NUMB#
                   AND RECE_SEQN = #RECE_SEQN#
                ;

                EXCEPTION
                    WHEN NO_DATA_FOUND THEN
                        v_ROWCNT := 0;
            END;

            IF v_ROWCNT > 0 THEN
                RAISE_APPLICATION_ERROR(-20000, '이미 퇴직처리가 마감되었습니다. 변경이 불가 합니다!');
            END IF;

            UPDATE PY_RTPPXM
               SET TAPF_NAME = #TAPF_NAME#   /* 과세이연사업자명 */
                 , TAPB_NUMB = #TAPB_NUMB#   /* 과세이연사업자번호 */
                 , TAPA_NUMB = SF_ENCRYPT(#TAPA_NUMB#)   /* 과세이연계좌번호 */
                 , TAPD_AMOT = #TAPD_AMOT#   /* 과세이연입금액 */
                 , TAPD_DATE = #TAPD_DATE#   /* 과세이연입금일 */
                 , BANK_CODE = #BANK_CODE#   /* 은행코드 */
                 , REMK_100X = #REMK_100X#   /* 비고100 */
                 , UPDT_USID = #UPDT_USID#   /* 수정작업자 */
                 , UPDT_DATE = SYSDATE       /* 수정일시 */
             WHERE EMPL_NUMB = #EMPL_NUMB#   /* 사원번호 */
               AND RECE_SEQN = #RECE_SEQN#   /* 퇴직정산회차 */
               AND TAPA_SEQN = #TAPA_SEQN#   /* 과세이연일련번호 */
               ;
        END;
    ]]>
    </update>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : 퇴직금지급조서 수정
********************************************************************************/
-->
    <update id="PAYF0030.UPDATE04" parameterClass="hashmap">
    <![CDATA[
        DECLARE /* PAYF0030.UPDATE04.퇴직금지급조서 수정 */
            v_ROWCNT INT;

        BEGIN
            BEGIN
                SELECT CLSE_YSNO /* 확정여부 체크 */
                  INTO v_ROWCNT
                  FROM PY_RTPCXM
                 WHERE EMPL_NUMB = #EMPL_NUMB#
                   AND RECE_SEQN = #RECE_SEQN#
                ;

                EXCEPTION
                    WHEN NO_DATA_FOUND THEN
                        v_ROWCNT := 0;
            END;

            IF v_ROWCNT > 0 THEN
                RAISE_APPLICATION_ERROR(-20000, '이미 퇴직처리가 마감되었습니다. 변경이 불가 합니다!');
            END IF;

            UPDATE PY_RTPCXM /* [퇴직급여계산] */
               SET RERE_CODE = #RERE_CODE#            /* 퇴직사유코드 */
                 , TAXX_GUBN = #TAXX_GUBN#            /* 과세구분 */
                 , ENFC_CODE = #ENFC_CODE#            /* 사업장코드 */
                 , FINL_ISDT = #FINL_ISDT#            /* 최종입사일 */
                 , FINL_STDT = #FINL_STDT#            /* 최종기산일 */
                 , FINL_ENDT = #FINL_ENDT#            /* 최종퇴사일 */
                 , FINL_PYDT = #FINL_PYDT#            /* 최종지급일 */
                 , FIBF_EXMT = #FIBF_EXMT#            /* 최종이전제외월수 */
                 , FIAF_EXMT = #FIAF_EXMT#            /* 최종이후제외월수 */
                 , FIBF_ADMT = #FIBF_ADMT#            /* 최종이전가산월수 */
                 , FIAF_ADMT = #FIAF_ADMT#            /* 최종이후가산월수 */
                 , MIDL_ISDT = #MIDL_ISDT#            /* 중간입사일 */
                 , MIDL_STDT = #MIDL_STDT#            /* 중간기산일 */
                 , MIDL_ENDT = #MIDL_ENDT#            /* 중간퇴사일 */
                 , MIDL_PYDT = #MIDL_PYDT#            /* 중간지급일 */
                 , MIBF_EXMT = #MIBF_EXMT#            /* 중간이전제외월수 */
                 , MIAF_EXMT = #MIAF_EXMT#            /* 중간이후제외월수 */
                 , MIBF_ADMT = #MIBF_ADMT#            /* 중간이전가산월수 */
                 , MIAF_ADMT = #MIAF_ADMT#            /* 중간이후가산월수 */
                 , PMST_DATE = #PMST_DATE#            /* 급여기준일 */
                 , CAL1_YMTH = #CAL1_YMTH#            /* 계산1년월 */
                 , CAL1_BEDE = #CAL1_BEDE#            /* 계산1시작일 */
                 , CAL1_ENDD = #CAL1_ENDD#            /* 계산1종료일 */
                 , CAL1_DCNT = #CAL1_DCNT#            /* 계산1일수 */
                 , CAL2_YMTH = #CAL2_YMTH#            /* 계산2년월 */
                 , CAL2_BEDE = #CAL2_BEDE#            /* 계산2시작일 */
                 , CAL2_ENDD = #CAL2_ENDD#            /* 계산2종료일 */
                 , CAL2_DCNT = #CAL2_DCNT#            /* 계산2일수 */
                 , CAL3_YMTH = #CAL3_YMTH#            /* 계산3년월 */
                 , CAL3_BEDE = #CAL3_BEDE#            /* 계산3시작일 */
                 , CAL3_ENDD = #CAL3_ENDD#            /* 계산3종료일 */
                 , CAL3_DCNT = #CAL3_DCNT#            /* 계산3일수 */
                 , CAL4_YMTH = #CAL4_YMTH#            /* 계산4년월 */
                 , CAL4_BEDE = #CAL4_BEDE#            /* 계산4시작일 */
                 , CAL4_ENDD = #CAL4_ENDD#            /* 계산4종료일 */
                 , CAL4_DCNT = #CAL4_DCNT#            /* 계산4일수 */
                 , DAVR_WAGE = #DAVR_WAGE#            /* 일평균임금 */
                 , MAVR_WAGE = #MAVR_WAGE#            /* 월평균임금 */
                 , AVER_WAGE = #AVER_WAGE#            /* 평균임금 */
                 , CWRK_YCNT = #CWRK_YCNT#            /* 근속년수 */
                 , CWRK_MCNT = #CWRK_MCNT#            /* 근속월수 */
                 , EXCP_MCNT = #EXCP_MCNT#            /* 제외월수 */
                 , REYS_YCNT = #REYS_YCNT#            /* 퇴직근속년수 */
                 , REYS_MCNT = #REYS_MCNT#            /* 퇴직근속월수 */
                 , REYS_DCNT = #REYS_DCNT#            /* 퇴직근속일수 */
                 , PAYX_RATE = #PAYX_RATE#            /* 지급율 */
                 , RETI_WAGE = #RETI_WAGE#            /* 퇴직급여 */
                 , VORN_ALLO = #VORN_ALLO#            /* 명예퇴직수당 */
                 , AVPY_AMOT = #AVPY_AMOT#            /* 급여평균금액 */
                 , AVBN_AMOT = #AVBN_AMOT#            /* 상여평균금액 */
                 , PYET_AMOT = #PYET_AMOT#            /* 기타지급금액 */
                 , TRRT_AMOT = #TRRT_AMOT#            /* 퇴직전환금액 */
                 , OTDE_AMOT = #OTDE_AMOT#            /* 기타공제금액 */
                 , DBPJ_DATE = #DBPJ_DATE#            /* DB형연금가입일 */
                 , RTBM_AMOT = #RTBM_AMOT#            /* 임원퇴직급여 */
                 , RTBN_AMOT = #RTBN_AMOT#            /* 퇴직위로금금액 */
                 , FINL_RPAY = #FINL_RPAY#            /* 최종퇴직급여 */
                 , FINT_RPAY = #FINT_RPAY#            /* 최종비과세퇴직급여 */
                 , FINL_PPTX = #FINL_PPTX#            /* 최종기납부세액 */
                 , PBUS_NUMB = #PBUS_NUMB#            /* 중간사업자번호 */
                 , PFIR_NAME = #PFIR_NAME#            /* 중간근무처명 */
                 , MIDL_RPAY = #MIDL_RPAY#            /* 중간퇴직급여 */
                 , MINT_RPAY = #MINT_RPAY#            /* 중간비과세퇴직급여 */
                 , MIDL_PPTX = #MIDL_PPTX#            /* 중간기납부세액 */
                 , RETI_INTX = #RETI_INTX#            /* 퇴직소득세 */
                 , RETI_STRD = #RETI_STRD#            /* 퇴직농특세 */
                 , RETI_IHTX = #RETI_IHTX#            /* 퇴직주민세 */
                 , WORC_INTX = #WORC_INTX#            /* 근로정산소득세 */
                 , WORC_STRD = #WORC_STRD#            /* 근로정산농특세 */
                 , WORC_IHTX = #WORC_IHTX#            /* 근로정산주민세 */
                 , FPTA_ATDD = #FPTA_ATDD#            /* 외국납부세액공제액 */
                 , DDUC_AMOT = #DDUC_AMOT#            /* 공제금액 */
                 , NPPC_ATDD = #NPPC_ATDD#            /* 국민연금전환금공제액 */
                 , HINC_AMOT = #HINC_AMOT#            /* 건강보험정산금액 */
                 , LOAN_RPAM = #LOAN_RPAM#            /* 대출상환액 */
                 , REEP_AMOT = #REEP_AMOT#            /* 퇴직수당금액 */
                 , PENS_AMOT = #PENS_AMOT#            /* 퇴직연금예치금 */
                 , RETI_ALWN = #RETI_ALWN#            /* 퇴직충당금 */
                 , REMK_100X = #REMK_100X#            /* 비고100 */
                 , RLPY_AMOT = #RLPY_AMOT#            /* 차인지급금액 */
                 , BANK_CODE = #BANK_CODE#            /* 은행코드 */
                 , ACNT_NUMB = #ACNT_NUMB#            /* 계좌번호 */
                 , DPST_NAME = #DPST_NAME#            /* 예금주성명 */
                 , CLSE_YSNO = #CLSE_YSNO#            /* 마감여부 */
                 , UPDT_USID = #UPDT_USID#            /* 수정작업자 */
                 , UPDT_DATE = SYSDATE                /* 수정일시 */
                 , APPR_SEQN = #APPR_SEQN#            /* 전자결재일련번호 */
                 , APPR_STAT = #APPR_STAT#            /* 전자결재상태코드 */
                 , PRTN_AMOT = #PRTN_AMOT#            /* 급여성퇴직위로금금액 */
             WHERE EMPL_NUMB = #EMPL_NUMB#            /* 사원번호 */
               AND RECE_SEQN = #RECE_SEQN#            /* 퇴직정산회차 */
               ;
        END;
    ]]>
    </update>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : 급여자료 삭제
********************************************************************************/
-->
    <delete id="PAYF0030.DELETE00" parameterClass="hashmap">
    <![CDATA[
        DECLARE /* PAYF0030.DELETE00.급여자료 삭제 */
            v_ROWCNT INT;

        BEGIN

            BEGIN
                SELECT CLSE_YSNO /* 확정여부 체크 */
                  INTO v_ROWCNT
                  FROM PY_RTPCXM
                 WHERE EMPL_NUMB = #EMPL_NUMB#
                   AND RECE_SEQN = #RECE_SEQN#
                ;

                EXCEPTION
                    WHEN NO_DATA_FOUND THEN
                        v_ROWCNT := 0;
            END;

            IF v_ROWCNT > 0 THEN
                RAISE_APPLICATION_ERROR(-20000, '이미 퇴직처리가 마감되었습니다. 변경이 불가 합니다!');
            END IF;

            DELETE FROM PY_RTPAYX /* [퇴직급여] */
             WHERE EMPL_NUMB = #EMPL_NUMB#      /* 사원번호 */
               AND RECE_SEQN = #RECE_SEQN#      /* 퇴직정산회차 */
               AND EXPD_CODE = #EXPD_CODE#      /* 수당공제코드 */
               ;
        END;
    ]]>
    </delete>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : 급여자료 삭제(POP)
********************************************************************************/
-->
    <delete id="PAYF0030.POPDELETE00" parameterClass="hashmap">
    <![CDATA[
        DELETE FROM PY_RTPAYA /* PAYF0030.POPDELETE00.급여자료 삭제(POP) [퇴직급여조정] - 안씀 제거 */
         WHERE EMPL_NUMB = #EMPL_NUMB#      /* 사원번호 */
           AND RECE_SEQN = #RECE_SEQN#      /* 퇴직정산회차 */
    ]]>
    </delete>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : 상여자료 삭제
********************************************************************************/
-->
    <delete id="PAYF0030.DELETE01" parameterClass="hashmap">
    <![CDATA[
        DECLARE /* PAYF0030.DELETE01.상여자료 삭제 */
            v_ROWCNT INT;

        BEGIN

            BEGIN
                SELECT CLSE_YSNO /* 확정여부 체크 */
                  INTO v_ROWCNT
                  FROM PY_RTPCXM
                 WHERE EMPL_NUMB = #EMPL_NUMB#
                   AND RECE_SEQN = #RECE_SEQN#
                ;

                EXCEPTION
                    WHEN NO_DATA_FOUND THEN
                        v_ROWCNT := 0;
            END;

            IF v_ROWCNT > 0 THEN
                RAISE_APPLICATION_ERROR(-20000, '이미 퇴직처리가 마감되었습니다. 변경이 불가 합니다!');
            END IF;

            DELETE FROM PY_RTBONU /* [퇴직상여] */
             WHERE EMPL_NUMB = #EMPL_NUMB#      /* 사원번호 */
               AND RECE_SEQN = #RECE_SEQN#      /* 퇴직정산회차 */
               AND PAYX_DATE = #PAYX_DATE#      /* 지급일자 */
               AND EXPD_CODE = #EXPD_CODE#      /* 수당공제코드 */
               ;
        END;
    ]]>
    </delete>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : 상여자료 삭제(POP)
********************************************************************************/
-->
    <delete id="PAYF0030.POPDELETE01" parameterClass="hashmap">
    <![CDATA[
        BEGIN
        
          DELETE FROM PY_RTBONA /* PAYF0030.POPDELETE01.상여자료 삭제(POP) [퇴직상여조정] */
                WHERE EMPL_NUMB = #EMPL_NUMB#   /* 사원번호 */
                  AND RECE_SEQN = #RECE_SEQN#   /* 퇴직정산회차 */
                  AND PAYX_DATE = #PAYX_DATE#   /* 지급일 */
                  AND EXPD_CODE = #EXPD_CODE#   /* 수당공제코드*/
                  ;
          
          DELETE FROM PY_RTBONU /* PAYF0030.POPDELETE01.상여자료 삭제(POP) [퇴직상여] */ 
                WHERE EMPL_NUMB = #EMPL_NUMB#   /* 사원번호 */ 
                  AND RECE_SEQN = #RECE_SEQN#   /* 퇴직정산회차 */ 
                  AND PAYX_DATE = #PAYX_DATE#   /* 지급일 */
                  AND EXPD_CODE = #EXPD_CODE#   /* 수당공제코드*/
                  ;
        END;
    ]]>
    </delete>
    
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : 지급공제 삭제
********************************************************************************/
-->
    <delete id="PAYF0030.DELETE02" parameterClass="hashmap">
    <![CDATA[
        DECLARE /* PAYF0030.DELETE02.지급공제 삭제 */
            v_ROWCNT INT;

        BEGIN
            BEGIN
                SELECT CLSE_YSNO
                  INTO v_ROWCNT
                  FROM PY_RTPCXM
                 WHERE EMPL_NUMB = #EMPL_NUMB#
                   AND RECE_SEQN = #RECE_SEQN#
           ;

            EXCEPTION
                WHEN NO_DATA_FOUND THEN v_ROWCNT:=0;
            END;

            /* 확정되었다면 삭제불가 */
            IF v_ROWCNT > 0 THEN
              RAISE_APPLICATION_ERROR(-20000,'이미 퇴직처리가 마감되었습니다. 삭제가 불가 합니다!');
            END IF;

            DELETE FROM PY_ALDEXM
             WHERE EMPL_NUMB = #EMPL_NUMB#   /* 사원번호 */
               AND RECE_SEQN = #RECE_SEQN#   /* 퇴직정산회차 */
               AND EXPD_CODE = #EXPD_CODE#   /* 수당공제코드 */
             ;
        END;
    ]]>
    </delete>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : 과세이연 삭제
********************************************************************************/
-->
    <delete id="PAYF0030.DELETE03" parameterClass="hashmap">
    <![CDATA[
        DECLARE /* PAYF0030.DELETE03.과세이연 삭제 */
            v_ROWCNT INT;

        BEGIN

            BEGIN
                SELECT CLSE_YSNO /* 확정여부 체크 */
                  INTO v_ROWCNT
                  FROM PY_RTPCXM
                 WHERE EMPL_NUMB = #EMPL_NUMB#
                   AND RECE_SEQN = #RECE_SEQN#
                ;

                EXCEPTION
                    WHEN NO_DATA_FOUND THEN
                        v_ROWCNT := 0;
            END;

            IF v_ROWCNT > 0 THEN
                RAISE_APPLICATION_ERROR(-20000, '이미 퇴직처리가 마감되었습니다. 변경이 불가 합니다!');
            END IF;

            DELETE FROM PY_RTPPXM
             WHERE EMPL_NUMB = #EMPL_NUMB#   /* 사원번호 */
               AND RECE_SEQN = #RECE_SEQN#   /* 퇴직정산회차 */
               AND TAPA_SEQN = #TAPA_SEQN#   /* 과세이연일련번호 */
               ;
        END;
    ]]>
    </delete>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : 퇴직금지급조서 삭제
********************************************************************************/
-->
    <delete id="PAYF0030.DELETE04" parameterClass="hashmap">
    <![CDATA[
        DECLARE /* PAYF0030.DELETE04.퇴직금지급조서 삭제 */
            v_ROWCNT INT;

        BEGIN
            BEGIN
                SELECT CLSE_YSNO
                  INTO v_ROWCNT
                  FROM PY_RTPCXM
                 WHERE EMPL_NUMB = #EMPL_NUMB#
                   AND RECE_SEQN = #RECE_SEQN#
           ;

            EXCEPTION
                WHEN NO_DATA_FOUND THEN v_ROWCNT:=0;
            END;

            /* 확정되었다면 삭제불가 */
            IF v_ROWCNT > 0 THEN
              RAISE_APPLICATION_ERROR(-20000,'이미 퇴직처리가 마감되었습니다. 삭제가 불가 합니다!');
            END IF;

            DELETE FROM PY_RTPCXM
             WHERE EMPL_NUMB = #EMPL_NUMB#   /* 사원번호 */
               AND RECE_SEQN = #RECE_SEQN#   /* 퇴직정산회차 */
             ;
        END;
    ]]>
    </delete>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : 추가지급공제 삭제
********************************************************************************/
-->
    <delete id="PAYF0030.DELETE17" parameterClass="hashmap">
    <![CDATA[
        DECLARE /* PAYF0030.DELETE17.추가지급공제 삭제 */
            v_ROWCNT INT;

        BEGIN
            BEGIN
                SELECT CLSE_YSNO
                  INTO v_ROWCNT
                  FROM PY_RTPCXM
                 WHERE EMPL_NUMB = #EMPL_NUMB#
                   AND RECE_SEQN = #RECE_SEQN#
           ;

            EXCEPTION
                WHEN NO_DATA_FOUND THEN v_ROWCNT:=0;
            END;

            /* 확정되었다면 삭제불가 */
            IF v_ROWCNT > 0 THEN
              RAISE_APPLICATION_ERROR(-20000,'이미 퇴직처리가 마감되었습니다. 삭제가 불가 합니다!');
            END IF;

            DELETE FROM PY_ALDEXM
                 WHERE EMPL_NUMB = #EMPL_NUMB#
                   AND RECE_SEQN = #RECE_SEQN#
             ;
        END;
    ]]>
    </delete>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : 급여 삭제
********************************************************************************/
-->
    <delete id="PAYF0030.DELETE18" parameterClass="hashmap">
    <![CDATA[
        DECLARE /* PAYF0030.DELETE18.급여 삭제 */
            v_ROWCNT INT;

        BEGIN
            BEGIN
                SELECT CLSE_YSNO
                  INTO v_ROWCNT
                  FROM PY_RTPCXM
                 WHERE EMPL_NUMB = #EMPL_NUMB#
                   AND RECE_SEQN = #RECE_SEQN#
           ;

            EXCEPTION
                WHEN NO_DATA_FOUND THEN v_ROWCNT:=0;
            END;

            /* 확정되었다면 삭제불가 */
            IF v_ROWCNT > 0 THEN
              RAISE_APPLICATION_ERROR(-20000,'이미 퇴직처리가 마감되었습니다. 삭제가 불가 합니다!');
            END IF;

            DELETE FROM PY_RTPAYX
                 WHERE EMPL_NUMB = #EMPL_NUMB#
                   AND RECE_SEQN = #RECE_SEQN#
             ;
        END;
    ]]>
    </delete>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : 상여 삭제
********************************************************************************/
-->
    <delete id="PAYF0030.DELETE19" parameterClass="hashmap">
    <![CDATA[
        DECLARE /* PAYF0030.DELETE19.상여 삭제 */
            v_ROWCNT INT;

        BEGIN
            BEGIN
                SELECT CLSE_YSNO
                  INTO v_ROWCNT
                  FROM PY_RTPCXM
                 WHERE EMPL_NUMB = #EMPL_NUMB#
                   AND RECE_SEQN = #RECE_SEQN#
           ;

            EXCEPTION
                WHEN NO_DATA_FOUND THEN v_ROWCNT:=0;
            END;

            /* 확정되었다면 삭제불가 */
            IF v_ROWCNT > 0 THEN
              RAISE_APPLICATION_ERROR(-20000,'이미 퇴직처리가 마감되었습니다. 삭제가 불가 합니다!');
            END IF;

            DELETE FROM PY_RTBONU
                 WHERE EMPL_NUMB = #EMPL_NUMB#
                   AND RECE_SEQN = #RECE_SEQN#
             ;
        END;
    ]]>
    </delete>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : 과세이연계좌 삭제
********************************************************************************/
-->
    <delete id="PAYF0030.DELETE20" parameterClass="hashmap">
    <![CDATA[
        DECLARE /* PAYF0030.DELETE20.과세이연계좌 삭제 */
            v_ROWCNT INT;

        BEGIN
            BEGIN
                SELECT CLSE_YSNO
                  INTO v_ROWCNT
                  FROM PY_RTPCXM
                 WHERE EMPL_NUMB = #EMPL_NUMB#
                   AND RECE_SEQN = #RECE_SEQN#
           ;

            EXCEPTION
                WHEN NO_DATA_FOUND THEN v_ROWCNT:=0;
            END;

            /* 확정되었다면 삭제불가 */
            IF v_ROWCNT > 0 THEN
              RAISE_APPLICATION_ERROR(-20000,'이미 퇴직처리가 마감되었습니다. 삭제가 불가 합니다!');
            END IF;

            DELETE FROM PY_RTPPXM
             WHERE EMPL_NUMB = #EMPL_NUMB#
               AND RECE_SEQN = #RECE_SEQN#
             ;
        END;
    ]]>
    </delete>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : 퇴직정산 삭제
********************************************************************************/
-->
    <delete id="PAYF0030.DELETE21" parameterClass="hashmap">
    <![CDATA[
        DECLARE /* PAYF0030.DELETE21.퇴직정산 삭제 */
            v_ROWCNT INT;

        BEGIN
            BEGIN
                SELECT CLSE_YSNO
                  INTO v_ROWCNT
                  FROM PY_RTPCXM
                 WHERE EMPL_NUMB = #EMPL_NUMB#
                   AND RECE_SEQN = #RECE_SEQN#
           ;

            EXCEPTION
                WHEN NO_DATA_FOUND THEN v_ROWCNT:=0;
            END;

            /* 확정되었다면 삭제불가 */
            IF v_ROWCNT > 0 THEN
              RAISE_APPLICATION_ERROR(-20000,'이미 퇴직처리가 마감되었습니다. 삭제가 불가 합니다!');
            END IF;

            DELETE FROM PY_RTPWXM
             WHERE EMPL_NUMB = #EMPL_NUMB#
               AND RECE_SEQN = #RECE_SEQN#
             ;
        END;
    ]]>
    </delete>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : X23퇴직소득원천징수영수증
********************************************************************************/
-->
    <select id="PAYF0030.REPORT00" parameterClass="hashmap" resultClass="hashmap">
    <![CDATA[
            SELECT /* PAYF0030.REPORT00.X23퇴직소득원천징수영수증 */
                   A.EMPL_NUMB
                 , B.EMPL_NAME
                 , DBO.SF_DECRYPT(B.RERN_NUMB) AS RERN_NUMB /* 주민등록번호 */
                 , F.DTL1_ADDR + NVL(F.DTL2_ADDR,' ') AS EMPL_ADDR /* 주소 */
                 , E.RECL_CODE  /* 거주구분 */
                 , E.LFDN_CODE  /* 내외국인 */
                 , DBO.SF_GET_COMMNAME('DOMC_CODE', E.DOMC_CODE) AS DOMN_NM  /* 거주지국 */
                 , E.DOMC_CODE  /* 거주지국코드 */
                 , D.BIZR_NUMB  /* 사업자등록번호 */
                 , D.ENFC_NAME  /* 법인명 */
                 , D.RPRS_NAME  /* 대표자 */
                 , D.CORP_NUMB  /* 법인번호 */
                 , D.DTL1_ADDR + NVL(D.DTL2_ADDR,' ') AS BRCH_ADDR /* 주소 */
                 , A.RECE_SEQN  /* 회차 */
                 , A.RERE_CODE  /* 퇴직사유 */
                 , A.RSTR_DATE  /* 귀속연도 시작일 */
                 , A.REND_DATE  /* 귀속연도 종료일 */
                 , A.PFIR_NAME  /* 중간근무처명 */
                 , A.PBUS_NUMB  /* 중간사업자번호 */
                 , A.MIDL_RPAY  /* 중간퇴직급여 */
                 , A.MINT_RPAY  /* 중간비과세퇴직급여 */
                 , A.MITA_RPAY  /* 중간과세대상퇴직급여 */
                 , A.FINL_RPAY  /* 최종퇴직급여 */
                 , A.FINT_RPAY  /* 최종비과세퇴직급여 */
                 , A.FITA_RPAY  /* 최종과세대상퇴직급여 */
                 , A.TOTL_RPAY  /* 합산퇴직급여 */
                 , A.TLNT_RPAY  /* 합산비과세퇴직급여 */
                 , A.TLTA_RPAY  /* 합산과세대상퇴직급여 */
                 , A.MIDL_ISDT  /* 중간입사일 */
                 , A.MIDL_STDT  /* 중간기산일 */
                 , A.MIDL_ENDT  /* 중간퇴사일 */
                 , A.MIDL_PYDT  /* 중간지급일 */
                 , A.MICT_MONT  /* 중간근속월수 */
                 , A.MIEX_MONT  /* 중간제외월수 */
                 , A.MIAD_MONT  /* 중간가산월수 */
                 , A.MICT_YEAR  /* 중간근속연수 */
                 , A.FINL_ISDT  /* 최종입사일 */
                 , A.FINL_STDT  /* 최종기산일 */
                 , A.FINL_ENDT  /* 최종퇴사일 */
                 , A.FINL_PYDT  /* 최종지급일 */
                 , A.FICT_MONT  /* 최종근속월수 */
                 , A.FIEX_MONT  /* 최종제외월수 */
                 , A.FIAD_MONT  /* 최종근속월수 */
                 , A.FICT_YEAR  /* 최종근속연수 */
                 , A.TOTL_ISDT  /* 합산입사일 */
                 , A.TOTL_STDT  /* 합산기산일 */
                 , A.TOTL_ENDT  /* 합산퇴사일 */
                 , A.TLCT_MONT  /* 합산근속월수 */
                 , A.TLEX_MONT  /* 합산제외월수 */
                 , A.TLAD_MONT  /* 합산가산월수 */
                 , A.TLOL_MONT  /* 합산중복월수 */
                 , A.TLCT_YEAR  /* 합산근속연수 */
                 , A.BEFO_STDT  /* 이전기산일 */
                 , A.BEFO_ENDT  /* 이전퇴사일 */
                 , A.BFCT_MONT  /* 이전근속월수 */
                 , A.BFEX_MONT  /* 이전제외월수 */
                 , A.BFAD_MONT  /* 이전가산월수 */
                 , A.BFCT_YEAR  /* 이전근속연수 */
                 , A.AFTR_STDT  /* 이후기산일 */
                 , A.AFTR_ENDT  /* 이후퇴사일 */
                 , A.AFCT_MONT  /* 이후근속월수 */
                 , A.AFEX_MONT  /* 이후제외월수 */
                 , A.AFAD_MONT  /* 이후가산월수 */
                 , A.AFCT_YEAR  /* 이후근속연수 */
                 , A.AFRD_AMOT  /* 정률공제액 */
                 , A.CSYD_AMOT  /* 근속연수공제액 */
                 , A.STAN_ASST  /* 퇴직소득과세표준 */
                 , A.BFST_ASST  /* 이전과세표준 */
                 , A.BFYA_STAD  /* 이전연평균과세표준 */
                 , A.BFYA_CTAX  /* 이전연평균산출세액 */
                 , A.BEFO_CTAX  /* 이전산출세액 */
                 , A.AFST_ASST  /* 이후과세표준 */
                 , A.AFYA_STAD  /* 이후연평균과세표준 */
                 , A.AFCS_ASST  /* 이후환산과세표준 */
                 , A.AFCC_TAXX  /* 이후환산산출세액 */
                 , A.AFYA_CTAX  /* 이후연평균산출세액 */
                 , A.AFTR_CTAX  /* 이후산출세 */
                 , A.TLST_ASST  /* 합산과세표준 */
                 , A.TLYA_STAD  /* 합산연평균과세표준 */
                 , A.TLCS_ASST  /* 합산환산과세표준 */
                 , A.TLCC_TAXX  /* 합산환산산출세액 */
                 , A.TLYA_CTAX  /* 합산연평균산출세액 */
                 , A.TOTL_CTAX  /* 합산산출세액 */
                 , A.TOTL_PPTX  /* 합산기납부세액 */
                 , A.TLSR_TAMT  /* 합산신고대상세액 */
                 , A.TAPS_TAMT  /* 과세이연신고대상세액 */
                 , A.TAPF_NAME  /* 과세이연사업자명 */
                 , A.TAPB_NUMB  /* 과세이연사업자번호 */
                 , SF_DECRYPT(A.TAPA_NUMB) AS TAPA_NUMB  /* 과세이연계좌번호 */
                 , A.TAPD_DATE  /* 과세이연입금일 */
                 , A.TAPD_AMOT  /* 과세이연입금액 */
                 , A.TAPT_RPAY  /* 과세이연퇴직급여 */
                 , A.TAPT_TAMT  /* 과세이연세액 */
                 , A.SURE_ITAX  /* 신고대상소득세 */
                 , A.SURE_RTAX  /* 신고대상주민세 */
                 , A.SURE_FTAX  /* 신고대상농특세 */
                 , A.SURE_ITAX + A.SURE_RTAX + A.SURE_FTAX AS SURE_SUM
                 , A.PORE_ITAX  /* 인연퇴직소득세 */
                 , A.PORE_RTAX  /* 이연퇴직주민세 */
                 , A.PORE_FTAX  /* 이연퇴직농특세 */
                 , A.PORE_ITAX + A.PORE_RTAX + A.PORE_FTAX AS PORE_SUM
                 , A.DEDU_ITAX  /* 차감징수소득세 */
                 , A.DEDU_RTAX  /* 차감징수주민세 */
                 , A.DEDU_FTAX  /* 차감징수농특세 */
                 , A.DEDU_ITAX + A.DEDU_RTAX + A.DEDU_FTAX AS DEDU_SUM
                 , DBO.SF_GET_COMMNAME('TXOF_CODE', D.TXOF_CODE) AS TXOF_CODE  /* 세무서 */
                 , D.PRNT_OFFN  /* 출력명 */
                 , CASE WHEN #SEVR_ADDR# IS NOT NULL THEN CONVERT(NVARCHAR(100), #SEVR_ADDR#)+'/cmm/lib/imageView.do?path=/'+D.FILE_PATH+'&name=' +D.ENFC_CODE+D.STDS_DATE+'.jpg' ELSE '' END  AS 직인주소
                 , A.CALC_REIN     /* 정산퇴직소득_2016.01.01이후 */
                 , A.CWYC_DDUC     /* 근속연수공제_2016.01.1이후 */
                 , A.CONV_WAGE     /* 환산급여_2016.01.01이후 */
                 , A.COWA_DDUC     /* 환산급여공제_2016.01.01이후 */
                 , A.REIN_STAS     /* 퇴직소득과세표준_2016.01.01이후 */
                 , A.CONV_CLTX     /* 환산산출세액_2016.01.01이후 */
                 , A.CLCR_TXAM     /* 산출세액_2016.01.01이후 */
                 , A.TAXX_YEAR     /* 퇴직일이 속하는 과세연도 */
                 , A.SPUE_CLTX     /* 특례적용산출세액 */
              FROM PY_RTPWXM A
                INNER JOIN HR_MASTXM B
                   ON A.EMPL_NUMB = B.EMPL_NUMB
                LEFT JOIN DBO.SF_TM_DEPTXM(#FINL_PYDT#) C
                  ON B.DEPT_CODE = C.DEPT_CODE
                LEFT JOIN DBO.SF_TM_BRCHXM(#FINL_PYDT#) D
                  ON C.DCLR_OFFC = D.ENFC_CODE    /* 신고사업장으로 해야함 */
                 LEFT OUTER JOIN HR_MASTXD F
                   ON B.EMPL_NUMB = F.EMPL_NUMB
                INNER JOIN PY_MASTPM E
                   ON A.EMPL_NUMB = E.EMPL_NUMB
             WHERE A.EMPL_NUMB =  #EMPL_NUMB#
               AND RECE_SEQN = #RECE_SEQN#
    ]]>
    </select>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : 퇴직금계산서
********************************************************************************/
-->
    <select id="PAYF0030.REPORT01" parameterClass="hashmap" resultClass="hashmap">
    <![CDATA[
            SELECT /* PAYF0030.REPORT01.퇴직금계산서 */
                   A.EMPL_NUMB  /* 사번 */
                 , A.EMPL_NAME  /* 성명 */
                 , C.DEPT_NAME  /* 부서 */
                 , DBO.SF_GET_COMMNAME('CPOS_CODE', A.CPOS_CODE) AS CPOS_NAME   /* 직급 */
                 , DBO.SF_GET_COMMNAME('DUTY_CODE', A.DUTY_CODE) AS DUTY_NAME   /* 직무 */
                 , NVL(A.PCOP_JCDT,'') AS PCOP_JCDT /* 그룹입사일 */
                 , SUBSTRING(A.ENCO_DATE, 1, 4) + '.' + SUBSTRING(A.ENCO_DATE, 5, 2) + '.' + SUBSTRING(A.ENCO_DATE, 7, 2) AS ENCO_DATE  /* 입사일 */
                 , SUBSTRING(B.RECP_DATE, 1, 4) + '.' + SUBSTRING(B.RECP_DATE, 5, 2) + '.' + SUBSTRING(B.RECP_DATE, 7, 2) AS RECP_DATE  /* 퇴직금기산일 */
                 , A.RETR_DATE  /* 퇴사일 */
                 , CONVERT(VARCHAR(10), F.REYS_YCNT) + '년 ' + CONVERT(VARCHAR(10), F.REYS_MCNT) + '월 ' + CONVERT(VARCHAR(10), F.REYS_DCNT) + '일' AS CWRK_YMCT    /* 근속기간 */
                 , SUBSTRING(F.CAL1_YMTH, 1, 4) + '.' + SUBSTRING(F.CAL1_YMTH, 5, 2) AS CAL1_YMTH   /* 급여계산1년월 */
                 , SUBSTRING(F.CAL2_YMTH, 1, 4) + '.' + SUBSTRING(F.CAL2_YMTH, 5, 2) AS CAL2_YMTH   /* 급여계산2년월 */
                 , SUBSTRING(F.CAL3_YMTH, 1, 4) + '.' + SUBSTRING(F.CAL3_YMTH, 5, 2) AS CAL3_YMTH   /* 급여계산3년월 */
                 , SUBSTRING(F.CAL4_YMTH, 1, 4) + '.' + SUBSTRING(F.CAL4_YMTH, 5, 2) AS CAL4_YMTH   /* 급여계산4년월 */
                 , G.PAY1_AMOT  /* 급여지급1금액 */
                 , G.PAY2_AMOT  /* 급여지급2금액 */
                 , G.PAY3_AMOT  /* 급여지급3금액 */
                 , G.PAY4_AMOT  /* 급여지급4금액 */
                 , (G.PAY1_AMOT + G.PAY2_AMOT + G.PAY3_AMOT+  G.PAY4_AMOT) AS RTPY_TAMT /* 급여합계 */
                 , ROUND(NVL(H.PAYX_AMT1, 0) / 12, 0) AS PAYX_AMT1      /* 상여평균금액 /12 */
                 , H.PAYX_AMT2                              /* 년차금액 */
                 , H.PAYX_AMT3                              /* 체력단련비 */
                 , H.PAYX_AMT1 AS RTB1_TAMT                 /* 상여합계 */
                 , H.RTB2_TAMT                              /* 년차,체력단련비합계 */
                 , ROUND(H.RTB2_TAMT / 12, 1) AS RTB2_TAMT1 /* 년차,체력단련비평균 */
                 , F.AVPY_AMOT  /* 급여평균금액 */
                 , F.AVBN_AMOT  /* 상여평균금액 */
                 , F.AVER_WAGE  /* 평균임금 */
                 , F.REYS_YCNT  /* 근속년수 */
                 , F.REYS_MCNT  /* 근속월수 */
                 , F.REYS_DCNT  /* 제외월수 */
                 , F.RETI_WAGE  /* 퇴직급여 */
                 , DBO.SF_GET_BANKNAME(F.BANK_CODE) AS BANK_NAME    /* 계좌은행 */
                 , F.ACNT_NUMB  /* 계좌번호 */
                 , F.DPST_NAME  /* 수령인 */
                 , F.RLPY_AMOT  /* 실수령액 */
                 , F.RETI_INTX  /* 소득세 */
                 , F.RETI_IHTX  /* 주민세 */
                 , F.TRRT_AMOT  /* 퇴직전환금액 */
                 , F.ATPY_AMOT  /* 급여압류금액 */
                 , F.CRUN_COST  /* 신협비용 */
                 , F.HOSA_AMOT  /* 사택보조비 */
                 , F.OTDE_AMOT  /* 기타공제액 */
                 , (NVL(F.RETI_INTX, 0) + NVL(F.RETI_IHTX, 0) + NVL(F.TRRT_AMOT, 0) + NVL(F.ATPY_AMOT, 0) + NVL(F.CRUN_COST, 0) + NVL(F.HOSA_AMOT, 0) + NVL(F.OTDE_AMOT, 0)) AS RETI_TAMT /* 공제계 */
              FROM HR_MASTXM A
                LEFT OUTER JOIN PY_MASTPM B
                  ON B.EMPL_NUMB = A.EMPL_NUMB
                LEFT OUTER JOIN DBO.SF_TM_DEPTXM(#RETR_DATE#) C
                  ON A.DEPT_CODE = C.DEPT_CODE
                LEFT OUTER JOIN TM_CODEXD D
                  ON D.COMM_CODE = 'OPOS_CODE'  /* 직위 */
                 AND A.OPOS_CODE = D.COMD_CODE
                LEFT OUTER JOIN TM_CODEXD E
                  ON E.COMM_CODE = 'CPOS_CODE'  /* 직급 */
                 AND A.CPOS_CODE = E.COMD_CODE
                LEFT OUTER JOIN PY_RTPCXM F
                  ON A.EMPL_NUMB = F.EMPL_NUMB AND F.RECE_SEQN = #RECE_SEQN#
                LEFT JOIN (SELECT EMPL_NUMB
                                , RECE_SEQN
                                , SUM(PAY1_AMOT) as PAY1_AMOT
                                , SUM(PAY2_AMOT) as PAY2_AMOT
                                , SUM(PAY3_AMOT) as PAY3_AMOT
                                , SUM(PAY4_AMOT) as PAY4_AMOT
                             FROM PY_RTPAYX
                            GROUP BY EMPL_NUMB, RECE_SEQN) G
                  ON F.EMPL_NUMB = G.EMPL_NUMB AND F.RECE_SEQN = G.RECE_SEQN
                LEFT JOIN (SELECT EMPL_NUMB
                                , RECE_SEQN
                                /* , EXPD_CODE */
                                , SUM(PAYX_AMOT) AS PAYX_AMOT
                                , SUM(CASE WHEN EXPD_CODE NOT IN ('A0131','A1011','A1098') THEN PAYX_AMOT ELSE 0 END) AS PAYX_AMT1
                                , SUM(CASE WHEN EXPD_CODE IN ('A0131') THEN PAYX_AMOT ELSE 0 END) AS PAYX_AMT2
                                , SUM(CASE WHEN EXPD_CODE IN ('A1011') THEN PAYX_AMOT ELSE 0 END) AS PAYX_AMT3
                                , SUM(CASE WHEN EXPD_CODE IN ('A0131','A1011','A1098') THEN PAYX_AMOT ELSE 0 END) AS RTB2_TAMT
                             FROM PY_RTBONU
                            GROUP BY EMPL_NUMB, RECE_SEQN) H
                  ON F.EMPL_NUMB = H.EMPL_NUMB AND F.RECE_SEQN = H.RECE_SEQN
             WHERE A.EMPL_NUMB = #EMPL_NUMB#
               AND F.ENFC_CODE = #ENFC_CODE#
    ]]>
    </select>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : 퇴직금계산서_상여
********************************************************************************/
-->
    <select id="PAYF0030.REPORT02" parameterClass="hashmap" resultClass="hashmap">
    <![CDATA[

        SELECT /* PAYF0030.REPORT02.퇴직금계산서_상여 */
               SUBSTRING(A.PAYX_DATE, 1, 4) + '.' + SUBSTRING(A.PAYX_DATE, 5, 2) AS PAYX_DATE
             , SUM(PAYX_AMOT) EXPD_AMOT
          FROM PY_RTBONU A
         WHERE A.EMPL_NUMB = #EMPL_NUMB#
           AND EXPD_CODE LIKE 'A0052'
           AND A.RECE_SEQN = #RECE_SEQN#
         GROUP BY A.EMPL_NUMB, A.PAYX_DATE
        ;

    ]]>
    </select>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : 퇴직금계산서_년차
********************************************************************************/
-->
    <select id="PAYF0030.REPORT03" parameterClass="hashmap" resultClass="hashmap">
    <![CDATA[
        SELECT /* PAYF0030.REPORT03.퇴직금계산서_년차 */
               SUBSTRING(A.PAYX_DATE, 1, 4) + '.' + SUBSTRING(A.PAYX_DATE, 5, 2) AS PAYX_DATE
             , SUM(PAYX_AMOT) EXPD_AMOT
          FROM PY_RTBONU A
         WHERE A.EMPL_NUMB = #EMPL_NUMB#
           AND EXPD_CODE LIKE 'A0131'
           AND A.RECE_SEQN = #RECE_SEQN#
         GROUP BY A.EMPL_NUMB, A.PAYX_DATE
    ]]>
    </select>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : 퇴직금계산서_체력단련비
********************************************************************************/
-->
    <select id="PAYF0030.REPORT04" parameterClass="hashmap" resultClass="hashmap">
    <![CDATA[
        SELECT /* PAYF0030.REPORT04.퇴직금계산서_체력단련비 */
               SUBSTRING(A.PAYX_DATE, 1, 4) + '.' + SUBSTRING(A.PAYX_DATE, 5, 2) AS PAYX_DATE
             , SUM(PAYX_AMOT) EXPD_AMOT
          FROM PY_RTBONU A
         WHERE A.EMPL_NUMB = #EMPL_NUMB#
           AND EXPD_CODE LIKE 'A1011'
           AND A.RECE_SEQN = #RECE_SEQN#
         GROUP BY A.EMPL_NUMB, A.PAYX_DATE
    ]]>
    </select>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016. 9. 6
     내    용 : 퇴직금계산서_하계휴가비
********************************************************************************/
-->
    <select id="PAYF0030.REPORT05" parameterClass="hashmap" resultClass="hashmap">
    <![CDATA[
        SELECT /* PAYF0030.REPORT05.퇴직금계산서_하계휴가비 */
               SUBSTRING(A.PAYX_DATE, 1, 4) + '.' + SUBSTRING(A.PAYX_DATE, 5, 2) AS PAYX_DATE
             , SUM(PAYX_AMOT) EXPD_AMOT
          FROM PY_RTBONU A
         WHERE A.EMPL_NUMB = #EMPL_NUMB#
           AND EXPD_CODE LIKE 'A1098'
           AND A.RECE_SEQN = #RECE_SEQN#
         GROUP BY A.EMPL_NUMB, A.PAYX_DATE
    ]]>
    </select>

<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016.11.10
     내    용 : 전자결재일련번호 채번 반환
********************************************************************************/
-->
    <select id="PAYF0030.SEARCH99" parameterClass="hashmap" resultClass="hashmap">
        <![CDATA[
            SELECT  /* PAYF0030.SEARCH99 전자결재일련번호 채번 반환 */
                    PKG_IFGWAPPROVAL.SP_GET_APPRSEQN_NEW (#DOCU_IDXX#) AS APPR_SEQN
              FROM  DUAL
        ]]>
    </select>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016.11.10
     내    용 : 전자결재 연동자료 저장
********************************************************************************/
-->
    <insert id="PAYF0030.SAVE99" parameterClass="hashmap">
    <![CDATA[
        BEGIN

            /* PAYF0030.SAVE99 전자결재 연동자료 저장 */
            /*==================================================================
                1. 퇴직금지급결의서 결재문서번호 UPDATE
            ==================================================================*/
            PKG_PAYF0030.SP_GWAP_APPRSEQN_UPDATE (
                  #UPDT_USID#    /* 수정작업자*/
                , #EMPL_NUMB#    /* 사원번호 */
                , #RECE_SEQN#    /* 퇴직정산회차 */
                , #APPR_SEQN#    /* 전자결재일련번호 */
                , #APPR_STAT#    /* 전자결재상태코드 */
            );

            /*==================================================================
                2. 전자결재 헤더 저장
            ==================================================================*/
            PKG_IFGWAPPROVAL.SP_GWAP_SAVE (
                  #UPDT_USID#    /* 작업자ID */
                , #DOCU_IDXX#    /* 결재문서양식ID */
                , #APPR_SEQN#    /* 전자결재일련번호 */
                , #GWAP_EMPL#    /* 사원번호(결재요청자) */
                , #GWAP_SUBJ#    /* 전자결재제목 */
                , #GWAP_DEPT#    /* 부서코드(신청자) */
                );

        END;
       ]]>
    </insert>
</sqlMap>