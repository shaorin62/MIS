<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap namespace="PAYC0290">

<!--
 *   프로그램명 : 통삼임금현황 데이터 처리 SQLMAP
 *   작 성 일 : 2016.08.02
 *   작 성 자 : 고민주
 *   비   고 :
 *   Copyright (c) 2016 Inbus Co.,Ltd All Rights reserved.
 -->
	<!--
	 작 성 자 : 고민주
	 작 성 일 : 2016.08.02
	 내    용 : 급여 테이블 조회
	 파라미터 : 
	-->
	<select id="PAYC0290.SEARCH00" parameterClass="hashmap" resultClass="hashmap">
	<![CDATA[
			SELECT DISTINCT 
			       C.EXPD_CODE
				  ,G.EXPD_NAME
			      ,G.SORT_ORDR    
			  FROM PY_PMDIRY A    
			 INNER JOIN PY_PMMAST B  
			    ON A.PAYX_DATE = B.PAYX_DATE  
			   AND A.WAGE_CODE = B.WAGE_CODE  
			 INNER JOIN PY_PMDETL C  
			    ON B.PAYX_DATE = C.PAYX_DATE  
			   AND B.WAGE_CODE = C.WAGE_CODE  
			   AND B.EMPL_NUMB = C.EMPL_NUMB 
			  LEFT OUTER JOIN VI_DEPTXM D  
			    ON B.DEPT_CODE = D.DEPT_CODE
			  LEFT OUTER JOIN HR_MASTXM E
			    ON B.EMPL_NUMB = E.EMPL_NUMB  
			  LEFT OUTER JOIN PY_ALLDED G
			    ON C.EXPD_CODE = G.EXPD_CODE	  
			 WHERE A.PAYX_DATE = #PAYX_DATE#   
			   AND A.WAGE_CODE = #WAGE_CODE#
			   AND G.ODPY_YSNO = '1'
			   AND (B.CLSD_CODE <> '03' OR C.EXPD_CODE <> 'A1001')	
	]]>
	<isNotEmpty prepend="AND" property="DEPT_CODE">			  
			     D.DEPT_FCOD LIKE SF_GET_DEPTFCOD(#DEPT_CODE#) || '%'
	</isNotEmpty>	
	<isNotEmpty prepend="AND" property="EMPL_NUMB">			  
			  	 B.EMPL_NUMB = #EMPL_NUMB#
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="CLSD_CODE">			  
			     B.CLSD_CODE = #CLSD_CODE#
	</isNotEmpty>
			ORDER BY G.SORT_ORDR
	</select>
	<!--
	 작 성 자 : 고민주
	 작 성 일 : 2016.08.02
	 내    용 : 급여 테이블 조회
	 파라미터 : 
	-->
	<select id="PAYC0290.SEARCH01" parameterClass="hashmap" resultClass="hashmap" remapResults="true">
	<![CDATA[
			SELECT B.EMPL_NUMB	/*사원번호*/  
				  ,E.EMPL_NAME	/*성명*/  
				  ,SF_GET_DTGNNAME2(B.DEPT_CODE,A.PAYX_DATE) AS DTGN_NAME
				  ,SF_GET_SECTNAME2(B.DEPT_CODE,A.PAYX_DATE) AS SECT_NAME 	/*부실*/  
				  ,SF_GET_DEPTNAME2(B.DEPT_CODE,A.PAYX_DATE) AS DEPT_NAME 	/*부서*/  
				  ,F.COMD_CDNM AS CPOS_NAME										/*직급*/  
				  ,SF_GET_COMMNAME('DUTY_CODE', B.DUTY_CODE) AS DUTY_NAME	/*직무*/  
				  ,NVL(B.ODNY_WAGE,0) AS INIT_AMOT							/*통상임금*/  
				  ,SUM(C.EXPD_AMOT) AS PAYX_AMOT								/*지급액*/
				  ,NVL(B.ODNY_WAGE,0) - SUM(C.EXPD_AMOT)	AS CALC_AMOT     	/*차액*/ 
	]]>
	<iterate property="PY_ALLDED">
				,SUM(CASE WHEN C.EXPD_CODE = #PY_ALLDED[].EXPD_CODE# THEN C.INIT_AMOT ELSE 0 END) AS "$PY_ALLDED[].EXPD_CODE$"
	</iterate>
	
	<![CDATA[
			  FROM PY_PMDIRY A    
			 INNER JOIN PY_PMMAST B  
			    ON A.PAYX_DATE = B.PAYX_DATE  
			   AND A.WAGE_CODE = B.WAGE_CODE  
			 INNER JOIN PY_PMDETL C  
			    ON B.PAYX_DATE = C.PAYX_DATE  
			   AND B.WAGE_CODE = C.WAGE_CODE  
			   AND B.EMPL_NUMB = C.EMPL_NUMB 
			  LEFT OUTER JOIN VI_DEPTXM D  
			    ON B.DEPT_CODE = D.DEPT_CODE
			  LEFT OUTER JOIN HR_MASTXM E
			    ON E.EMPL_NUMB = B.EMPL_NUMB  
			  LEFT OUTER JOIN TM_CODEXD F  
			    ON F.COMM_CODE = 'CPOS_CODE'  
			      AND F.COMD_CODE = B.CPOS_CODE
			  LEFT OUTER JOIN PY_ALLDED G
			    ON C.EXPD_CODE = G.EXPD_CODE     			  
			WHERE A.PAYX_DATE = #PAYX_DATE#   
			  AND A.WAGE_CODE = #WAGE_CODE#
			  AND G.ODPY_YSNO = '1'	
			  AND (B.CLSD_CODE <> '03' OR C.EXPD_CODE <> 'A1001')
	]]>
	<isNotEmpty prepend="AND" property="DEPT_CODE">			  
			      D.DEPT_FCOD LIKE SF_GET_DEPTFCOD(#DEPT_CODE#) || '%'
	</isNotEmpty>	
	<isNotEmpty prepend="AND" property="EMPL_NUMB">			  
			  	  B.EMPL_NUMB = #EMPL_NUMB#
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="CLSD_CODE">			  
			      B.CLSD_CODE = #CLSD_CODE#
	</isNotEmpty>
			GROUP BY B.EMPL_NUMB, E.EMPL_NAME, B.DEPT_CODE, A.PAYX_DATE, F.COMD_CDNM 
		            ,B.DUTY_CODE, B.ODNY_WAGE, D.DEPT_FCOD, F.SORT_ORDR 
		            ,E.ENCO_DATE					   
			ORDER BY D.DEPT_FCOD, F.SORT_ORDR, E.ENCO_DATE 	
	</select>


</sqlMap>
