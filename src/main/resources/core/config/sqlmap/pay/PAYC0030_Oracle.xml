<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="PAYC0030">
<!--
/*******************************************************************************
     작 성 자 : 고민주
     작 성 일 : 2016.07.27
     내    용 : 급여 테이블 조회
********************************************************************************/
-->
    <select id="PAYC0030.SEARCH00" parameterClass="hashmap" resultClass="hashmap">
    <![CDATA[
           SELECT /* PAYC0030.SEARCH00.급여 테이블 조회 */
                  Z.EMPL_NUMB
                , A.EMPL_NAME
                , B.SECT_NAME
                , B.DEPT_NAME
                , C.COMD_CDNM AS CPOS_NAME
                , SF_GET_COMMNAME('DUTY_CODE', A.DUTY_CODE) AS DUTY_NAME
                , TRIM(#PAYX_DATE1#) AS PAYX_DATE1
                , TRIM(#PAYX_DATE2#) AS PAYX_DATE2
                , TRIM(#WAGE_CODE1#) AS WAGE_CODE1
                , TRIM(#WAGE_CODE2#) AS WAGE_CODE2
                , SUM(Z.CURR_AMOT_A) AS CURR_AMOT_A
                , SUM(Z.PREV_AMOT_A) AS PREV_AMOT_A
                , SUM(Z.CURR_AMOT_A) - SUM(Z.PREV_AMOT_A) AS CHAA_AMOT_A
                , SUM(Z.CURR_AMOT_D) AS CURR_AMOT_D
                , SUM(Z.PREV_AMOT_D) AS PREV_AMOT_D
                , SUM(Z.CURR_AMOT_D) - SUM(Z.PREV_AMOT_D) AS CHAA_AMOT_D
                , SUM(Z.CURR_AMOT_O) AS CURR_AMOT_O
                , SUM(Z.PREV_AMOT_O) AS PREV_AMOT_O
                , SUM(Z.CURR_AMOT_O) - SUM(Z.PREV_AMOT_O) AS CHAA_AMOT_O
            FROM (
                   SELECT B.EMPL_NUMB
                        , SUM(CASE WHEN C.EXPD_CODE LIKE 'A%' THEN C.EXPD_AMOT ELSE 0 END) AS CURR_AMOT_A
                        , SUM(CASE WHEN C.EXPD_CODE LIKE 'D%' THEN C.EXPD_AMOT ELSE 0 END) AS CURR_AMOT_D
                        , 0 AS PREV_AMOT_A
                        , 0 AS PREV_AMOT_D
                        , INCO_AMOT AS CURR_AMOT_O
                        , 0 AS PREV_AMOT_O
                    FROM PY_PMDIRY A
                   INNER JOIN PY_PMMAST B
                           ON A.PAYX_DATE = B.PAYX_DATE
                          AND A.WAGE_CODE = B.WAGE_CODE
                   INNER JOIN PY_PMDETL C
                           ON B.PAYX_DATE = C.PAYX_DATE
                          AND B.WAGE_CODE = C.WAGE_CODE
                          AND B.EMPL_NUMB = C.EMPL_NUMB
                   INNER JOIN PY_ALLDED D
                           ON C.EXPD_CODE = D.EXPD_CODE
                    LEFT OUTER JOIN ( SELECT PAYX_DATE
                                           , WAGE_CODE
                                           , EMPL_NUMB
                                           , NVL(SUM(TAP1_AMOT), 0) + NVL(SUM(TAP2_AMOT), 0) + NVL(SUM(TAP3_AMOT), 0)
                                           + NVL(SUM(NTP1_AMOT), 0) + NVL(SUM(NTP2_AMOT), 0) + NVL(SUM(NTP3_AMOT), 0) AS INCO_AMOT
                                        FROM PY_INCOME
                                       WHERE PAYX_DATE = #PAYX_DATE1#
                                         AND WAGE_CODE = #WAGE_CODE1#
    ]]>
                    <isNotEmpty prepend="AND" property="EMPL_NUMB">
                                             EMPL_NUMB = #EMPL_NUMB#
                    </isNotEmpty>
    <![CDATA[
                                       GROUP BY PAYX_DATE, WAGE_CODE,EMPL_NUMB
                                    ) E
                                 ON B.PAYX_DATE = E.PAYX_DATE
                                AND B.WAGE_CODE = E.WAGE_CODE
                                AND B.EMPL_NUMB = E.EMPL_NUMB
                   WHERE A.PAYX_DATE = #PAYX_DATE1#
                     AND A.WAGE_CODE = #WAGE_CODE1#
    ]]>
    <isNotEmpty prepend="AND" property="EMPL_NUMB">
                         B.EMPL_NUMB = #EMPL_NUMB#
    </isNotEmpty>
    <isNotEmpty prepend="AND" property="EPDD_CODE">
                         D.EPDD_CODE IN (SELECT COLUMN_VALUE FROM TABLE(SPLIT(#EPDD_CODE#, ',')))
    </isNotEmpty>
    <![CDATA[
                   GROUP BY B.EMPL_NUMB,B.CPOS_CODE, B.DUTY_CODE, B.DEPT_CODE, E.INCO_AMOT

                   UNION ALL
                   SELECT B.EMPL_NUMB
                        , 0
                        , 0
                        , SUM(CASE WHEN C.EXPD_CODE LIKE 'A%' THEN C.EXPD_AMOT ELSE 0 END) AS PREV_AMOT_A
                        , SUM(CASE WHEN C.EXPD_CODE LIKE 'D%' THEN C.EXPD_AMOT ELSE 0 END) AS PREV_AMOT_D
                        , 0 AS CURR_AMOT_O
                        , INCO_AMOT AS PREV_AMOT_O
                    FROM PY_PMDIRY A
                   INNER JOIN PY_PMMAST B
                           ON A.PAYX_DATE = B.PAYX_DATE
                          AND A.WAGE_CODE = B.WAGE_CODE
                   INNER JOIN PY_PMDETL C
                           ON B.PAYX_DATE = C.PAYX_DATE
                          AND B.WAGE_CODE = C.WAGE_CODE
                          AND B.EMPL_NUMB = C.EMPL_NUMB
                   INNER JOIN PY_ALLDED D
                           ON C.EXPD_CODE = D.EXPD_CODE
                    LEFT OUTER JOIN ( SELECT PAYX_DATE
                                           , WAGE_CODE
                                           , EMPL_NUMB
                                           , NVL(SUM(TAP1_AMOT), 0) + NVL(SUM(TAP2_AMOT), 0) + NVL(SUM(TAP3_AMOT), 0)
                                           + NVL(SUM(NTP1_AMOT), 0) + NVL(SUM(NTP2_AMOT), 0) + NVL(SUM(NTP3_AMOT), 0) AS INCO_AMOT
                                        FROM PY_INCOME
                                       WHERE PAYX_DATE = #PAYX_DATE2#
                                         AND WAGE_CODE = #WAGE_CODE1#
    ]]>
                    <isNotEmpty prepend="AND" property="EMPL_NUMB">
                                             EMPL_NUMB = #EMPL_NUMB#
                    </isNotEmpty>
    <![CDATA[
                                       GROUP BY PAYX_DATE, WAGE_CODE,EMPL_NUMB
                                    ) E
                                 ON B.PAYX_DATE = E.PAYX_DATE
                                AND B.WAGE_CODE = E.WAGE_CODE
                                AND B.EMPL_NUMB = E.EMPL_NUMB
                   WHERE A.PAYX_DATE = #PAYX_DATE2#
                     AND A.WAGE_CODE = #WAGE_CODE2#
    ]]>
    <isNotEmpty prepend="AND" property="EMPL_NUMB">
                         B.EMPL_NUMB = #EMPL_NUMB#
    </isNotEmpty>
    <isNotEmpty prepend="AND" property="EPDD_CODE">
                         D.EPDD_CODE IN (SELECT COLUMN_VALUE FROM TABLE(SPLIT(#EPDD_CODE#, ',')))
    </isNotEmpty>
    <![CDATA[
                   GROUP BY B.EMPL_NUMB,B.CPOS_CODE, B.DUTY_CODE, B.DEPT_CODE, E.INCO_AMOT
                ) Z
            LEFT OUTER JOIN TABLE(SF_HR_MASTXM(Z.EMPL_NUMB,#PAYX_DATE2#)) A
              ON Z.EMPL_NUMB = A.EMPL_NUMB
            LEFT OUTER JOIN TABLE(SF_TM_DEPTXM(#PAYX_DATE2#)) B
              ON A.DEPT_CODE = B.DEPT_CODE
            LEFT OUTER JOIN TM_CODEXD C
              ON C.COMM_CODE = 'CPOS_CODE'  /*직급*/
             AND A.CPOS_CODE = C.COMD_CODE
           GROUP BY Z.EMPL_NUMB , A.EMPL_NAME, B.SECT_NAME, B.DEPT_NAME, C.COMD_CDNM, A.DUTY_CODE, B.DEPT_FCOD, C.SORT_ORDR
    ]]>

    <isEqual property="COMX_YSNO" compareValue="1" >
    <![CDATA[
            HAVING ( NVL(SUM(Z.CURR_AMOT_A),0) - NVL(SUM(Z.PREV_AMOT_A),0) <> '0'
                    OR NVL(SUM(Z.CURR_AMOT_D),0) - NVL(SUM(Z.PREV_AMOT_D),0) <> '0')
    ]]>
    </isEqual>
    <isEqual property="COMX_YSNO" compareValue="0" >
    <![CDATA[
                HAVING ( NVL(SUM(Z.CURR_AMOT_A),0) - NVL(SUM(Z.PREV_AMOT_A),0) = '0'
                     AND NVL(SUM(Z.CURR_AMOT_D),0) - NVL(SUM(Z.PREV_AMOT_D),0) = '0')
    ]]>
    </isEqual>
                ORDER BY B.DEPT_FCOD, C.SORT_ORDR, Z.EMPL_NUMB
    </select>
<!--
/*******************************************************************************
     작 성 자 : 고민주
     작 성 일 : 2016.07.27
     내    용 : 급여변동사항 수당항목 조회
********************************************************************************/
-->
    <select id="PAYC0030.SEARCH01" parameterClass="hashmap" resultClass="hashmap" remapResults="true">
    <![CDATA[
               SELECT /* PAYC0030.SEARCH01.급여변동사항 수당항목 조회 */
                      X.EXPD_NAME
                    , SUM(CASE WHEN X.EXPD_CODE LIKE 'A%' THEN X.CURR_AMOT ELSE 0 END) AS CURR_AMOT
                    , SUM(CASE WHEN X.EXPD_CODE LIKE 'A%' THEN X.PREV_AMOT ELSE 0 END) AS PREV_AMOT
                    , SUM(CASE WHEN X.EXPD_CODE LIKE 'A%' THEN X.CURR_AMOT ELSE 0 END)
                      -SUM(CASE WHEN X.EXPD_CODE LIKE 'A%' THEN X.PREV_AMOT ELSE 0 END) AS CHAA_AMOT
               FROM (
                  SELECT B.EXPD_CODE
                        ,B.EXPD_AMOT AS CURR_AMOT
                        ,0 AS PREV_AMOT
                        ,C.SORT_ORDR
                        ,C.EXPD_NAME
                    FROM PY_PMMAST A
                    LEFT OUTER JOIN PY_PMDETL B
                      ON A.PAYX_DATE = B.PAYX_DATE
                     AND A.WAGE_CODE = B.WAGE_CODE
                     AND A.EMPL_NUMB = B.EMPL_NUMB
                     AND B.EXPD_CODE LIKE 'A%'
                   INNER JOIN PY_ALLDED C
                      ON B.EXPD_CODE = C.EXPD_CODE
    ]]>
    <isNotEmpty prepend="AND" property="EPDD_CODE">
                         C.EPDD_CODE IN (SELECT COLUMN_VALUE FROM TABLE(SPLIT(#EPDD_CODE#, ',')))
    </isNotEmpty>
    <![CDATA[
                   WHERE A.PAYX_DATE = #PAYX_DATE1#
                     AND A.WAGE_CODE = #WAGE_CODE1#
                     AND A.EMPL_NUMB = #EMPL_NUMB#
                    UNION ALL
                  SELECT B.EXPD_CODE
                        ,0           AS CURR_AMOT
                        ,B.EXPD_AMOT AS PREV_AMOT
                        ,C.SORT_ORDR
                        ,C.EXPD_NAME
                    FROM PY_PMMAST A
                    LEFT OUTER JOIN PY_PMDETL B
                      ON A.PAYX_DATE = B.PAYX_DATE
                     AND A.WAGE_CODE = B.WAGE_CODE
                     AND A.EMPL_NUMB = B.EMPL_NUMB
                     AND B.EXPD_CODE LIKE 'A%'
                   INNER JOIN PY_ALLDED C
                      ON B.EXPD_CODE = C.EXPD_CODE
    ]]>
    <isNotEmpty prepend="AND" property="EPDD_CODE">
                         C.EPDD_CODE IN (SELECT COLUMN_VALUE FROM TABLE(SPLIT(#EPDD_CODE#, ',')))
    </isNotEmpty>
    <![CDATA[
                   WHERE A.PAYX_DATE = #PAYX_DATE2#
                     AND A.WAGE_CODE = #WAGE_CODE2#
                     AND A.EMPL_NUMB = #EMPL_NUMB#
               ) X
               GROUP BY X.EXPD_NAME, X.SORT_ORDR
               ORDER BY X.SORT_ORDR
    ]]>
    </select>
<!--
/*******************************************************************************
     작 성 자 : 고민주
     작 성 일 : 2016.07.27
     내    용 : 급여변동사항 공제항목 조회
********************************************************************************/
-->
    <select id="PAYC0030.SEARCH02" parameterClass="hashmap" resultClass="hashmap" remapResults="true">
    <![CDATA[
               SELECT /* PAYC0030.SEARCH02.급여변동사항 공제항목 조회 */
                      X.EXPD_NAME
                    , SUM(CASE WHEN X.EXPD_CODE LIKE 'D%' THEN X.CURR_AMOT ELSE 0 END) AS CURR_AMOT
                    , SUM(CASE WHEN X.EXPD_CODE LIKE 'D%' THEN X.PREV_AMOT ELSE 0 END) AS PREV_AMOT
                    , SUM(CASE WHEN X.EXPD_CODE LIKE 'D%' THEN X.CURR_AMOT ELSE 0 END)
                     -SUM(CASE WHEN X.EXPD_CODE LIKE 'D%' THEN X.PREV_AMOT ELSE 0 END) AS CHAA_AMOT
               FROM (
                  SELECT B.EXPD_CODE
                        ,B.EXPD_AMOT AS CURR_AMOT
                        ,0 AS PREV_AMOT
                        ,C.SORT_ORDR
                        ,C.EXPD_NAME
                    FROM PY_PMMAST A                        /* [급여] */
                    LEFT OUTER JOIN PY_PMDETL B             /* [급여상세] */
                      ON A.PAYX_DATE = B.PAYX_DATE          /* 지급일 */
                     AND A.WAGE_CODE = B.WAGE_CODE          /* 급여코드 */
                     AND A.EMPL_NUMB = B.EMPL_NUMB
                     AND B.EXPD_CODE LIKE 'D%'
                   INNER JOIN PY_ALLDED C                   /* [수당공제코드] */
                      ON B.EXPD_CODE = C.EXPD_CODE
    ]]>
    <isNotEmpty prepend="AND" property="EPDD_CODE">
                         C.EPDD_CODE IN (SELECT COLUMN_VALUE FROM TABLE(SPLIT(#EPDD_CODE#, ',')))
    </isNotEmpty>
    <![CDATA[
                   WHERE A.PAYX_DATE = #PAYX_DATE1#
                     AND A.WAGE_CODE = #WAGE_CODE1#
                     AND A.EMPL_NUMB = #EMPL_NUMB#
                    UNION ALL
                  SELECT B.EXPD_CODE
                        ,0           AS CURR_AMOT
                        ,B.EXPD_AMOT AS PREV_AMOT
                        ,C.SORT_ORDR
                        ,C.EXPD_NAME
                    FROM PY_PMMAST A
                    LEFT OUTER JOIN PY_PMDETL B
                      ON A.PAYX_DATE = B.PAYX_DATE
                     AND A.WAGE_CODE = B.WAGE_CODE
                     AND A.EMPL_NUMB = B.EMPL_NUMB
                     AND B.EXPD_CODE LIKE 'D%'
                   INNER JOIN PY_ALLDED C
                      ON B.EXPD_CODE = C.EXPD_CODE
    ]]>
    <isNotEmpty prepend="AND" property="EPDD_CODE">
                         C.EPDD_CODE IN (SELECT COLUMN_VALUE FROM TABLE(SPLIT(#EPDD_CODE#, ',')))
    </isNotEmpty>
    <![CDATA[
                   WHERE A.PAYX_DATE = #PAYX_DATE2#
                     AND A.WAGE_CODE = #WAGE_CODE2#
                     AND A.EMPL_NUMB = #EMPL_NUMB#
               ) X
               GROUP BY X.EXPD_NAME, X.SORT_ORDR
               ORDER BY X.SORT_ORDR
    ]]>
    </select>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2017.01.16
     내    용 : 급여변동사항 기타항목 조회
********************************************************************************/
-->
    <select id="PAYC0030.SEARCH03" parameterClass="hashmap" resultClass="hashmap" remapResults="true">
    <![CDATA[
               SELECT /* PAYC0030.SEARCH03.급여변동사항 기타항목 조회 */
                      X.EXPD_NAME
                    , X.SORT_ORDR
                    , SUM(X.CURR_AMOT) AS CURR_AMOT
                    , SUM(X.PREV_AMOT) AS PREV_AMOT
                    , SUM(X.CURR_AMOT)-SUM(X.PREV_AMOT) AS CHAA_AMOT
                 FROM ( SELECT INDN_CODE AS EXPD_CODE
                             , E.COMD_CDNM AS EXPD_NAME
                             , E.SORT_ORDR
                             , NVL(SUM(TAP1_AMOT), 0) + NVL(SUM(TAP2_AMOT), 0) + NVL(SUM(TAP3_AMOT), 0)
                             + NVL(SUM(NTP1_AMOT), 0) + NVL(SUM(NTP2_AMOT), 0) + NVL(SUM(NTP3_AMOT), 0) AS CURR_AMOT
                             , 0 AS PREV_AMOT
                          FROM PY_INCOME A
                          LEFT OUTER JOIN TM_CODEXD E
                                       ON A.INDN_CODE = E.COMD_CODE
                                      AND E.COMM_CODE = 'INDN_CODE'
                         WHERE A.PAYX_DATE = #PAYX_DATE1#
                           AND A.WAGE_CODE = #WAGE_CODE1#
                           AND A.EMPL_NUMB = #EMPL_NUMB#
                         GROUP BY INDN_CODE, E.COMD_CDNM, E.SORT_ORDR
                         UNION ALL
                        SELECT INDN_CODE AS EXPD_CODE
                             , E.COMD_CDNM AS EXPD_NAME
                             , E.SORT_ORDR
                             , 0 AS CURR_AMOT
                             , NVL(SUM(TAP1_AMOT), 0) + NVL(SUM(TAP2_AMOT), 0) + NVL(SUM(TAP3_AMOT), 0)
                             + NVL(SUM(NTP1_AMOT), 0) + NVL(SUM(NTP2_AMOT), 0) + NVL(SUM(NTP3_AMOT), 0) AS PREV_AMOT
                          FROM PY_INCOME A
                          LEFT OUTER JOIN TM_CODEXD E
                                       ON A.INDN_CODE = E.COMD_CODE
                                      AND E.COMM_CODE = 'INDN_CODE'
                         WHERE A.PAYX_DATE = #PAYX_DATE2#
                           AND A.WAGE_CODE = #WAGE_CODE2#
                           AND A.EMPL_NUMB = #EMPL_NUMB#
                         GROUP BY INDN_CODE,E.COMD_CDNM, E.SORT_ORDR
                      ) X
                GROUP BY X.EXPD_NAME, X.SORT_ORDR
                ORDER BY X.SORT_ORDR
    ]]>
    </select>
</sqlMap>
