<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="PAYC0010">
<!--
/*******************************************************************************
     작 성 자 : 박철영
     작 성 일 : 2016.07.29
     내    용 : 급여 수당목록 조회
********************************************************************************/
-->
    <select id="PAYC0010.SEARCH00" parameterClass="hashmap" resultClass="hashmap">
    <![CDATA[
            SELECT /* PAYC0010.SEARCH00.급여 수당목록 조회 */
                   DISTINCT C.EXPD_CODE                     /*수당공제코드*/
                 , G.EXPD_NAME                              /*수당공제명*/
                 , 'number'                 AS  DISP_TYPE   /*그리드 컬럼 표시 속성*/
                 , 'none'                   AS  EDIT_TYPE   /*그리드 컬럼의 편집 속성*/
                 , SUBSTR(C.EXPD_CODE,1,1)  AS  EXPD_GUBN   /*수당공제구분 A:수당, D:공제*/
                 , G.SORT_ORDR                              /*정렬순서*/
                 , C.EXPD_CODE  AS  BIND_NAME               /*그리드 Cell의 BindDataset 설정 값*/
                 , CASE WHEN SUBSTR(C.EXPD_CODE,1,1)= 'A' THEN TO_NCHAR('지급 항목')
                        ELSE TO_NCHAR('공제 항목')
                        END AS  HEAD_LINE                   /*그리드 Header의 Line 1에 표시할 제목*/
                 , 0            AS  ROWX_SPAN               /*그리드 Header의 rowspan 값*/
                 , CASE WHEN SUBSTR(C.EXPD_CODE,1,1)= 'A' THEN '##f1faff'
                        ELSE '##fff3ee'
                        END  AS  BACK_COLR                  /*그리드 Body BackGround Color */
              FROM PY_PMDIRY A
             INNER JOIN PY_PMMAST B
                ON A.PAYX_DATE = B.PAYX_DATE
               AND A.WAGE_CODE = B.WAGE_CODE
             INNER JOIN PY_PMDETL C
                ON B.PAYX_DATE = C.PAYX_DATE
               AND B.WAGE_CODE = C.WAGE_CODE
               AND B.EMPL_NUMB = C.EMPL_NUMB
              LEFT OUTER JOIN VI_DEPTXM D
                ON B.DEPT_CODE = D.DEPT_CODE
              LEFT OUTER JOIN HR_MASTXM E
                ON B.EMPL_NUMB = E.EMPL_NUMB
              LEFT OUTER JOIN TM_CODEXD F
                ON F.COMM_CODE = 'CPOS_CODE'
               AND F.COMD_CODE = B.CPOS_CODE
              LEFT OUTER JOIN PY_ALLDED G
                ON C.EXPD_CODE = G.EXPD_CODE
             WHERE A.PAYX_DATE = #PAYX_DATE#
               AND A.WAGE_CODE = #WAGE_CODE#
               AND NVL(C.EXPD_AMOT, 0) <> 0
    ]]>
    <isNotEmpty prepend="AND" property="DEPT_CODE">
                 D.DEPT_FCOD LIKE SF_GET_DEPTFCOD(#DEPT_CODE#) || '%'
    </isNotEmpty>
    <isNotEmpty prepend="AND" property="EMPL_NUMB">
                   B.EMPL_NUMB = #EMPL_NUMB#
    </isNotEmpty>
    <isNotEmpty prepend="AND" property="CLSD_CODE">
                 B.CLSD_CODE = #CLSD_CODE#
    </isNotEmpty>

            UNION ALL
            SELECT DISTINCT TO_NCHAR('C')||LPAD(A.COMD_CODE,4,TO_NCHAR('0')) AS  EXPD_CODE   /*기타소득의 소득구분코드*/
                 , A.COMD_CDNM              AS EXPD_NAME        /*기타소득의 소득구분명*/
                 , 'number'                 AS DISP_TYPE        /*그리드 컬럼 표시 속성*/
                 , 'none'                   AS EDIT_TYPE        /*그리드 컬럼의 편집 속성*/
                 , TO_NCHAR('C')              AS EXPD_GUBN        /*수당공제구분 C:소득구분*/
                 , A.SORT_ORDR                                  /*정렬순서*/
                 , TO_NCHAR('C')||LPAD(A.COMD_CODE,4,TO_NCHAR('0')) AS  BIND_NAME   /*그리드 Cell의 BindDataset 설정 값*/
                 , TO_NCHAR('기타 소득')  AS  HEAD_LINE           /*그리드 Header의 Line 1에 표시할 제목*/
                 , 0            AS  ROWX_SPAN                   /*그리드 Header의 rowspan 값*/
                 , '##eafcfb'   AS  BACK_COLR                   /*그리드 Body BackGround Color */
              FROM TM_CODEXD A INNER JOIN PY_INCOME B ON B.INDN_CODE = A.COMD_CODE
             WHERE A.COMM_CODE = 'INDN_CODE'
               AND B.PAYX_DATE = #PAYX_DATE#
               AND B.WAGE_CODE = #WAGE_CODE#

            UNION ALL
            SELECT
                   TO_NCHAR('B9999')      AS  EXPD_CODE           /*수당공제코드 B9999로 설정*/
                 , NULL                 AS  EXPD_NAME           /*그리드 Header의 Line 2에 표시할 제목*/
                 , 'number'             AS  DISP_TYPE           /*그리드 컬럼 표시 속성*/
                 , 'none'               AS  EDIT_TYPE           /*그리드 컬럼의 편집 속성*/
                 , TO_NCHAR('B')          AS  EXPD_GUBN           /*수당공제구분 B:지급총액*/
                 , 9999                 AS  SORT_ORDR           /*정렬순서*/
                 , TO_NCHAR('PAYX_AMOT')  AS  BIND_NAME           /*그리드 Cell의 BindDataset 설정 값*/
                 , TO_NCHAR('지급총액')   AS  HEAD_LINE           /*그리드 Header의 Line 1에 표시할 제목*/
                 , 1            AS  ROWX_SPAN                   /*그리드 Header의 rowspan 값*/
                 , null         AS  BACK_COLR                   /*그리드 Body BackGround Color */
              FROM DUAL
            UNION ALL
            SELECT
                   TO_NCHAR('D9999')      AS  EXPD_CODE           /*수당공제코드 D9999로 설정*/
                 , NULL                 AS  EXPD_NAME           /*그리드 Header의 Line 2에 표시할 제목*/
                 , 'number'             AS  DISP_TYPE           /*그리드 컬럼 표시 속성*/
                 , 'none'               AS  EDIT_TYPE           /*그리드 컬럼의 편집 속성*/
                 , TO_NCHAR('D')          AS  EXPD_GUBN           /*수당공제구분 D:공제총액*/
                 , 9999                 AS  SORT_ORDR           /*정렬순서*/
                 , TO_NCHAR('DDUC_AMOT')  AS  BIND_NAME           /*그리드 Cell의 BindDataset 설정 값*/
                 , TO_NCHAR('공제총액')   AS  HEAD_LINE           /*그리드 Header의 Line 1에 표시할 제목*/
                 , 1            AS  ROWX_SPAN                   /*그리드 Header의 rowspan 값*/
                 , null         AS  BACK_COLR                   /*그리드 Body BackGround Color */
              FROM DUAL
            UNION ALL
            SELECT
                   TO_NCHAR('E9999')      AS  EXPD_CODE           /*수당공제코드 E9999로 설정*/
                 , NULL                 AS  EXPD_NAME           /*그리드 Header의 Line 2에 표시할 제목*/
                 , 'number'             AS  DISP_TYPE           /*그리드 컬럼 표시 속성*/
                 , 'none'               AS  EDIT_TYPE           /*그리드 컬럼의 편집 속성*/
                 , TO_NCHAR('E')          AS  EXPD_GUBN           /*수당공제구분 E:실지급액*/
                 , 9999                 AS  SORT_ORDR           /*정렬순서*/
                 , TO_NCHAR('REAL_AMOT')  AS  BIND_NAME           /*그리드 Cell의 BindDataset 설정 값*/
                 , TO_NCHAR('실지급액')   AS  HEAD_LINE           /*그리드 Header의 Line 1에 표시할 제목*/
                 , 1            AS  ROWX_SPAN                   /*그리드 Header의 rowspan 값*/
                 , null         AS  BACK_COLR                   /*그리드 Body BackGround Color */
              FROM DUAL
            UNION ALL
            SELECT
                   TO_NCHAR('F9999')      AS  EXPD_CODE           /*수당공제코드 F9999로 설정*/
                 , NULL                 AS  EXPD_NAME           /*그리드 Header의 Line 2에 표시할 제목*/
                 , 'number'             AS  DISP_TYPE           /*그리드 컬럼 표시 속성*/
                 , 'none'               AS  EDIT_TYPE           /*그리드 컬럼의 편집 속성*/
                 , TO_NCHAR('F')          AS  EXPD_GUBN           /*수당공제구분 F:월소급액*/
                 , 9999                 AS  SORT_ORDR           /*정렬순서*/
                 , TO_NCHAR('RTRC_AMOT')  AS  BIND_NAME           /*그리드 Cell의 BindDataset 설정 값*/
                 , TO_NCHAR('월소급액')   AS  HEAD_LINE           /*그리드 Header의 Line 1에 표시할 제목*/
                 , 1            AS  ROWX_SPAN                   /*그리드 Header의 rowspan 값*/
                 , null         AS  BACK_COLR                   /*그리드 Body BackGround Color */
              FROM DUAL
             WHERE EXISTS ( SELECT 'Y'
                              FROM PY_PMDETL Z
                             WHERE Z.PAYX_DATE = #PAYX_DATE#
                               AND Z.WAGE_CODE = #WAGE_CODE#
                               AND NVL(Z.RTRC_AMOT,0) > 0          /*소급금액이 0이상 자료만 해당*/
                          )
            ORDER BY EXPD_GUBN, SORT_ORDR
    </select>
<!--
/*******************************************************************************
     작 성 자 : 박철영
     작 성 일 : 2016.07.29
     내    용 : 급여상세(개인) 테이블 조회
********************************************************************************/
-->
    <select id="PAYC0010.SEARCH01" parameterClass="hashmap" resultClass="hashmap" remapResults="true">
    <![CDATA[
            SELECT /* PAYC0010.SEARCH01.급여상세(개인) 테이블 조회 */
                   B.EMPL_NUMB    /* 사원번호 */
                 , E.EMPL_NAME    /* 성명 */
                 , SF_GET_COMMNAME('DTGN_CODE', D.DTGN_CODE) AS DTGN_NAME   /* 부문 */
                 , SF_GET_SECTNAME2(B.DEPT_CODE,A.PAYX_DATE) AS SECT_NAME   /* 부실 */
                 , SF_GET_DEPTNAME2(B.DEPT_CODE,A.PAYX_DATE) AS DEPT_NAME   /* 부서 */
                 , F.COMD_CDNM AS CPOS_NAME                                 /* 직급 */
                 , SF_GET_COMMNAME('DUTY_CODE', B.DUTY_CODE) AS DUTY_NAME   /* 직무 */
                 , SF_GET_COMMNAME('OPOS_CODE', B.OPOS_CODE) AS OPOS_NAME   /* 직위 */
                 , SF_GET_COMMNAME('GNDR_CODE', E.GNDR_CODE) AS GNDR_NAME   /* 성별 */
                 , NVL(B.PAYX_AMOT,0) AS PAYX_AMOT                          /* 지급총액 */
                 , NVL(B.DDUC_AMOT,0) AS DDUC_AMOT                          /* 공제총액 */
                 , NVL(B.PAYX_AMOT,0) - NVL(B.DDUC_AMOT,0)   AS REAL_AMOT   /* 실지급액 */
                 , NVL(E.PCOP_JCDT,E.ENCO_DATE)              AS ENCO_DATE   /* 입사일자 */
                 , E.RETR_DATE                                              /* 퇴사일 */
                 , SUM(NVL(C.RTRC_AMOT,0))  AS  RTRC_AMOT   /* 2016-11-01 LYG 월소급액*/
    ]]>
    <iterate property="PY_ALLDED">
                 , SUM(CASE WHEN C.EXPD_CODE = #PY_ALLDED[].EXPD_CODE# THEN C.EXPD_AMOT ELSE 0 END) AS "$PY_ALLDED[].EXPD_CODE$"
    </iterate>
    <![CDATA[
              FROM PY_PMDIRY A
             INNER JOIN PY_PMMAST B
                ON A.PAYX_DATE = B.PAYX_DATE
               AND A.WAGE_CODE = B.WAGE_CODE

             /* 2016-11-01 LYG 수당공제금액과 기타소득금액을 표시하기 위해 주석 처리*/
             /*
             INNER JOIN PY_PMDETL C
             */
             LEFT JOIN
                ( SELECT A.PAYX_DATE
                       , A.WAGE_CODE
                       , A.EMPL_NUMB
                       , A.EXPD_CODE
                       , A.EXPD_AMOT
                       , A.RTRC_AMOT
                    FROM PY_PMDETL A
                   WHERE A.PAYX_DATE = #PAYX_DATE#
                     AND A.WAGE_CODE = #WAGE_CODE#
                  UNION ALL
                  SELECT A.PAYX_DATE
                       , A.WAGE_CODE
                       , A.EMPL_NUMB
                       , TO_NCHAR('C')||LPAD(A.INDN_CODE, 4, TO_NCHAR('0'))   EXPD_CODE
                       , NVL(A.TAP1_AMOT,0) + NVL(A.TAP2_AMOT,0) + NVL(A.TAP3_AMOT,0) 
                         +
                         NVL(A.NTP1_AMOT,0) + NVL(A.NTP2_AMOT,0) + NVL(A.NTP3_AMOT,0)  AS  EXPD_AMOT
                       , 0  AS  RTRC_AMOT
                    FROM PY_INCOME A
                   WHERE A.PAYX_DATE = #PAYX_DATE#
                     AND A.WAGE_CODE = #WAGE_CODE#
                ) C
                ON B.PAYX_DATE = C.PAYX_DATE
               AND B.WAGE_CODE = C.WAGE_CODE
               AND B.EMPL_NUMB = C.EMPL_NUMB
              LEFT OUTER JOIN VI_DEPTXM D
                ON B.DEPT_CODE = D.DEPT_CODE
              LEFT OUTER JOIN HR_MASTXM E
                ON E.EMPL_NUMB = B.EMPL_NUMB
              LEFT OUTER JOIN TM_CODEXD F
                ON F.COMM_CODE = 'CPOS_CODE'
               AND F.COMD_CODE = B.CPOS_CODE
              LEFT OUTER JOIN TM_CODEXD G
                ON G.COMM_CODE = 'OPOS_CODE'
               AND G.COMD_CODE = B.OPOS_CODE
            WHERE NVL(C.EXPD_AMOT, 0) <> 0
              AND A.PAYX_DATE = #PAYX_DATE#
              AND A.WAGE_CODE = #WAGE_CODE#
    ]]>
    <isNotEmpty prepend="AND" property="DEPT_CODE">
                  D.DEPT_FCOD LIKE SF_GET_DEPTFCOD(#DEPT_CODE#) || '%'
    </isNotEmpty>
    <isNotEmpty prepend="AND" property="EMPL_NUMB">
                  B.EMPL_NUMB = #EMPL_NUMB#
    </isNotEmpty>
    <isNotEmpty prepend="AND" property="CLSD_CODE">
                  B.CLSD_CODE = #CLSD_CODE#
    </isNotEmpty>
    <isNotEmpty prepend="AND" property="GNDR_CODE">
                  E.GNDR_CODE = #GNDR_CODE#
    </isNotEmpty>
            GROUP BY B.EMPL_NUMB, E.EMPL_NAME, B.DEPT_CODE, A.PAYX_DATE, F.COMD_CDNM
                    ,B.DUTY_CODE, B.PAYX_AMOT, B.DDUC_AMOT, D.DEPT_FCOD, D.DTGN_CODE, F.SORT_ORDR
                    ,E.ENCO_DATE, B.OPOS_CODE, E.CPOS_CODE, E.GNDR_CODE, E.PCOP_JCDT, E.RETR_DATE
            ORDER BY B.OPOS_CODE, E.CPOS_CODE, E.ENCO_DATE
    </select>
<!--
/*******************************************************************************
     작 성 자 : 안윤준
     작 성 일 : 2016.11.04
     내    용 : 급여상세(부서) 테이블 조회
********************************************************************************/
-->
    <select id="PAYC0010.SEARCH02" parameterClass="hashmap" resultClass="hashmap" remapResults="true">
    <![CDATA[
            SELECT /* PAYC0010.SEARCH02.급여상세 테이블 조회 */
                   B.DEPT_CODE
                 , D.DEPT_NAME
                 , D.SECT_NAME
                 , SUM(NVL(B.PAYX_AMOT,0)) AS PAYX_AMOT        /* 지급총액 */
                 , SUM(NVL(B.DDUC_AMOT,0)) AS DDUC_AMOT        /* 공제총액 */
                 , SUM(NVL(B.PAYX_AMOT,0)) - SUM(NVL(B.DDUC_AMOT,0)) AS REAL_AMOT    /* 실지급액 */
                 , SUM(NVL(C.RTRC_AMOT,      0))  AS  RTRC_AMOT   /* 2016-11-01 LYG 월소급액*/
          ]]>
          <iterate property="PY_ALLDED">
                 , SUM("$PY_ALLDED[].EXPD_CODE$") AS "$PY_ALLDED[].EXPD_CODE$"
          </iterate>
        <![CDATA[
              FROM PY_PMDIRY A
             INNER JOIN PY_PMMAST B
                     ON A.PAYX_DATE = B.PAYX_DATE
                    AND A.WAGE_CODE = B.WAGE_CODE
              LEFT OUTER JOIN ( SELECT A.PAYX_DATE
                                     , A.WAGE_CODE
                                     , A.EMPL_NUMB
                                     , SUM(A.RTRC_AMOT) AS RTRC_AMOT
    ]]>
                             <iterate property="PY_ALLDED">
                                     , SUM(CASE WHEN A.EXPD_CODE = #PY_ALLDED[].EXPD_CODE# THEN A.EXPD_AMOT ELSE 0 END) AS "$PY_ALLDED[].EXPD_CODE$"
                             </iterate>
        <![CDATA[
                                 FROM( SELECT A.PAYX_DATE
                                            , A.WAGE_CODE
                                            , A.EMPL_NUMB
                                            , A.EXPD_CODE
                                            , A.EXPD_AMOT
                                            , A.RTRC_AMOT
                                         FROM PY_PMDETL A
                                        WHERE A.PAYX_DATE = #PAYX_DATE#
                                          AND A.WAGE_CODE = #WAGE_CODE#
                                        UNION ALL
                                       SELECT A.PAYX_DATE
                                            , A.WAGE_CODE
                                            , A.EMPL_NUMB
                                            , TO_NCHAR('C')||LPAD(A.INDN_CODE,4,TO_NCHAR('0'))   EXPD_CODE
                                            , NVL(A.TAP1_AMOT,0) + NVL(A.TAP2_AMOT,0) + NVL(A.TAP3_AMOT,0)
                                            +
                                            NVL(A.NTP1_AMOT,0) + NVL(A.NTP2_AMOT,0) + NVL(A.NTP3_AMOT,0)  AS  EXPD_AMOT
                                            , 0  AS  RTRC_AMOT
                                         FROM PY_INCOME A
                                        WHERE A.PAYX_DATE = #PAYX_DATE#
                                          AND A.WAGE_CODE = #WAGE_CODE#
                                      ) A
                                GROUP BY A.PAYX_DATE, A.WAGE_CODE, A.EMPL_NUMB
                               ) C
                           ON B.PAYX_DATE = C.PAYX_DATE
                          AND B.WAGE_CODE = C.WAGE_CODE
                          AND B.EMPL_NUMB = C.EMPL_NUMB
              LEFT OUTER JOIN VI_DEPTXM D
                           ON B.DEPT_CODE = D.DEPT_CODE
             WHERE A.PAYX_DATE = #PAYX_DATE#
               AND A.WAGE_CODE = #WAGE_CODE#
        ]]>
    <isNotEmpty prepend="AND" property="DEPT_CODE">
                   B.DEPT_CODE = #DEPT_CODE#
    </isNotEmpty>
    <isNotEmpty prepend="AND" property="CLSD_CODE">
                   B.CLSD_CODE = #CLSD_CODE#
    </isNotEmpty>
             GROUP BY B.DEPT_CODE, D.DEPT_NAME, D.SECT_NAME, D.SORT_ORDR 
             ORDER BY D.SORT_ORDR
    </select>
</sqlMap>