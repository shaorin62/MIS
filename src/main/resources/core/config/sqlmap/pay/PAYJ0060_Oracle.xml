<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap namespace="PAYJ0060">

<!--
 *   프로그램명 : 인건비효율성 데이터 처리 SQLMAP
 *   작 성 일 : 2016.08.02
 *   작 성 자 : 고민주
 *   비   고 :
 *   Copyright (c) 2016 Inbus Co.,Ltd All Rights reserved.
 -->
	<!--
	 작 성 자 : 고민주
	 작 성 일 : 2016.08.02
	 내    용 : 인건비효율성 부서 조회
	 파라미터 : 
	-->
	<select id="PAYJ0060.SEARCH00" parameterClass="hashmap" resultClass="hashmap">
	<![CDATA[			 
			SELECT A.DEPT_CODE 
				 , '' AS DTGN_NAME 
				 , B.SECT_NAME 
				 , B.DEPT_NAME  
				 , CASE WHEN A.CPOS_CODE = '999' THEN '용역' ELSE '일반' END AS CPOS_TYPE 
				 , SUM(CASE WHEN A.STDS_YMTH BETWEEN TO_CHAR(TO_DATE(SubStr(#STDS_YMTH#,1,4) -1||'0101','YYYYMMDD') ,'YYYYMM') AND TO_CHAR(TO_DATE(SubStr(#STDS_YMTH#,1,4) -1||SubStr(#STDS_YMTH#,5,2)||'01','YYYYMMDD'),'YYYYMM') THEN A.PAYX_AMOT ELSE 0 END) AS EXPD_AMOT1 
				 , ROUND(SUM(CASE WHEN A.STDS_YMTH BETWEEN TO_CHAR(TO_DATE(SubStr(#STDS_YMTH#,1,4) -1||'0101','YYYYMMDD') ,'YYYYMM') AND TO_CHAR(TO_DATE(SubStr(#STDS_YMTH#,1,4) -1||SubStr(#STDS_YMTH#,5,2)||'01','YYYYMMDD'),'YYYYMM') THEN A.AVER_NOPS ELSE 0 END) / SUBSTR(TO_CHAR(TO_DATE(SubStr(#STDS_YMTH#,1,4) -1||SubStr(#STDS_YMTH#,5,2)||'01','YYYYMMDD'),'YYYYMM'), 5,2),1) AS AVER_NOPS1 
				 , ROUND(CASE WHEN ROUND(SUM(CASE WHEN A.STDS_YMTH BETWEEN TO_CHAR(TO_DATE(SubStr(#STDS_YMTH#,1,4) -1||'0101','YYYYMMDD') ,'YYYYMM') AND TO_CHAR(TO_DATE(SubStr(#STDS_YMTH#,1,4) -1||SubStr(#STDS_YMTH#,5,2)||'01','YYYYMMDD'),'YYYYMM') THEN A.AVER_NOPS ELSE 0 END) / SUBSTR(TO_CHAR(TO_DATE(SubStr(#STDS_YMTH#,1,4) -1||SubStr(#STDS_YMTH#,5,2)||'01','YYYYMMDD'),'YYYYMM'), 5,2),1) = 0 THEN 0 ELSE SUM(CASE WHEN A.STDS_YMTH BETWEEN TO_CHAR(TO_DATE(SubStr(#STDS_YMTH#,1,4) -1||'0101','YYYYMMDD') ,'YYYYMM') AND TO_CHAR(TO_DATE(SubStr(#STDS_YMTH#,1,4) -1||SubStr(#STDS_YMTH#,5,2)||'01','YYYYMMDD'),'YYYYMM') THEN A.PAYX_AMOT ELSE 0 END) / ROUND(SUM(CASE WHEN A.STDS_YMTH BETWEEN TO_CHAR(TO_DATE(SubStr(#STDS_YMTH#,1,4) -1||'0101','YYYYMMDD') ,'YYYYMM') AND TO_CHAR(TO_DATE(SubStr(#STDS_YMTH#,1,4) -1||SubStr(#STDS_YMTH#,5,2)||'01','YYYYMMDD'),'YYYYMM') THEN A.AVER_NOPS ELSE 0 END) / SUBSTR(TO_CHAR(TO_DATE(SubStr(#STDS_YMTH#,1,4) -1||SubStr(#STDS_YMTH#,5,2)||'01','YYYYMMDD'),'YYYYMM'), 5,2),1) END,0) AS AMOT_NOPS1 
				 , SUM(CASE WHEN A.STDS_YMTH BETWEEN SUBSTR(#STDS_YMTH#,1,4) + '01' AND #STDS_YMTH# THEN A.PAYX_AMOT ELSE 0 END) AS EXPD_AMOT2 
				 , ROUND(SUM(CASE WHEN A.STDS_YMTH BETWEEN SUBSTR(#STDS_YMTH#,1,4) + '01' AND #STDS_YMTH# THEN A.AVER_NOPS ELSE 0 END) / SUBSTR(#STDS_YMTH#, 5,2),1) AS AVER_NOPS2 
				 , ROUND(CASE WHEN ROUND(SUM(CASE WHEN A.STDS_YMTH BETWEEN SUBSTR(#STDS_YMTH#,1,4) + '01' AND #STDS_YMTH# THEN A.AVER_NOPS ELSE 0 END) / SUBSTR(#STDS_YMTH#, 5,2),1) = 0 THEN 0 ELSE SUM(CASE WHEN A.STDS_YMTH BETWEEN SUBSTR(#STDS_YMTH#,1,4) + '01' AND #STDS_YMTH# THEN A.PAYX_AMOT ELSE 0 END) / ROUND(SUM(CASE WHEN A.STDS_YMTH BETWEEN SUBSTR(#STDS_YMTH#,1,4) + '01' AND #STDS_YMTH# THEN A.AVER_NOPS ELSE 0 END) / SUBSTR(#STDS_YMTH#, 5,2),1) END,0) AS AMOT_NOPS2 
			  FROM	PY_EMPAVG A 
			  LEFT OUTER JOIN TABLE(SF_TM_DEPTXM(#STDS_YMTH# + '31')) B 
				ON A.DEPT_CODE = B.DEPT_CODE 
			 WHERE (A.STDS_YMTH BETWEEN TO_CHAR(TO_DATE(SubStr(#STDS_YMTH#,1,4) -1||'0101','YYYYMMDD') ,'YYYYMM') AND TO_CHAR(TO_DATE(SubStr(#STDS_YMTH#,1,4) -1||SubStr(#STDS_YMTH#,5,2)||'01','YYYYMMDD'),'YYYYMM') 
				OR  A.STDS_YMTH BETWEEN SUBSTR(#STDS_YMTH#,1,4) + '01' AND #STDS_YMTH#) 

	]]>			

	<isNotEmpty prepend="AND" property="CLSD_CODE">
	<![CDATA[
				A.CLSD_CODE IN (SELECT COLUMN_VALUE FROM TABLE(SPLIT(#CLSD_CODE#, ',')))
	]]>	
	</isNotEmpty>			  

	<![CDATA[		   
			 GROUP BY A.DEPT_CODE,  B.SECT_NAME,B.DEPT_NAME ,B.DEPT_FCOD,  CASE WHEN A.CPOS_CODE = '999' THEN '용역' ELSE '일반' END 
			 ORDER BY B.DEPT_FCOD, 5 DESC
    ]]>         
	</select>
	<!--
	 작 성 자 : 고민주
	 작 성 일 : 2016.08.02
	 내    용 : 인건비효율성 직급 조회
	 파라미터 : 
	-->
	<select id="PAYJ0060.SEARCH01" parameterClass="hashmap" resultClass="hashmap">
	<![CDATA[
			SELECT A.CPOS_NAME AS CPOS_NAME 
				 , SUM(CASE WHEN A.STDS_YMTH BETWEEN TO_CHAR(TO_DATE(SubStr(#STDS_YMTH#,1,4) -1||'0101','YYYYMMDD') ,'YYYYMM') AND TO_CHAR(TO_DATE(SubStr(#STDS_YMTH#,1,4) -1||SubStr(#STDS_YMTH#,5,2)||'01','YYYYMMDD'),'YYYYMM') THEN A.PAYX_AMOT ELSE 0 END) AS EXPD_AMOT1 
				 , ROUND(SUM(CASE WHEN A.STDS_YMTH BETWEEN TO_CHAR(TO_DATE(SubStr(#STDS_YMTH#,1,4) -1||'0101','YYYYMMDD') ,'YYYYMM') AND TO_CHAR(TO_DATE(SubStr(#STDS_YMTH#,1,4) -1||SubStr(#STDS_YMTH#,5,2)||'01','YYYYMMDD'),'YYYYMM') THEN A.AVER_NOPS ELSE 0 END) / SUBSTR(TO_CHAR(TO_DATE(SubStr(#STDS_YMTH#,1,4) -1||SubStr(#STDS_YMTH#,5,2)||'01','YYYYMMDD'),'YYYYMM'), 5,2),1) AS AVER_NOPS1 
				 , ROUND(CASE WHEN ROUND(SUM(CASE WHEN A.STDS_YMTH BETWEEN TO_CHAR(TO_DATE(SubStr(#STDS_YMTH#,1,4) -1||'0101','YYYYMMDD') ,'YYYYMM') AND TO_CHAR(TO_DATE(SubStr(#STDS_YMTH#,1,4) -1||SubStr(#STDS_YMTH#,5,2)||'01','YYYYMMDD'),'YYYYMM') THEN A.AVER_NOPS ELSE 0 END) / SUBSTR(TO_CHAR(TO_DATE(SubStr(#STDS_YMTH#,1,4) -1||SubStr(#STDS_YMTH#,5,2)||'01','YYYYMMDD'),'YYYYMM'), 5,2),1) = 0 THEN 0 ELSE SUM(CASE WHEN A.STDS_YMTH BETWEEN TO_CHAR(TO_DATE(SubStr(#STDS_YMTH#,1,4) -1||'0101','YYYYMMDD') ,'YYYYMM') AND TO_CHAR(TO_DATE(SubStr(#STDS_YMTH#,1,4) -1||SubStr(#STDS_YMTH#,5,2)||'01','YYYYMMDD'),'YYYYMM') THEN A.PAYX_AMOT ELSE 0 END) / ROUND(SUM(CASE WHEN A.STDS_YMTH BETWEEN TO_CHAR(TO_DATE(SubStr(#STDS_YMTH#,1,4) -1||'0101','YYYYMMDD') ,'YYYYMM') AND TO_CHAR(TO_DATE(SubStr(#STDS_YMTH#,1,4) -1||SubStr(#STDS_YMTH#,5,2)||'01','YYYYMMDD'),'YYYYMM') THEN A.AVER_NOPS ELSE 0 END) / SUBSTR(TO_CHAR(TO_DATE(SubStr(#STDS_YMTH#,1,4) -1||SubStr(#STDS_YMTH#,5,2)||'01','YYYYMMDD'),'YYYYMM'), 5,2),1) END,0) AS AMOT_NOPS1 
				 , SUM(CASE WHEN A.STDS_YMTH BETWEEN SUBSTR(#STDS_YMTH#,1,4) + '01' AND #STDS_YMTH# THEN A.PAYX_AMOT ELSE 0 END) AS EXPD_AMOT2 
				 , ROUND(SUM(CASE WHEN A.STDS_YMTH BETWEEN SUBSTR(#STDS_YMTH#,1,4) + '01' AND #STDS_YMTH# THEN A.AVER_NOPS ELSE 0 END) / SUBSTR(#STDS_YMTH#, 5,2),1) AS AVER_NOPS2 
				 , ROUND(CASE WHEN ROUND(SUM(CASE WHEN A.STDS_YMTH BETWEEN SUBSTR(#STDS_YMTH#,1,4) + '01' AND #STDS_YMTH# THEN A.AVER_NOPS ELSE 0 END) / SUBSTR(#STDS_YMTH#, 5,2),1) = 0 THEN 0 ELSE SUM(CASE WHEN A.STDS_YMTH BETWEEN SUBSTR(#STDS_YMTH#,1,4) + '01' AND #STDS_YMTH# THEN A.PAYX_AMOT ELSE 0 END) / ROUND(SUM(CASE WHEN A.STDS_YMTH BETWEEN SUBSTR(#STDS_YMTH#,1,4) + '01' AND #STDS_YMTH# THEN A.AVER_NOPS ELSE 0 END) / SUBSTR(#STDS_YMTH#, 5,2),1) END,0) AS AMOT_NOPS2 
			  FROM	PY_EMPAVG A 
			  LEFT OUTER JOIN TM_CODEXD B 
				ON B.COMM_CODE = 'CPOS_CODE' 
			   AND A.CPOS_CODE = B.COMD_CODE 
			 WHERE (A.STDS_YMTH BETWEEN TO_CHAR(TO_DATE(SubStr(#STDS_YMTH#,1,4) -1||'0101','YYYYMMDD') ,'YYYYMM') AND TO_CHAR(TO_DATE(SubStr(#STDS_YMTH#,1,4) -1||SubStr(#STDS_YMTH#,5,2)||'01','YYYYMMDD'),'YYYYMM') 
				OR  A.STDS_YMTH BETWEEN SUBSTR(#STDS_YMTH#,1,4) + '01' AND #STDS_YMTH#) 
	]]>			

	<isNotEmpty prepend="AND" property="CLSD_CODE">
	<![CDATA[
				A.CLSD_CODE IN (SELECT COLUMN_VALUE FROM TABLE(SPLIT(#CLSD_CODE#, ',')))
	]]>	
	</isNotEmpty>			  

	<![CDATA[
			 GROUP BY A.CPOS_CODE, A.CPOS_NAME, B.SORT_ORDR 
			 ORDER BY CASE WHEN A.CPOS_CODE = '999' THEN 999999 ELSE B.SORT_ORDR END
    ]]>         
	</select>
	<!--
	 작 성 자 : 고민주
	 작 성 일 : 2016.08.02
	 내    용 : 인건비효율성 직무 조회
	 파라미터 : 
	-->
	<select id="PAYJ0060.SEARCH02" parameterClass="hashmap" resultClass="hashmap">
	<![CDATA[			
			SELECT A.DUTY_NAME AS DUTY_NAME 
				 , SUM(CASE WHEN A.STDS_YMTH BETWEEN TO_CHAR(TO_DATE(SubStr(#STDS_YMTH#,1,4) -1||'0101','YYYYMMDD') ,'YYYYMM') AND TO_CHAR(TO_DATE(SubStr(#STDS_YMTH#,1,4) -1||SubStr(#STDS_YMTH#,5,2)||'01','YYYYMMDD'),'YYYYMM') THEN A.PAYX_AMOT ELSE 0 END) AS EXPD_AMOT1 
				 , ROUND(SUM(CASE WHEN A.STDS_YMTH BETWEEN TO_CHAR(TO_DATE(SubStr(#STDS_YMTH#,1,4) -1||'0101','YYYYMMDD') ,'YYYYMM') AND TO_CHAR(TO_DATE(SubStr(#STDS_YMTH#,1,4) -1||SubStr(#STDS_YMTH#,5,2)||'01','YYYYMMDD'),'YYYYMM') THEN A.AVER_NOPS ELSE 0 END) / SUBSTR(TO_CHAR(TO_DATE(SubStr(#STDS_YMTH#,1,4) -1||SubStr(#STDS_YMTH#,5,2)||'01','YYYYMMDD'),'YYYYMM'), 5,2),1) AS AVER_NOPS1 
				 , ROUND(CASE WHEN ROUND(SUM(CASE WHEN A.STDS_YMTH BETWEEN TO_CHAR(TO_DATE(SubStr(#STDS_YMTH#,1,4) -1||'0101','YYYYMMDD') ,'YYYYMM') AND TO_CHAR(TO_DATE(SubStr(#STDS_YMTH#,1,4) -1||SubStr(#STDS_YMTH#,5,2)||'01','YYYYMMDD'),'YYYYMM') THEN A.AVER_NOPS ELSE 0 END) / SUBSTR(TO_CHAR(TO_DATE(SubStr(#STDS_YMTH#,1,4) -1||SubStr(#STDS_YMTH#,5,2)||'01','YYYYMMDD'),'YYYYMM'), 5,2),1) = 0 THEN 0 ELSE SUM(CASE WHEN A.STDS_YMTH BETWEEN TO_CHAR(TO_DATE(SubStr(#STDS_YMTH#,1,4) -1||'0101','YYYYMMDD') ,'YYYYMM') AND TO_CHAR(TO_DATE(SubStr(#STDS_YMTH#,1,4) -1||SubStr(#STDS_YMTH#,5,2)||'01','YYYYMMDD'),'YYYYMM') THEN A.PAYX_AMOT ELSE 0 END) / ROUND(SUM(CASE WHEN A.STDS_YMTH BETWEEN TO_CHAR(TO_DATE(SubStr(#STDS_YMTH#,1,4) -1||'0101','YYYYMMDD') ,'YYYYMM') AND TO_CHAR(TO_DATE(SubStr(#STDS_YMTH#,1,4) -1||SubStr(#STDS_YMTH#,5,2)||'01','YYYYMMDD'),'YYYYMM') THEN A.AVER_NOPS ELSE 0 END) / SUBSTR(TO_CHAR(TO_DATE(SubStr(#STDS_YMTH#,1,4) -1||SubStr(#STDS_YMTH#,5,2)||'01','YYYYMMDD'),'YYYYMM'), 5,2),1) END,0) AS AMOT_NOPS1 
				 , SUM(CASE WHEN A.STDS_YMTH BETWEEN SUBSTR(#STDS_YMTH#,1,4) + '01' AND #STDS_YMTH# THEN A.PAYX_AMOT ELSE 0 END) AS EXPD_AMOT2 
				 , ROUND(SUM(CASE WHEN A.STDS_YMTH BETWEEN SUBSTR(#STDS_YMTH#,1,4) + '01' AND #STDS_YMTH# THEN A.AVER_NOPS ELSE 0 END) / SUBSTR(#STDS_YMTH#, 5,2),1) AS AVER_NOPS2 
				 , ROUND(CASE WHEN ROUND(SUM(CASE WHEN A.STDS_YMTH BETWEEN SUBSTR(#STDS_YMTH#,1,4) + '01' AND #STDS_YMTH# THEN A.AVER_NOPS ELSE 0 END) / SUBSTR(#STDS_YMTH#, 5,2),1) = 0 THEN 0 ELSE SUM(CASE WHEN A.STDS_YMTH BETWEEN SUBSTR(#STDS_YMTH#,1,4) + '01' AND #STDS_YMTH# THEN A.PAYX_AMOT ELSE 0 END) / ROUND(SUM(CASE WHEN A.STDS_YMTH BETWEEN SUBSTR(#STDS_YMTH#,1,4) + '01' AND #STDS_YMTH# THEN A.AVER_NOPS ELSE 0 END) / SUBSTR(#STDS_YMTH#, 5,2),1) END,0) AS AMOT_NOPS2 
			  FROM	PY_EMPAVG A 
			  LEFT OUTER JOIN TM_CODEXD B 
				ON B.COMM_CODE = 'DUTY_CODE' 
			   AND A.DUTY_CODE = B.COMD_CODE 
			 WHERE (A.STDS_YMTH BETWEEN TO_CHAR(TO_DATE(SubStr(#STDS_YMTH#,1,4) -1||'0101','YYYYMMDD') ,'YYYYMM') AND TO_CHAR(TO_DATE(SubStr(#STDS_YMTH#,1,4) -1||SubStr(#STDS_YMTH#,5,2)||'01','YYYYMMDD'),'YYYYMM') 
				OR  A.STDS_YMTH BETWEEN SUBSTR(#STDS_YMTH#,1,4) + '01' AND #STDS_YMTH#) 

	]]>			

	<isNotEmpty prepend="AND" property="CLSD_CODE">
	<![CDATA[
				A.CLSD_CODE IN (SELECT COLUMN_VALUE FROM TABLE(SPLIT(#CLSD_CODE#, ',')))
	]]>	
	</isNotEmpty>			  

	<![CDATA[ 
			 GROUP BY A.DUTY_NAME 
			 ORDER BY A.DUTY_NAME 
    ]]>         
	</select>		


</sqlMap>
