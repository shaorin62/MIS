<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
        "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="PAYC0090">
<!--
/*******************************************************************************
     작  성  자 : 안윤준
     작  성  일 : 2016.11.08
     내      용 : 기간별급여명세현황 조회
********************************************************************************/
-->
    <select id="PAYC0090.SEARCH00" parameterClass="hashmap" resultClass="hashmap">
        <![CDATA[
    WITH TEMP1 AS ( SELECT /* PAYC0090.SEARCH00.기간별급여명세현황 조회 */
                           A.EMPL_NUMB                                            /* 사번 */
                         , B.EMPL_NAME                                            /* 성명 */
                         , SF_GET_SECTNAME(B.DEPT_CODE) AS SECT_NAME              /* 소속명 */
                         , SF_GET_DEPTNAME(B.DEPT_CODE) AS DEPT_NAME              /* 부서명 */
                         , D.COMD_CDNM AS OPOS_NAME                               /* 직위명 */
                         , A.ENCO_DATE                                            /* 입사일 */
                         , A.RETR_DATE                                            /* 퇴사일 */
                         , A.WORK_GUBN                                            /* 구분 */
                         , A.WAGE_TOTL                                            /* 급여액 */
                         , A.BONU_TOTL                                            /* 상여액 */
                         , A.WAGE_TOTL + A.BONU_TOTL AS PAYX_TOTL                 /* 총지급액 */
                         , C.DEPT_CODE                                            /* 부서코드 */
                         , B.OPOS_CODE
                         , A.SORT_ORDR
                      FROM ( SELECT /* 1년만근*/
                                    A.EMPL_NUMB
                                  , E.ENCO_DATE
                                  , E.RETR_DATE
                                  , '1년만근' AS WORK_GUBN
                                  , SUM(CASE WHEN B.EXPD_CODE NOT IN ('A0055', 'A0053', 'A9005', 'A0064') AND B.EXPD_CODE LIKE 'A%' THEN NVL(B.EXPD_AMOT,0)+NVL(B.RTRC_AMOT,0) ELSE 0 END) AS WAGE_TOTL
                                  , SUM(CASE WHEN B.EXPD_CODE IN ('A0055', 'A0053', 'A0064')  THEN NVL(B.EXPD_AMOT,0)+NVL(B.RTRC_AMOT,0) ELSE 0 END) AS BONU_TOTL
                                  , 10 AS SORT_ORDR
                               FROM PY_PMMAST A
                              INNER JOIN PY_PMDETL B
                                      ON A.PAYX_DATE = B.PAYX_DATE
                                     AND A.WAGE_CODE = B.WAGE_CODE
                                     AND A.EMPL_NUMB = B.EMPL_NUMB
                              INNER JOIN  PY_PMDIRY C
                                      ON A.PAYX_DATE = C.PAYX_DATE
                                     AND A.WAGE_CODE = C.WAGE_CODE
                               LEFT OUTER JOIN VI_DEPTXM D
                                            ON A.DEPT_CODE = D.DEPT_CODE
                               LEFT OUTER JOIN HR_MASTXM E
                                            ON A.EMPL_NUMB = E.EMPL_NUMB
                              WHERE B.EXPD_AMOT <> 0
                                AND SUBSTR(C.WAGE_YMTH,0, 4) = #WAGE_YMTH#
                                AND SUBSTR(E.ENCO_DATE, 0, 4) < #WAGE_YMTH#
                                AND (SUBSTR(E.RETR_DATE, 0, 4) > #WAGE_YMTH# OR RETR_DATE IS NULL)
                              GROUP BY A.EMPL_NUMB,E.ENCO_DATE, E.RETR_DATE
                              UNION ALL
                             SELECT /* 중도입사 */
                                    A.EMPL_NUMB
                                  , E.ENCO_DATE
                                  , E.RETR_DATE
                                  , '중도입사' AS WORK_GUBN
                                  , SUM(CASE WHEN B.EXPD_CODE NOT IN ('A0055', 'A0053', 'A9005', 'A0064') AND B.EXPD_CODE LIKE 'A%' THEN NVL(B.EXPD_AMOT,0)+NVL(B.RTRC_AMOT,0) ELSE 0 END) AS WAGE_TOTL
                                  , SUM(CASE WHEN B.EXPD_CODE IN ('A0055', 'A0053', 'A0064')  THEN NVL(B.EXPD_AMOT,0)+NVL(B.RTRC_AMOT,0) ELSE 0 END) AS BONU_TOTL
                                  , 20 AS SORT_ORDR
                               FROM PY_PMMAST A
                              INNER JOIN PY_PMDETL B
                                      ON A.PAYX_DATE = B.PAYX_DATE
                                     AND A.WAGE_CODE = B.WAGE_CODE
                                     AND A.EMPL_NUMB = B.EMPL_NUMB
                              INNER JOIN  PY_PMDIRY C
                                      ON A.PAYX_DATE = C.PAYX_DATE
                                     AND A.WAGE_CODE = C.WAGE_CODE
                               LEFT OUTER JOIN VI_DEPTXM D
                                            ON A.DEPT_CODE = D.DEPT_CODE
                               LEFT OUTER JOIN HR_MASTXM E
                                            ON A.EMPL_NUMB = E.EMPL_NUMB
                              WHERE B.EXPD_AMOT <> 0
                                AND SUBSTR(C.WAGE_YMTH,0, 4) =  #WAGE_YMTH#
                                AND SUBSTR(E.ENCO_DATE, 0, 4) = #WAGE_YMTH#
                                AND (SUBSTR(E.RETR_DATE, 0, 4) > #WAGE_YMTH# OR RETR_DATE IS NULL)
                              GROUP BY A.EMPL_NUMB,E.ENCO_DATE, E.RETR_DATE
                              UNION ALL
                             SELECT  /* 중도퇴사 */
                                    A.EMPL_NUMB
                                  , E.ENCO_DATE
                                  , E.RETR_DATE
                                  , '중도퇴사' AS WORK_GUBN
                                  , SUM(CASE WHEN B.EXPD_CODE NOT IN ('A0055', 'A0053', 'A9005', 'A0064') AND B.EXPD_CODE LIKE 'A%' THEN NVL(B.EXPD_AMOT,0)+NVL(B.RTRC_AMOT,0) ELSE 0 END) AS WAGE_TOTL
                                  , SUM(CASE WHEN B.EXPD_CODE IN ('A0055', 'A0053', 'A0064')  THEN NVL(B.EXPD_AMOT,0)+NVL(B.RTRC_AMOT,0) ELSE 0 END) AS BONU_TOTL
                                  , 30 AS SORT_ORDR
                               FROM PY_PMMAST A
                              INNER JOIN PY_PMDETL B
                                      ON A.PAYX_DATE = B.PAYX_DATE
                                     AND A.WAGE_CODE = B.WAGE_CODE
                                     AND A.EMPL_NUMB = B.EMPL_NUMB
                              INNER JOIN  PY_PMDIRY C
                                      ON A.PAYX_DATE = C.PAYX_DATE
                                     AND A.WAGE_CODE = C.WAGE_CODE
                               LEFT OUTER JOIN VI_DEPTXM D
                                            ON A.DEPT_CODE = D.DEPT_CODE
                               LEFT OUTER JOIN HR_MASTXM E
                                            ON A.EMPL_NUMB = E.EMPL_NUMB
                              WHERE B.EXPD_AMOT <> 0
                                 AND SUBSTR(C.WAGE_YMTH,0, 4) =  #WAGE_YMTH#
                                AND E.ENCO_DATE != #WAGE_YMTH# ||'0102'
                                AND SUBSTR(E.RETR_DATE, 0, 4) = #WAGE_YMTH#
                              GROUP BY A.EMPL_NUMB,E.ENCO_DATE, E.RETR_DATE
                            ) A
                      LEFT OUTER JOIN TABLE(SF_HR_MASTXM(A.EMPL_NUMB, (SELECT MAX(A.PAYX_DATE)
                                                                         FROM PY_PMDIRY A
                                                                        WHERE SUBSTR(A.WAGE_YMTH,0,4) = #WAGE_YMTH#))) B
                                   ON A.EMPL_NUMB = B.EMPL_NUMB
                      LEFT OUTER JOIN TABLE(SF_TM_DEPTXM( (SELECT MAX(A.PAYX_DATE)
                                                             FROM PY_PMDIRY A
                                                            WHERE SUBSTR(A.WAGE_YMTH,0,4) = #WAGE_YMTH#))) C
                                   ON B.DEPT_CODE = C.DEPT_CODE
                      LEFT OUTER JOIN TM_CODEXD D
                                   ON D.COMM_CODE = 'OPOS_CODE'
                                  AND D.COMD_CODE = B.OPOS_CODE
                     WHERE 1=1
		]]>
	         <isNotEmpty prepend="AND" property="EMPL_NUMB">
	              A.EMPL_NUMB = #EMPL_NUMB#
	         </isNotEmpty>
	         <isNotEmpty prepend="AND" property="DEPT_CODE">
	              C.DEPT_FCOD LIKE SF_GET_DEPTFCOD(#DEPT_CODE#) || '%'
	         </isNotEmpty>
		<![CDATA[
        )
        SELECT EMPL_NUMB /* 사번 */
             , EMPL_NAME /* 성명 */
             , SECT_NAME /* 소속명 */
             , DEPT_NAME /* 부서명 */
             , OPOS_NAME /* 직위명 */
             , ENCO_DATE /* 입사일 */
             , RETR_DATE /* 퇴사일 */
             , WORK_GUBN /* 구분 */
             , WAGE_TOTL /* 급여액 */
             , BONU_TOTL /* 상여액 */
             , PAYX_TOTL /* 총지급액 */
             , DEPT_CODE /* 부서코드 */
             , OPOS_CODE
             , SORT_ORDR
          FROM TEMP1
         UNION ALL
        SELECT A.EMPL_NUMB                                            /* 사번 */
             , B.EMPL_NAME                                            /* 성명 */
             , SF_GET_SECTNAME(B.DEPT_CODE) AS SECT_NAME              /* 소속명 */
             , SF_GET_DEPTNAME(B.DEPT_CODE) AS DEPT_NAME              /* 부서명 */
             , D.COMD_CDNM AS OPOS_NAME                               /* 직위명 */
             , A.ENCO_DATE                                            /* 입사일 */
             , A.RETR_DATE                                            /* 퇴사일 */
             , A.WORK_GUBN                                            /* 구분 */
             , A.WAGE_TOTL                                            /* 급여액 */
             , A.BONU_TOTL                                            /* 상여액 */
             , A.WAGE_TOTL + A.BONU_TOTL AS PAYX_TOTL                 /* 총지급액 */
             , C.DEPT_CODE                                            /* 부서코드 */
             , B.OPOS_CODE
             , A.SORT_ORDR
          FROM( SELECT /* 비고 */
                       A.EMPL_NUMB
                     , SF_GET_EMPLNAME(A.EMPL_NUMB) AS EMPL_NAME
                     , E.ENCO_DATE
                     , E.RETR_DATE
                     , '' AS WORK_GUBN
                     , SUM(CASE WHEN B.EXPD_CODE NOT IN ('A0055', 'A0053', 'A9005', 'A0064') AND B.EXPD_CODE LIKE 'A%' THEN NVL(B.EXPD_AMOT,0)+NVL(B.RTRC_AMOT,0) ELSE 0 END) AS WAGE_TOTL
                     , SUM(CASE WHEN B.EXPD_CODE IN ('A0055', 'A0053', 'A0064')  THEN NVL(B.EXPD_AMOT,0)+NVL(B.RTRC_AMOT,0) ELSE 0 END) AS BONU_TOTL
                     , 40 AS SORT_ORDR
                  FROM PY_PMMAST A
                 INNER JOIN PY_PMDETL B
                         ON A.PAYX_DATE = B.PAYX_DATE
                        AND A.WAGE_CODE = B.WAGE_CODE
                        AND A.EMPL_NUMB = B.EMPL_NUMB
                 INNER JOIN  PY_PMDIRY C
                         ON A.PAYX_DATE = C.PAYX_DATE
                        AND A.WAGE_CODE = C.WAGE_CODE
                  LEFT OUTER JOIN VI_DEPTXM D
                               ON A.DEPT_CODE = D.DEPT_CODE
                  LEFT OUTER JOIN HR_MASTXM E
                               ON A.EMPL_NUMB = E.EMPL_NUMB
                 WHERE B.EXPD_AMOT <> 0
                   AND SUBSTR(C.WAGE_YMTH,0, 4) =  #WAGE_YMTH#
                 GROUP BY A.EMPL_NUMB,E.ENCO_DATE, E.RETR_DATE
               ) A
          LEFT OUTER JOIN TABLE(SF_HR_MASTXM(A.EMPL_NUMB, (SELECT MAX(A.PAYX_DATE)
                                                             FROM PY_PMDIRY A
                                                            WHERE SUBSTR(A.WAGE_YMTH,0,4) = #WAGE_YMTH#))) B
                       ON A.EMPL_NUMB = B.EMPL_NUMB
          LEFT OUTER JOIN TABLE(SF_TM_DEPTXM( (SELECT MAX(A.PAYX_DATE)
                                                 FROM PY_PMDIRY A
                                                WHERE SUBSTR(A.WAGE_YMTH,0,4) = #WAGE_YMTH#))) C
                       ON B.DEPT_CODE = C.DEPT_CODE
          LEFT OUTER JOIN TM_CODEXD D
                       ON D.COMM_CODE = 'OPOS_CODE'
                      AND D.COMD_CODE = B.OPOS_CODE
         WHERE A.EMPL_NUMB NOT IN ( SELECT EMPL_NUMB
                                      FROM TEMP1 )
		]]>
         <isNotEmpty prepend="AND" property="EMPL_NUMB">
              A.EMPL_NUMB = #EMPL_NUMB#
         </isNotEmpty>
         <isNotEmpty prepend="AND" property="DEPT_CODE">
              C.DEPT_FCOD LIKE SF_GET_DEPTFCOD(#DEPT_CODE#) || '%'
         </isNotEmpty>
    </select>
</sqlMap>
