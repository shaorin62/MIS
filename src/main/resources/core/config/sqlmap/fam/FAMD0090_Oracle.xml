<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
		"http://ibatis.apache.org/dtd/sql-map-2.dtd">
                                                                                                                      
<sqlMap namespace="FAMD0090">
<!-- 
/*******************************************************************************
   작 성 자 : 권미영
   작 성 일 : 2016.12.26
   내    용 : 거래처별미결잔액현황
******************************************************************************* */
 -->
	<select id="FAMD0090.SEARCH00" parameterClass="hashmap" resultClass="hashmap">
	<![CDATA[
		WITH WT_SLIP AS ( /* FAMD0090.SEARCH00 거래처별미결잔액현황 조회 */ 
				SELECT C.COND_VACD AS CUST_CODE	/* 거래처코드 */
		             , SF_GET_CONDVANM(SF_GET_CONDCOLM(C.COND_CODE), C.COND_VACD) AS CUST_NAME /* 거래처명 */
		             , CASE WHEN C.COND_CODE = '0002' THEN NVL(D2.BIZR_NUMB, D2.RERN_NUMB)
		             		WHEN C.COND_CODE = '0001' THEN D1.BIZR_NUMB END AS BIZR_NUMB	/* 사업자번호 */
		             , A.ACCT_INTL	/* 계정코드 */
		             , B.ACCT_NAME	/* 계정명 */               
	                 , CASE WHEN ACCT_DATE < #ACCT_DAT1# THEN DECODE(A.DRCR_GUBN, B.DRCR_GUBN, A.SLIP_AMNT, 0) ELSE 0 END AS SLIP_BEFO	/* 이월발생액 */
	                 , CASE WHEN ACCT_DATE BETWEEN #ACCT_DAT1# AND #ACCT_DAT2# THEN DECODE(A.DRCR_GUBN, B.DRCR_GUBN, A.SLIP_AMNT, 0) ELSE 0 END AS SLIP_AMNT	/* 당월발생액 */
	                 , NVL(E.BANJ_BEFO, 0) AS BANJ_BEFO	/* 이월정산액 */
	                 , NVL(E.BANJ_AMNT, 0) AS BANJ_AMNT	/* 당월정산액 */
	                 , A.REMK_NAME	/* 적요 */
		          FROM TA_SLIPNT A
		               INNER JOIN TA_ACCTXM B        /* [계정코드] */
		                  	   ON A.ACCT_INTL = B.ACCT_INTL
		                 	  AND B.GUNB_YSNO = 1    /* 건별반제관리항목 */
		               LEFT  JOIN TA_ACCTXD F
		               		   ON B.ACCT_INTL = F.ACCT_INTL
		               		  AND F.UNUS_YSNO = 1	/* 미결사용 */
		               LEFT  JOIN TA_SLIPRF C
		                  	   ON A.SLIP_NUMB = C.SLIP_NUMB
		                 	  AND A.SLIP_LINE = C.SLIP_LINE
		                      AND C.COND_CODE = F.COND_CODE
		               LEFT  JOIN TA_CUSTXM D2
		               		   ON C.COND_CODE = '0002'	/* 거래처 */
		               		  AND C.COND_VACD = D2.CUST_CODE
					   LEFT  JOIN TA_BANKBR D1
		               		   ON C.COND_CODE = '0001'	/* 금융기관 */
		               		  AND C.COND_VACD = D1.BABR_CODE
		               LEFT  JOIN ( /* 정산금액 */
			                        SELECT A.OSLI_NUMB
			                             , A.OSLI_LINE
			                             , SUM(CASE WHEN ACCT_DATE < #ACCT_DAT1# THEN DECODE(A.DRCR_GUBN, B.DRCR_GUBN, A.SLIP_AMNT * -1, A.SLIP_AMNT) ELSE 0 END) AS BANJ_BEFO	/* 이월정산액 */
			                             , SUM(CASE WHEN ACCT_DATE BETWEEN #ACCT_DAT1# AND #ACCT_DAT2# THEN DECODE(A.DRCR_GUBN, B.DRCR_GUBN, A.SLIP_AMNT * -1, A.SLIP_AMNT) ELSE 0 END) AS BANJ_AMNT	/* 당월정산액 */
			                          FROM TA_SLIPNT A
			                         	   INNER JOIN TA_ACCTXM B
						                           ON A.ACCT_INTL = B.ACCT_INTL
						                          AND B.GUNB_YSNO = 1	/* 건별반제관리항목 */
			                         WHERE A.ACCT_DATE IS NOT NULL
			                           AND A.OSLI_NUMB IS NOT NULL		/* 미결 정산만을 대상으로 */
			                           AND A.ACCT_DATE <= #ACCT_DAT2#
			                         GROUP BY A.OSLI_NUMB
			                         	 , A.OSLI_LINE
		                        ) E
		                   	   ON A.SLIP_NUMB = E.OSLI_NUMB
		                   	  AND A.SLIP_LINE = E.OSLI_LINE
		         WHERE A.ACCT_UNIT  = #ACCT_UNIT#
		           AND A.ACCT_DATE <= #ACCT_DAT2#
		           AND A.OSLI_NUMB IS NULL           /* 미결 발생만을 대상으로 */
	               AND (CASE WHEN ACCT_DATE BETWEEN #ACCT_DAT1# AND #ACCT_DAT2# THEN DECODE(A.DRCR_GUBN, B.DRCR_GUBN, A.SLIP_AMNT, 0) ELSE 0 END <> 0	/* 당월발생액有 */
	               		OR NVL(E.BANJ_AMNT, 0) <> 0		/* 당월정산액有 */
	               		OR CASE WHEN ACCT_DATE < #ACCT_DAT1# THEN DECODE(A.DRCR_GUBN, B.DRCR_GUBN, A.SLIP_AMNT, 0) ELSE 0 END
		                 + CASE WHEN ACCT_DATE BETWEEN #ACCT_DAT1# AND #ACCT_DAT2# THEN DECODE(A.DRCR_GUBN, B.DRCR_GUBN, A.SLIP_AMNT, 0) ELSE 0 END
		                 - NVL(E.BANJ_BEFO, 0)
		                 - NVL(E.BANJ_AMNT, 0) <> 0		/* 잔액有 */
		             )
	]]>
    	<isNotEmpty property = "ACCT_INT1" prepend = "AND">
     	<![CDATA[
		           A.ACCT_INTL >= #ACCT_INT1# /* 계정과목 */
        ]]>       
        </isNotEmpty>
    	<isNotEmpty property = "ACCT_INT2" prepend = "AND">
     	<![CDATA[
		           A.ACCT_INTL <= #ACCT_INT2# /* 계정과목 */
        ]]>       
        </isNotEmpty>
        <isNotEmpty property = "CUST_CODE" prepend = "AND">
     	<![CDATA[
		           C.COND_VACD = #CUST_CODE# /* 거래처 */
        ]]>       
        </isNotEmpty>
	<![CDATA[
		) 
    	SELECT A.CUST_CODE	/* 거래처코드 */
             , A.CUST_NAME 	/* 거래처명 */
             , A.BIZR_NUMB	/* 사업자번호 */
             , NVL(A.CUST_CODE, 'ZZZZZZZZZZ') AS SORT_CUST
             , NVL(A.BIZR_NUMB, 'ZZZZZZZZZZ') AS SORT_BIZR
             , A.ACCT_INTL	/* 계정코드 */
             , A.ACCT_NAME	/* 계정명 */
             , SUM(A.SLIP_BEFO) - SUM(A.BANJ_BEFO) AS OVER_AMNT	/* 이월잔액 */
             , SUM(A.SLIP_AMNT) AS SLIP_AMNT	/* 당월발생액 */
             , SUM(A.BANJ_AMNT) AS BANJ_AMNT	/* 당월정산액 */             
             , SUM(A.SLIP_BEFO) + SUM(A.SLIP_AMNT) - SUM(A.BANJ_BEFO) - SUM(A.BANJ_AMNT) AS BALA_AMNT	/* 잔액 */
             , MAX(CASE WHEN A.SLIP_AMNT = B.MAXX_AMNT THEN A.REMK_NAME END) REMK_NAME	/* 잔액 존재하는 발생 전표의 금액 중 대표금액의 적요 */
		  FROM WT_SLIP A
	           LEFT JOIN (	/* 잔액 존재하는 발생 전표의 금액 중 대표금액 */
		                    SELECT CUST_CODE
		                         , ACCT_INTL
		                         , MAX(SLIP_AMNT) AS MAXX_AMNT
		                      FROM WT_SLIP 
		                    GROUP BY CUST_CODE
		                         , ACCT_INTL
	                   ) B
	                  ON A.ACCT_INTL = B.ACCT_INTL
	                 AND A.CUST_CODE = B.CUST_CODE
	                 AND A.SLIP_AMNT = B.MAXX_AMNT
	     GROUP BY A.CUST_CODE
             , A.CUST_NAME
             , A.BIZR_NUMB
             , A.ACCT_INTL
             , A.ACCT_NAME
	    HAVING SUM(A.SLIP_AMNT) <> 0	/* 당월발생액有 */
	    	OR SUM(A.BANJ_AMNT) <> 0	/* 당월정산액有 */
	    	OR SUM(A.SLIP_BEFO) + SUM(A.SLIP_AMNT) - SUM(A.BANJ_BEFO) - SUM(A.BANJ_AMNT) <> 0	/* 잔액有 */
	     ORDER BY A.BIZR_NUMB
	     	 , A.ACCT_INTL
	]]>
	</select>
	
</sqlMap>
