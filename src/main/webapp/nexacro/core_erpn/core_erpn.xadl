<?xml version="1.0" encoding="utf-8"?>
<ADL version="1.2">
  <TypeDefinition url="default_typedef.xml"/>
  <GlobalVariables url="globalvars.xml"/>
  <Application id="core_erpx" codepage="utf-8" language="Korean" loginformurl="" loginformstyle="" windowopeneffect="" windowcloseeffect="" version="" tracemode="" onload="application_onload" themeid="inbus.xtheme" licenseurl="nexacro14_client_license.xml" httptimeout="600" onloadforms="application_onloadforms">
    <Layout>
      <MainFrame id="mainframe" title="maintitle" defaultfont="" resizable="true" showtitlebar="true" showstatusbar="false" position="absolute" openalign="center middle" style="border:1 solid #858585ff ;bordertype:normal 0 0 ;font:antialias 9 Dotum;titlebarheight:33;" left="0" width="1051" top="0" height="834" titletext="신경영정보시스템">
        <VFrameSet id="VFrameSet" separatesize="0,*">
          <Frames>
            <ChildFrame id="FRMTOP" showtitlebar="false" style="border:0px none white ;" dragmovetype="none" resizable="true" position="fixed"/>
            <HFrameSet id="HFrameSet" separatesize="0,*">
              <Frames>
                <ChildFrame id="FRMLEFT" showtitlebar="false" style="border:0px none white ;" dragmovetype="none" autosize="false" resizable="true"/>
                <VFrameSet id="FRMBODY">
                  <Frames>
                    <FrameSet id="MAIN_WORK" style="background:#ffffffff;"/>
                    <ChildFrame id="FRMBOTTOM" showtitlebar="false" dragmovetype="none" resizable="true" showtitleicon="false"/>
                    <ChildFrame id="FRMDASHBOARD" dragmovetype="none" resizable="true" showtitlebar="false" showtitleicon="false"/>
                  </Frames>
                </VFrameSet>
              </Frames>
            </HFrameSet>
          </Frames>
        </VFrameSet>
      </MainFrame>
    </Layout>
    <ScreenInfo/>
    <Script type="xscript5.0"/>
    <Style url="css::Common_P.css"/>
    <Style url="css::Frame_P.css"/>
    <Style url="css::Work_P.css"/>
  </Application>
  <Script type="xscript5.0"><![CDATA[/*******************************************************************************************
 
 - 넥사크로플랫폼 기본 실행 전역 스크립트
 @name comLogin.xfdl
 @version 1.4
 @author 김석두
 @fileOverview
    본 Script는 Launch Project를 통해 실행될 때 의미가 있습니다
    Login, MainFrame 설정 등 기본 소스만 추가 합니다. 되도록 본 소스는 수정하지 않습니다.
	소스의 수정 및 추가 시 반드시 해당 P/L의 승인 후 작업하세요!!
 @description
    date			name		explanation
    ==================================================================
    2014.07.03		ksd			최초 작성
    2016.05.29		jsh			프레임워크 교체로 수정
    ==================================================================
    
 *******************************************************************************************/

include "script::lib_script_common.xjs"
include "script::lib_base64.xjs"

application.FRMTOP		 = undefined; //Frame Name - Top
application.FRMLEFT		 = undefined; //Frame Name - Left
application.FRMBODY		 = undefined; //Frame Name - Body
application.MAINWORK	 = undefined; //Frame Name - 작업영역
application.FRMBOTTOM	 = undefined; //Frame Name - 하단 영역
application.FRMDASHBOARD = undefined; //Frame Name - 대시보드

this.application_onload = function (obj:Object, e:LoadEventInfo) {

	application.GBL_USERID = "";
	
	// 브라우저 언어셋 이용하여 기본 언어코드 설정
	var lang = nexacro.BrowserLang;
		
	if (lang.indexOf("-") > -1) {
		lang = lang.substring(0, lang.indexOf("-"));
	} else if (lang.indexOf("_") > -1) {
		lang = lang.substring(0, lang.indexOf("_"));
	}
	
	if (lang.length == 0) {
		lang = "ko";
	}
	
	application.GBL_LANGCD = lang.toLowerCase();
	
	
	//SDI Menu ID passed by main.jsp
	if (this.IsNull(application.sdiMenuId)) {
		application.GBL_SDIMENUNAME = "";
	} else {
		application.GBL_SDIMENUNAME = application.sdiMenuId;
	}

	//Frame type passed by main.jsp
	if (this.IsNull(application.frameType)) {
		application.GBL_FRAMETYPE = "MDI"; 
	} else {
		application.GBL_FRAMETYPE = application.frameType; 
	}

	//Server type passed by main.jsp
	if (this.IsNull(application.serverType)) {
		application.GBL_SERVERGUBUN = "LOCAL"; 
	} else {
		application.GBL_SERVERGUBUN = application.serverType; 
	}
	
	//SSO - UserId
	if (this.IsNull(application.ssoUserId)) {
		application.GBL_USERID = "";
	} else {
		application.GBL_USERID = application.ssoUserId;
	}
	
	//SSO - SystemCode
	if (this.IsNull(application.systemType)) {
		application.GBL_SYSTCD = "HMS";
	} else {
		application.GBL_SYSTCD = application.systemType.toUpperCase();
	}
	
	//SSO - FrameType & Menu
	if (this.IsNull(application.sdiMenuId) && application.GBL_FRAMETYPE == "MDI") {
		application.GBL_SDIMENUNAME = "";
	} else {
		application.GBL_SDIMENUNAME = "M" + application.sdiMenuId.toUpperCase();	//SDI
	}	
	
	// 브라우저를 통하는 경우에는 실제 접속한 주소를 이용하여 처리
	if (nexacro.Browser != 'Runtime') {
		// IP 접근시 허용되도록 'LOCAL' 처리 제외
		//if (application.GBL_SERVERGUBUN != "LOCAL") {
			application.GBL_HTTPURL = application.svcDomain;
		//}
	}
	
	application.mainframe.set_titletext(application.mainframe.titletext);
	if (application.GBL_SERVERGUBUN == "LOCAL") {
		application.mainframe.set_titletext(application.mainframe.titletext + " - Local 서버");
	} else if (application.GBL_SERVERGUBUN == "TEST") {
		application.mainframe.set_titletext(application.mainframe.titletext + " - Test 서버");
	}
	
	// 코어 설정값 & 전역변수 셋
	application.GBL_RPTURL  = application.GBL_HTTPURL + "/NSCOM_MIS/server";
	application.GBL_GROUPWAREURL = "";	// "http://localhost:9030/NSCOM_MIS/jsp/gian/gian2.jsp";
	application.GBL_APPROVALURL = application.approvalCallUrl;	// 전자결재URL
	
	
	// NSCOM :: 프레임 작업 전 임시 표준 업무 사이즈를 위하여 처리.
	application.mainframe.set_width(1280);
	application.mainframe.set_height(868);

	//Main Frame Setting
	application.FRMTOP   = application.mainframe.VFrameSet.FRMTOP;
	application.FRMLEFT  = application.mainframe.VFrameSet.HFrameSet.FRMLEFT;
	application.FRMBODY  = application.mainframe.VFrameSet.HFrameSet.FRMBODY;
	application.MAINWORK = application.mainframe.VFrameSet.HFrameSet.FRMBODY.MAIN_WORK;
	application.FRMBOTTOM = application.mainframe.VFrameSet.HFrameSet.FRMBODY.FRMBOTTOM;
	application.FRMDASHBOARD = application.mainframe.VFrameSet.HFrameSet.FRMBODY.FRMDASHBOARD;
	
	application._SVCENV = "SOLUTION";
	application._SVCENV = "CUSTOMER";	// 항상 고정으로 고객사용 처리
	
	//SSO Pass then bypass nor Login Show
	if (this.IsNull(application.GBL_USERID)) {
		
		this.application_resizeframe(nexacro.Browser);
		
		//Login Page를 위한 ChildFrame 생성
		var newChild = new nexacro.ChildFrame;
		newChild.init("System Login", "absolute", 0, 0, 0, 0, null, null, "common::comLogin.xfdl");
		newChild.set_dragmovetype("none");
		newChild.set_layered("true");
		newChild.set_openalign("center middle");
		newChild.set_showtitlebar(false);
		newChild.set_resizable(true);
		newChild.showModal(application.mainframe.VFrameSet.HFrameSet.FRMLEFT, {}, this, "fn_popupAfter", true);

	} else {

		// SSO 로그인 처리 별도 호출
		var sOutDataSet = "";
		var sArgument    = " USER_IDXX=" + this.base64Encode(application.GBL_USERID);
			sArgument	+= " SYSTEM=" + this.base64Encode(application.GBL_SYSTCD);

		this.fnc_TransactionCall(this, "ComLogin", "SSOLogin", "", sOutDataSet, sArgument, "fn_LoginResult", false);
	
	}
	
}

this.fn_popupAfter = function(sPopupId, Variant) {

	//정상적으로 로그인 하지 않았다면 시스템을 종료합니다.
	if (Variant != true){
	
		if (application.GBL_SERVERGUBUN == "LOCAL") {
			application.exit();
		}else{
			window.top.close();
		}
		
		return;
	}
	
	//메뉴 및 메시지 정보 다운
	var sOutDataSet = "dsMenuList=dsMenuList dsMessage=dsMessage dsMyMenuList=dsMyMenuList";
	var sArgument    = " USER_IDXX=" + this.base64Encode(application.GBL_USERID);
		sArgument	+= " SYST_CODE=" + this.base64Encode(application.GBL_SYSTCD);

	this.fnc_TransactionCall(this, "ComLogin", "Mainframe", "", sOutDataSet, sArgument, "fn_CallBack", false);
	
}

this.fn_LoginResult = function (sMethodName, ErrorCode, ErrorMSG) {

	if (ErrorCode < 0) {

		this.alert("사용 권한이 없는 사용자 입니다!");
		application.GBL_USERID = "";
		application.GBL_USERNM = "";
		application.GBL_DEPTNM = "";
		
		if (application.GBL_SERVERGUBUN == "LOCAL") {
			application.exit();
		} else {
			window.top.close();
		}
		
		return;
	}
	
	this.fn_popupAfter("", true);
	
}

/*------------------------------------+
 |  Transaction 후 처리 해야 할 내용!  |
 +-------------------------------------*/
this.fn_CallBack = function (sMethodName, ErrorCode, ErrorMSG) {
	
	if (ErrorCode < 0) {

		this.alert("사용 권한이 없는 사용자 입니다!");
		application.GBL_USERID = "";
		application.GBL_USERNM = "";
		application.GBL_DEPTNM = "";
		
		if (application.GBL_SERVERGUBUN == "LOCAL") {
			application.exit();
		} else {
			window.top.close();
		}
		
		return;
	}
	
	//프레임 상단 타이틀 변경(로그인 사용자 정보 추가)
	var sTitleText = application.mainframe.titletext + " - " + application.GBL_USERNM;
	sTitleText += application.GBL_USERID == application.GBL_EMPLNO ? "(" + application.GBL_USERID + ")" : "(" + application.GBL_USERID + ")" + "(" + application.GBL_EMPLNO + ")";
	application.mainframe.set_titletext(sTitleText);
	
	// SSO를 통하여 전달받은 파라미터가 있다면...
	if (application.isSSOAuth == "true") {
		
		if (application.ssoParam != "") {
			application.parseCallerArgs();
		}
		
	}
	
	//SDI Mode Frame Setting
	if (application.GBL_FRAMETYPE == "SDI") {

 		if (application.GBL_SDIMENUNAME == "") {

			this.alert("사용 권한이 없는 사용자 입니다!");
			application.GBL_USERID = "";
			application.GBL_USERNM = "";
			application.GBL_DEPTNM = "";
			
			if (application.GBL_SERVERGUBUN == "LOCAL") {
				application.exit();
			} else {
				window.top.close();
			}
			return;
			
 		}
		
		var iRow = application.dsMenuList.findRow("MENU_IDXX", application.GBL_SDIMENUNAME);
		
		if (iRow < 0) {
		
			this.alert("잘못된 경로(메뉴)입니다!");
			application.GBL_USERID = "";
			application.GBL_USERNM = "";
			application.GBL_DEPTNM = "";
			
			if (application.GBL_SERVERGUBUN == "LOCAL") {
				application.exit();
			} else {
				window.top.close();
			}
			return;
		
		}
		
		// 새로운 프레임 적용 - SDI 형태로 표시
		application.mainframe.VFrameSet.set_separatesize("0,*");
		application.mainframe.VFrameSet.HFrameSet.set_separatesize("0,*");
		application.mainframe.VFrameSet.HFrameSet.FRMBODY.set_separatesize("*,0,0");
		
		//application.FRMLEFT.set_formurl("frame::leftFrame.xfdl");
		//application.FRMTOP.set_formurl("frame::topFrame.xfdl");
		application.FRMBOTTOM.set_formurl("frame::mdiFrame.xfdl");
		
		// 단일 SDI는 화면부터 조정
		this.application_resizeframe(nexacro.Browser, true);

		var sDisplay   = "maximize";
		var sFormID    = application.dsMenuList.getColumn(iRow, "MENU_IDXX");
		var sProgID    = application.dsMenuList.getColumn(iRow, "PROG_IDXX");
		var sFormCapt  = application.dsMenuList.getColumn(iRow, "MENU_NAME");
		var sFormLoca  = application.dsMenuList.getColumn(iRow, "MENU_FUNM");
		var sUserAuth  = application.dsMenuList.getColumn(iRow, "USER_AUTH");
		var sFilePath  = application.dsMenuList.getColumn(iRow, "PROG_PATH");
		var sAuthLevel = application.dsMenuList.getColumn(iRow, "ATHR_LEVL");

		var sArgument  = new Array();
			sArgument[0] = sFormCapt + "[" + sProgID + "]";
			sArgument[1] = sFormLoca;
			sArgument[2] = sUserAuth;
			sArgument[3] = sAuthLevel;
		
		this.fnc_NewWindow(sFormID, sFormCapt, sFilePath + "::" + sProgID + ".xfdl", sArgument, 1204, 717, sDisplay, -1, -1);
		
	} else {
		
		// 새로운 프레임 적용
		application.mainframe.VFrameSet.set_separatesize("50,*");
		application.mainframe.VFrameSet.HFrameSet.set_separatesize("290,*");
		application.mainframe.VFrameSet.HFrameSet.FRMBODY.set_separatesize("0,0,*");
		
		application.FRMLEFT.set_formurl("frame::leftFrame.xfdl");
		application.FRMTOP.set_formurl("frame::topFrame.xfdl");
		application.FRMBOTTOM.set_formurl("frame::mdiFrame.xfdl");
		
		if (application._SVCENV == "SOLUTION") {
			application.FRMDASHBOARD.set_formurl("main::dashboard_common.xfdl");
		} else {
			application.FRMDASHBOARD.set_formurl("main::dashboard_custom.xfdl");
		}
		
	}
	
	// 로컬 또는 브라우저의 구분이 필요없이 런타임/일반 브라우저에 따라
	// 실행화면을 조정
	this.application_resizeframe(nexacro.Browser, false);
	
}

this.application_onloadforms = function(obj:Application, e:nexacro.LoadEventInfo) {

	if (application.GBL_FRAMETYPE == "MDI") {

		var iRow = application.dsMenuList.findRow("MENU_IDXX", "MHRMB0011");
		if (iRow < 0) iRow = application.dsMenuList.findRow("MENU_IDXX", "MPIMA0010");
		if (iRow < 0) return;
		
		var sDisplay   = "maximize";
		var sFormID    = application.dsMenuList.getColumn(iRow, "MENU_IDXX");
		var sProgID    = application.dsMenuList.getColumn(iRow, "PROG_IDXX");
		var sFormCapt  = application.dsMenuList.getColumn(iRow, "MENU_NAME");
		var sFormLoca  = application.dsMenuList.getColumn(iRow, "UPXX_NAME");
		var sUserAuth  = application.dsMenuList.getColumn(iRow, "USER_AUTH");
		var sFilePath  = application.dsMenuList.getColumn(iRow, "PROG_PATH");
		var sAuthLevel = application.dsMenuList.getColumn(iRow, "AUTH_LEVE");

		var sArgument  = new Array();
			sArgument[0] = sFormCapt + "[" + sProgID + "]";
			sArgument[1] = sFormLoca;
			sArgument[2] = sUserAuth;
			sArgument[3] = sAuthLevel;
		this.fnc_NewWindow(sFormID, sFormCapt, sFilePath + "::" + sProgID + ".xfdl", sArgument, 1187, 717, sDisplay, -1, -1);

	}
	
}


/**
 * 프레임 크기를 조정한다.
 */
this.application_resizeframe = function(browser, sdiOpen) {
	
	if (browser == "Runtime") {
		// NSCOM 업무영역 사이즈가 퍼블리싱 사이즈에 맞게 나오도록 적용
		application.mainframe.set_height(868);
		application.mainframe.set_width(1510);
	} else {
		
		// 화면을 전체화면으로 오픈하지 않는다.
		var sScreen = system.getScreenResolution(1);
		var iXY = sScreen.split(" ");

		//var w = 1510;		// 좌측 메뉴목록을 펼쳐놓은게 기본일 때 화면 총 넓이 - WORKFRAME 적용 시
		var w = 1280;		// 좌측 메뉴목록을 접어놓은것이 기본인 상태일때
		var h = 868;
		
		// 화면 가로 해상도 체크
		if (iXY[0] > 1280) {
			w = 1510;
			application._wideview = true;
		} else {
			application._wideview = false;
		}
		
		// 메뉴트리는 기본으로 보이도록, 또한 자동으로 메뉴 열 때 숨기지 않도록.
		application._wideview = true;
		
		// 싱글 SDI 화면 오픈 시에는 화면 사이즈는 최소
		if (sdiOpen == true) {
			w = 1204 + 16;
			h = 717 + 67;
		}
		//alert("w = " + w + ", h = " + h + ", sdiOpen = " + sdiOpen);
		window.top.resizeTo(w, h);	// Non WorkFrame - (NSCOM)

	}
}


/**
 * SSO 등 접속을 통하여 페이지 접속 시 전달 된 쿼리 파라미터를 처리
 */
application.parseCallerArgs = function() {
	
	try {
	
	var dsArgs = application.dsFrontArgs;
	var argsStr = application.ssoParam;
	var arrArgs = null;
	var eachArg = null;
	var nRow = 0;
	
	if (argsStr.length > 0) {
		
		arrArgs = argsStr.split("&");
		
		for(var idx in arrArgs) {
			eachArg = arrArgs[idx].split("=");
			nRow = dsArgs.addRow();
			dsArgs.setColumn(nRow, "ARGS_NAME", eachArg[0]);
			dsArgs.setColumn(nRow, "ARGS_VALU", eachArg[1]);
		}
		
	}
	
	} catch(e) {
		trace("----- Args parse error...");
	}
	
}
]]></Script>
</ADL>
